<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Text.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Normal.Border.Brush}" />
        <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Normal.Background.Brush}" />
        <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Normal.Foreground.Brush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource MsixHero.TextBox.Normal.Foreground.Brush}" />
        <Setter Property="BorderThickness" Value="{StaticResource MsixHero.Button.Normal.Border.Thickness}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Normal.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Normal.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Normal.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="false" />
                    <Condition Property="IsFocused" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Focused.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Focused.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Focused.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Hovered.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Hovered.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Hovered.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Readonly.Normal.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Readonly.Normal.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Readonly.Normal.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="true" />
                    <Condition Property="IsFocused" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Readonly.Focused.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Readonly.Focused.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Readonly.Focused.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Readonly.Hovered.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Readonly.Hovered.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Readonly.Hovered.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="{StaticResource MsixHero.Brushes.Validation}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                    <Condition Property="Validation.HasError" Value="False" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Editing.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Editing.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Editing.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                    <Condition Property="Validation.HasError" Value="False" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource MsixHero.TextBox.Editing.Border.Brush}" />
                    <Setter Property="Background" Value="{StaticResource MsixHero.TextBox.Editing.Background.Brush}" />
                    <Setter Property="Foreground" Value="{StaticResource MsixHero.TextBox.Editing.Foreground.Brush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="PasswordBox" x:Key="{x:Type PasswordBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="#FFEEC6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style TargetType="RadioButton" x:Key="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type xctk:ButtonSpinner}" x:Key="{x:Type xctk:ButtonSpinner}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="#FFEEC6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" x:Key="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="#FFEEC6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="DataValueTextBlock" BasedOn="{StaticResource TextBlock}">
        <Setter Property="Margin" Value="-1 0 0 8" />
    </Style>

    <Style TargetType="{x:Type GroupItem}" x:Key="GroupStyle">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <Border DockPanel.Dock="Top" Background="#F0F0F0" Height="24">
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Right" FontWeight="SemiBold" VerticalAlignment="Center" Margin="10 0">
                                    <Run Text="{Binding ItemCount, Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock FontWeight="SemiBold" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="10 0 0 0">
                                    <Run Text="{Binding Name, Mode=OneWay}" />
                                </TextBlock>
                            </DockPanel>
                        </Border>
                        <ItemsPresenter />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBlock">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="ComboBoxItem" x:Key="{x:Type ComboBoxItem}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

</ResourceDictionary>