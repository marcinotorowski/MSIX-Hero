//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Otor.MsixHero.App.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Otor.MsixHero.App.Resources.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string AllFiles {
            get {
                return ResourceManager.GetString("AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM.
        /// </summary>
        public static string Architecture_ARM {
            get {
                return ResourceManager.GetString("Architecture_ARM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM 64-bit.
        /// </summary>
        public static string Architecture_ARM64 {
            get {
                return ResourceManager.GetString("Architecture_ARM64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse….
        /// </summary>
        public static string Button_Browse {
            get {
                return ResourceManager.GetString("Button_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Button_Cancel {
            get {
                return ResourceManager.GetString("Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Button_Clear {
            get {
                return ResourceManager.GetString("Button_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Button_Save {
            get {
                return ResourceManager.GetString("Button_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3D Objects.
        /// </summary>
        public static string Capability_3d {
            get {
                return ResourceManager.GetString("Capability_3d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessory Management.
        /// </summary>
        public static string Capability_AccessoryManagement {
            get {
                return ResourceManager.GetString("Capability_AccessoryManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Close Confirmation.
        /// </summary>
        public static string Capability_AppCloseConfirmation {
            get {
                return ResourceManager.GetString("Capability_AppCloseConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install and query apps (OEM).
        /// </summary>
        public static string Capability_AppLicensing {
            get {
                return ResourceManager.GetString("Capability_AppLicensing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically accept VoIP calls.
        /// </summary>
        public static string Capability_AutoVoIP {
            get {
                return ResourceManager.GetString("Capability_AutoVoIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background media playback.
        /// </summary>
        public static string Capability_BackgroundMedia {
            get {
                return ResourceManager.GetString("Capability_BackgroundMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Firmware and BIOS.
        /// </summary>
        public static string Capability_Bios {
            get {
                return ResourceManager.GetString("Capability_Bios", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broad Filesystem Access.
        /// </summary>
        public static string Capability_BroadFs {
            get {
                return ResourceManager.GetString("Capability_BroadFs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call History.
        /// </summary>
        public static string Capability_CallHistory {
            get {
                return ResourceManager.GetString("Capability_CallHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera Processing Extension.
        /// </summary>
        public static string Capability_CameraProcExt {
            get {
                return ResourceManager.GetString("Capability_CameraProcExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control over cellular device.
        /// </summary>
        public static string Capability_Cellular {
            get {
                return ResourceManager.GetString("Capability_Cellular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access celullar identification data.
        /// </summary>
        public static string Capability_CellularIdentity {
            get {
                return ResourceManager.GetString("Capability_CellularIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make use of SMS and RCS.
        /// </summary>
        public static string Capability_CellularMsg {
            get {
                return ResourceManager.GetString("Capability_CellularMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure WAP-based services.
        /// </summary>
        public static string Capability_ConfigureWAP {
            get {
                return ResourceManager.GetString("Capability_ConfigureWAP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom devices.
        /// </summary>
        public static string Capability_CustomDevices {
            get {
                return ResourceManager.GetString("Capability_CustomDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data usage Management.
        /// </summary>
        public static string Capability_DataUsageMgmt {
            get {
                return ResourceManager.GetString("Capability_DataUsageMgmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Development Mode Network.
        /// </summary>
        public static string Capability_DevelopmentModeNetwork {
            get {
                return ResourceManager.GetString("Capability_DevelopmentModeNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documents.
        /// </summary>
        public static string Capability_Documents {
            get {
                return ResourceManager.GetString("Capability_Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Driver access.
        /// </summary>
        public static string Capability_DriverAccess {
            get {
                return ResourceManager.GetString("Capability_DriverAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dual SIM Tiles.
        /// </summary>
        public static string Capability_DualSim {
            get {
                return ResourceManager.GetString("Capability_DualSim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elevation.
        /// </summary>
        public static string Capability_Elevation {
            get {
                return ResourceManager.GetString("Capability_Elevation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email Access.
        /// </summary>
        public static string Capability_Email {
            get {
                return ResourceManager.GetString("Capability_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Shared Storage.
        /// </summary>
        public static string Capability_EnterpriseSharedStorage {
            get {
                return ResourceManager.GetString("Capability_EnterpriseSharedStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Cloud Single Sign On.
        /// </summary>
        public static string Capability_EnterpriseSSO {
            get {
                return ResourceManager.GetString("Capability_EnterpriseSSO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extended Background Task Time.
        /// </summary>
        public static string Capability_ExtendedBgTaskTime {
            get {
                return ResourceManager.GetString("Capability_ExtendedBgTaskTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extended Execution Background Audio.
        /// </summary>
        public static string Capability_ExtendedExecBgAudio {
            get {
                return ResourceManager.GetString("Capability_ExtendedExecBgAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First-Time Sign-in Settings.
        /// </summary>
        public static string Capability_FirstTimeSignIn {
            get {
                return ResourceManager.GetString("Capability_FirstTimeSignIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foreground observation.
        /// </summary>
        public static string Capability_ForegroundObservation {
            get {
                return ResourceManager.GetString("Capability_ForegroundObservation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Trust Permission Level.
        /// </summary>
        public static string Capability_FullTrust {
            get {
                return ResourceManager.GetString("Capability_FullTrust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game DVR Settings.
        /// </summary>
        public static string Capability_GameDvr {
            get {
                return ResourceManager.GetString("Capability_GameDvr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Games List.
        /// </summary>
        public static string Capability_GamesList {
            get {
                return ResourceManager.GetString("Capability_GamesList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gather information about other apps.
        /// </summary>
        public static string Capability_GatherInfoOtherApps {
            get {
                return ResourceManager.GetString("Capability_GatherInfoOtherApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eye tracker.
        /// </summary>
        public static string Capability_Gaze {
            get {
                return ResourceManager.GetString("Capability_Gaze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Human interface device (HID).
        /// </summary>
        public static string Capability_HID {
            get {
                return ResourceManager.GetString("Capability_HID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HID Telephony.
        /// </summary>
        public static string Capability_HidTelephony {
            get {
                return ResourceManager.GetString("Capability_HidTelephony", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home and work networks.
        /// </summary>
        public static string Capability_HomeNetwork {
            get {
                return ResourceManager.GetString("Capability_HomeNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In-Process Media Extension.
        /// </summary>
        public static string Capability_InProcMediaExt {
            get {
                return ResourceManager.GetString("Capability_InProcMediaExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internet and public networks (client).
        /// </summary>
        public static string Capability_InternetClient {
            get {
                return ResourceManager.GetString("Capability_InternetClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internet and public networks (client + server).
        /// </summary>
        public static string Capability_InternetClientServer {
            get {
                return ResourceManager.GetString("Capability_InternetClientServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IoT system administration.
        /// </summary>
        public static string Capability_IoT {
            get {
                return ResourceManager.GetString("Capability_IoT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string Capability_Location {
            get {
                return ResourceManager.GetString("Capability_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location History.
        /// </summary>
        public static string Capability_LocationHistory {
            get {
                return ResourceManager.GetString("Capability_LocationHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPIO, I2C, SPI, and PWM.
        /// </summary>
        public static string Capability_LowLevel {
            get {
                return ResourceManager.GetString("Capability_LowLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add and manage email account (MO).
        /// </summary>
        public static string Capability_ManageEmailAccount {
            get {
                return ResourceManager.GetString("Capability_ManageEmailAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage other apps.
        /// </summary>
        public static string Capability_ManageOtherApps {
            get {
                return ResourceManager.GetString("Capability_ManageOtherApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage phone line connectivity.
        /// </summary>
        public static string Capability_ManagePhoneLine {
            get {
                return ResourceManager.GetString("Capability_ManagePhoneLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to MDM CSP infrastructure.
        /// </summary>
        public static string Capability_MdmCspInf {
            get {
                return ResourceManager.GetString("Capability_MdmCspInf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microphone.
        /// </summary>
        public static string Capability_Microphone {
            get {
                return ResourceManager.GetString("Capability_Microphone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Motion activity.
        /// </summary>
        public static string Capability_MotionActivity {
            get {
                return ResourceManager.GetString("Capability_MotionActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Music.
        /// </summary>
        public static string Capability_Music {
            get {
                return ResourceManager.GetString("Capability_Music", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Observe Input.
        /// </summary>
        public static string Capability_ObserveInput {
            get {
                return ResourceManager.GetString("Capability_ObserveInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the shared app folder (OEM).
        /// </summary>
        public static string Capability_OemDeploy {
            get {
                return ResourceManager.GetString("Capability_OemDeploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optical disc.
        /// </summary>
        public static string Capability_OpticalDisc {
            get {
                return ResourceManager.GetString("Capability_OpticalDisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Policy Control.
        /// </summary>
        public static string Capability_PackagePolicyControl {
            get {
                return ResourceManager.GetString("Capability_PackagePolicyControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pen Workspace.
        /// </summary>
        public static string Capability_PenWorkspace {
            get {
                return ResourceManager.GetString("Capability_PenWorkspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone call history.
        /// </summary>
        public static string Capability_PhoneCallHistory {
            get {
                return ResourceManager.GetString("Capability_PhoneCallHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone calls.
        /// </summary>
        public static string Capability_PhoneCalls {
            get {
                return ResourceManager.GetString("Capability_PhoneCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pictures.
        /// </summary>
        public static string Capability_Pictures {
            get {
                return ResourceManager.GetString("Capability_Pictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point of Service (POS).
        /// </summary>
        public static string Capability_POS {
            get {
                return ResourceManager.GetString("Capability_POS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provision and configure MO OMA-DM.
        /// </summary>
        public static string Capability_ProvisionConfigureOmaDm {
            get {
                return ResourceManager.GetString("Capability_ProvisionConfigureOmaDm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radio state.
        /// </summary>
        public static string Capability_RadioState {
            get {
                return ResourceManager.GetString("Capability_RadioState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read blocked messages.
        /// </summary>
        public static string Capability_ReadBlockedMessages {
            get {
                return ResourceManager.GetString("Capability_ReadBlockedMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Unlock.
        /// </summary>
        public static string Capability_RemoteUnlock {
            get {
                return ResourceManager.GetString("Capability_RemoteUnlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removable storage.
        /// </summary>
        public static string Capability_RemovableStorage {
            get {
                return ResourceManager.GetString("Capability_RemovableStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserve resources for VoIP calls.
        /// </summary>
        public static string Capability_ReserveVoIP {
            get {
                return ResourceManager.GetString("Capability_ReserveVoIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Projection.
        /// </summary>
        public static string Capability_ScreenProjection {
            get {
                return ResourceManager.GetString("Capability_ScreenProjection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial communication.
        /// </summary>
        public static string Capability_SerialCommunication {
            get {
                return ResourceManager.GetString("Capability_SerialCommunication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Text Messages.
        /// </summary>
        public static string Capability_Sms {
            get {
                return ResourceManager.GetString("Capability_Sms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software Licensing.
        /// </summary>
        public static string Capability_SoftwareLicensing {
            get {
                return ResourceManager.GetString("Capability_SoftwareLicensing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speech Recognition for Accessories.
        /// </summary>
        public static string Capability_SpeechRecognition {
            get {
                return ResourceManager.GetString("Capability_SpeechRecognition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store Preview Feature.
        /// </summary>
        public static string Capability_StorePreview {
            get {
                return ResourceManager.GetString("Capability_StorePreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppress Input.
        /// </summary>
        public static string Capability_SuppressInput {
            get {
                return ResourceManager.GetString("Capability_SuppressInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Input Injection.
        /// </summary>
        public static string Capability_SysInputInjection {
            get {
                return ResourceManager.GetString("Capability_SysInputInjection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Level Access to All User Data.
        /// </summary>
        public static string Capability_SystemAllUsers {
            get {
                return ResourceManager.GetString("Capability_SystemAllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Level Appointment Access.
        /// </summary>
        public static string Capability_SystemAppointment {
            get {
                return ResourceManager.GetString("Capability_SystemAppointment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Level Call History Access.
        /// </summary>
        public static string Capability_SystemCallHistory {
            get {
                return ResourceManager.GetString("Capability_SystemCallHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Level Chat Message Access.
        /// </summary>
        public static string Capability_SystemChat {
            get {
                return ResourceManager.GetString("Capability_SystemChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Level Contact Access.
        /// </summary>
        public static string Capability_SystemContacts {
            get {
                return ResourceManager.GetString("Capability_SystemContacts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Level Email Access.
        /// </summary>
        public static string Capability_SystemEmail {
            get {
                return ResourceManager.GetString("Capability_SystemEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UI Automation.
        /// </summary>
        public static string Capability_UIAutomation {
            get {
                return ResourceManager.GetString("Capability_UIAutomation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USB.
        /// </summary>
        public static string Capability_USB {
            get {
                return ResourceManager.GetString("Capability_USB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Principal Name.
        /// </summary>
        public static string Capability_UserPrincipalName {
            get {
                return ResourceManager.GetString("Capability_UserPrincipalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Sign-in Support.
        /// </summary>
        public static string Capability_UserSignIn {
            get {
                return ResourceManager.GetString("Capability_UserSignIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User System ID.
        /// </summary>
        public static string Capability_UserSystemID {
            get {
                return ResourceManager.GetString("Capability_UserSystemID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Videos.
        /// </summary>
        public static string Capability_Videos {
            get {
                return ResourceManager.GetString("Capability_Videos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VoIP calling.
        /// </summary>
        public static string Capability_VoIP {
            get {
                return ResourceManager.GetString("Capability_VoIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VPN App.
        /// </summary>
        public static string Capability_VPN {
            get {
                return ResourceManager.GetString("Capability_VPN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wallet.
        /// </summary>
        public static string Capability_Wallet {
            get {
                return ResourceManager.GetString("Capability_Wallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Webcam.
        /// </summary>
        public static string Capability_Webcam {
            get {
                return ResourceManager.GetString("Capability_Webcam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wi-Fi networking.
        /// </summary>
        public static string Capability_WiFi {
            get {
                return ResourceManager.GetString("Capability_WiFi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Team Application View.
        /// </summary>
        public static string Capability_WindowsTeamAppView {
            get {
                return ResourceManager.GetString("Capability_WindowsTeamAppView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Team Device Credentials.
        /// </summary>
        public static string Capability_WindowsTeamDeviceCreds {
            get {
                return ResourceManager.GetString("Capability_WindowsTeamDeviceCreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Team Experience.
        /// </summary>
        public static string Capability_WindowsTeamExperience {
            get {
                return ResourceManager.GetString("Capability_WindowsTeamExperience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xbox Accessory.
        /// </summary>
        public static string Capability_XboxAccessory {
            get {
                return ResourceManager.GetString("Capability_XboxAccessory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate to sign the package.
        /// </summary>
        public static string CertificateSelector_Certificate {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign with Device Guard.
        /// </summary>
        public static string CertificateSelector_Certificate_DeviceGuard {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_DeviceGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have to sign-in with Azure AD credentials to use Device Guard signing. The account must have signing permissions..
        /// </summary>
        public static string CertificateSelector_Certificate_DeviceGuard_AzureAdInfo {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_DeviceGuard_AzureAdInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See more information.
        /// </summary>
        public static string CertificateSelector_Certificate_DeviceGuard_MoreInfoLink {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_DeviceGuard_MoreInfoLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Guard signing is ready to be used for publisher name.
        /// </summary>
        public static string CertificateSelector_Certificate_DeviceGuard_Ready {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_DeviceGuard_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to sign out or use another account for signing.
        /// </summary>
        public static string CertificateSelector_Certificate_DeviceGuard_SignOut {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_DeviceGuard_SignOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign with installed certificate.
        /// </summary>
        public static string CertificateSelector_Certificate_Installed {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed certificate.
        /// </summary>
        public static string CertificateSelector_Certificate_InstalledCertificate {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_InstalledCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show only valid certificates for signing.
        /// </summary>
        public static string CertificateSelector_Certificate_InstalledCertificate_OnlyValid {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_InstalledCertificate_OnlyValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No certificate.
        /// </summary>
        public static string CertificateSelector_Certificate_None {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password for the selected certificate.
        /// </summary>
        public static string CertificateSelector_Certificate_Password {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign with PFX file.
        /// </summary>
        public static string CertificateSelector_Certificate_Pfx {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_Pfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time stamping allows signatures to be verifiable even after the certificates used for signature have expired. You should make sure you always timestamp your packages, otherwise they will expire as soon as your certificate (which usually lives only for 1-3 years)..
        /// </summary>
        public static string CertificateSelector_Certificate_Timestamp_Hint {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_Timestamp_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No timestamp.
        /// </summary>
        public static string CertificateSelector_Certificate_TimeStamp_None {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_TimeStamp_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random selection from.
        /// </summary>
        public static string CertificateSelector_Certificate_TimeStamp_Random {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_TimeStamp_Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will select a random timestamp server from a list of known servers. The list of servers is maintained by MSIX Hero author, but not guaranteed to be complete or fit for purpose. The option should be used with caution and never in production..
        /// </summary>
        public static string CertificateSelector_Certificate_TimeStamp_Random_Hint {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_TimeStamp_Random_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a list of known servers.
        /// </summary>
        public static string CertificateSelector_Certificate_TimeStamp_Random2 {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_TimeStamp_Random2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specific timestamp server.
        /// </summary>
        public static string CertificateSelector_Certificate_TimeStamp_Specific {
            get {
                return ResourceManager.GetString("CertificateSelector_Certificate_TimeStamp_Specific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Guard.
        /// </summary>
        public static string CertificateSelector_DeviceGuard {
            get {
                return ResourceManager.GetString("CertificateSelector_DeviceGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing-in to Device Guard service….
        /// </summary>
        public static string CertificateSelector_DeviceGuard_Signing {
            get {
                return ResourceManager.GetString("CertificateSelector_DeviceGuard_Signing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open the link:.
        /// </summary>
        public static string CertificateSelector_Errors_LinkOpen {
            get {
                return ResourceManager.GetString("CertificateSelector_Errors_LinkOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encrypted password from settings could not be decrypted..
        /// </summary>
        public static string CertificateSelector_Errors_PasswordEncryption {
            get {
                return ResourceManager.GetString("CertificateSelector_Errors_PasswordEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to PFX file.
        /// </summary>
        public static string CertificateSelector_PfxPath {
            get {
                return ResourceManager.GetString("CertificateSelector_PfxPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected certificate.
        /// </summary>
        public static string CertificateSelector_SelectedCertificate {
            get {
                return ResourceManager.GetString("CertificateSelector_SelectedCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time stamp URL.
        /// </summary>
        public static string CertificateSelector_TimeStamp {
            get {
                return ResourceManager.GetString("CertificateSelector_TimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is required..
        /// </summary>
        public static string CertificateSelector_Validation_CertificateMissing {
            get {
                return ResourceManager.GetString("CertificateSelector_Validation_CertificateMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for the Device Guard is required..
        /// </summary>
        public static string CertificateSelector_Validation_DeviceGuardNotConfigured {
            get {
                return ResourceManager.GetString("CertificateSelector_Validation_DeviceGuardNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid URL..
        /// </summary>
        public static string CertificateSelector_Validation_InvalidUrl_Format {
            get {
                return ResourceManager.GetString("CertificateSelector_Validation_InvalidUrl_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not fetch the list of time stamp servers..
        /// </summary>
        public static string CertificateSelector_Validation_RemoteUrlsCouldNotBeFetched {
            get {
                return ResourceManager.GetString("CertificateSelector_Validation_RemoteUrlsCouldNotBeFetched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp server URL is required..
        /// </summary>
        public static string CertificateSelector_Validation_TimeStampMissing {
            get {
                return ResourceManager.GetString("CertificateSelector_Validation_TimeStampMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL must have a protocol..
        /// </summary>
        public static string CertificateSelector_Validation_UrlProtocolMissing {
            get {
                return ResourceManager.GetString("CertificateSelector_Validation_UrlProtocolMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate signature configuration….
        /// </summary>
        public static string CertificateSelector_ValidationButton {
            get {
                return ResourceManager.GetString("CertificateSelector_ValidationButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add….
        /// </summary>
        public static string Containers_Add {
            get {
                return ResourceManager.GetString("Containers_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit….
        /// </summary>
        public static string Containers_ContextMenu_Edit {
            get {
                return ResourceManager.GetString("Containers_ContextMenu_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Containers_ContextMenu_Remove {
            get {
                return ResourceManager.GetString("Containers_ContextMenu_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Containers_ContextMenu_Reset {
            get {
                return ResourceManager.GetString("Containers_ContextMenu_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open the package..
        /// </summary>
        public static string Containers_Error_PackageOpen {
            get {
                return ResourceManager.GetString("Containers_Error_PackageOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order by.
        /// </summary>
        public static string Containers_Filter_OrderBy {
            get {
                return ResourceManager.GetString("Containers_Filter_OrderBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container name.
        /// </summary>
        public static string Containers_Filter_OrderBy_Name {
            get {
                return ResourceManager.GetString("Containers_Filter_OrderBy_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting packages in this container….
        /// </summary>
        public static string Containers_GettingApps {
            get {
                return ResourceManager.GetString("Containers_GettingApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting shared package containers, please wait….
        /// </summary>
        public static string Containers_PleaseWait {
            get {
                return ResourceManager.GetString("Containers_PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding shared package container, please wait….
        /// </summary>
        public static string Containers_PleaseWait_Add {
            get {
                return ResourceManager.GetString("Containers_PleaseWait_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search in shared package containers….
        /// </summary>
        public static string Containers_Search_Prompt {
            get {
                return ResourceManager.GetString("Containers_Search_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Package Container.
        /// </summary>
        public static string Containers_SharedPackageContainer {
            get {
                return ResourceManager.GetString("Containers_SharedPackageContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze MSIX update impact….
        /// </summary>
        public static string Dashboard_AnalyzeImpact {
            get {
                return ResourceManager.GetString("Dashboard_AnalyzeImpact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create app attach volume.
        /// </summary>
        public static string Dashboard_AppAttach {
            get {
                return ResourceManager.GetString("Dashboard_AppAttach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculate package names….
        /// </summary>
        public static string Dashboard_CalculateNames {
            get {
                return ResourceManager.GetString("Dashboard_CalculateNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create app installer.
        /// </summary>
        public static string Dashboard_CreateAppInstaller {
            get {
                return ResourceManager.GetString("Dashboard_CreateAppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create modification package.
        /// </summary>
        public static string Dashboard_CreateModPackage {
            get {
                return ResourceManager.GetString("Dashboard_CreateModPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create self-signed certificate.
        /// </summary>
        public static string Dashboard_CreateSelfSigned {
            get {
                return ResourceManager.GetString("Dashboard_CreateSelfSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create winget manifest.
        /// </summary>
        public static string Dashboard_CreateWinget {
            get {
                return ResourceManager.GetString("Dashboard_CreateWinget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract or import a certificate.
        /// </summary>
        public static string Dashboard_ExtractCer {
            get {
                return ResourceManager.GetString("Dashboard_ExtractCer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze MSIX.
        /// </summary>
        public static string Dashboard_Header_AnalyzeMsix {
            get {
                return ResourceManager.GetString("Dashboard_Header_AnalyzeMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX app attach.
        /// </summary>
        public static string Dashboard_Header_AppAttach {
            get {
                return ResourceManager.GetString("Dashboard_Header_AppAttach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer.
        /// </summary>
        public static string Dashboard_Header_AppInstaller {
            get {
                return ResourceManager.GetString("Dashboard_Header_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificates and signing.
        /// </summary>
        public static string Dashboard_Header_CertAndSigning {
            get {
                return ResourceManager.GetString("Dashboard_Header_CertAndSigning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package operations.
        /// </summary>
        public static string Dashboard_Header_PackageOperations {
            get {
                return ResourceManager.GetString("Dashboard_Header_PackageOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Package Manager.
        /// </summary>
        public static string Dashboard_Header_Winget {
            get {
                return ResourceManager.GetString("Dashboard_Header_Winget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX and packaging.
        /// </summary>
        public static string Dashboard_MsixAndPackaging {
            get {
                return ResourceManager.GetString("Dashboard_MsixAndPackaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open existing….
        /// </summary>
        public static string Dashboard_Open {
            get {
                return ResourceManager.GetString("Dashboard_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open an existing .msix, .appinstaller or .yaml file.
        /// </summary>
        public static string Dashboard_Open_SecondLine {
            get {
                return ResourceManager.GetString("Dashboard_Open_SecondLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open app installer file….
        /// </summary>
        public static string Dashboard_OpenAppInstaller {
            get {
                return ResourceManager.GetString("Dashboard_OpenAppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open app installer ({0}).
        /// </summary>
        public static string Dashboard_OpenAppInstaller_TitleFormat {
            get {
                return ResourceManager.GetString("Dashboard_OpenAppInstaller_TitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open MSIX package….
        /// </summary>
        public static string Dashboard_OpenMsix {
            get {
                return ResourceManager.GetString("Dashboard_OpenMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open winget manifest….
        /// </summary>
        public static string Dashboard_OpenWinget {
            get {
                return ResourceManager.GetString("Dashboard_OpenWinget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open winget manifest ({0}).
        /// </summary>
        public static string Dashboard_OpenWinget_TitleFormat {
            get {
                return ResourceManager.GetString("Dashboard_OpenWinget_TitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack directory → MSIX.
        /// </summary>
        public static string Dashboard_PackToMsix {
            get {
                return ResourceManager.GetString("Dashboard_PackToMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search in tools….
        /// </summary>
        public static string Dashboard_Search_TextBox_Prompt {
            get {
                return ResourceManager.GetString("Dashboard_Search_TextBox_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create shared package container.
        /// </summary>
        public static string Dashboard_SharedPackageContainer {
            get {
                return ResourceManager.GetString("Dashboard_SharedPackageContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show MSIX dependencies….
        /// </summary>
        public static string Dashboard_ShowDeps {
            get {
                return ResourceManager.GetString("Dashboard_ShowDeps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign or re-sign MSIX package.
        /// </summary>
        public static string Dashboard_SignResign {
            get {
                return ResourceManager.GetString("Dashboard_SignResign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tools and analyzers.
        /// </summary>
        public static string Dashboard_ToolsAndAnalyzers {
            get {
                return ResourceManager.GetString("Dashboard_ToolsAndAnalyzers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpack MSIX → directory.
        /// </summary>
        public static string Dashboard_UnpackMsix {
            get {
                return ResourceManager.GetString("Dashboard_UnpackMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign in with Microsoft.
        /// </summary>
        public static string DeviceGuard_SignWithMS {
            get {
                return ResourceManager.GetString("DeviceGuard_SignWithMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow downgrades (installing older version of an app over the newer one).
        /// </summary>
        public static string Dialog_AppInstaller_AllowDowngrades {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_AllowDowngrades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer version.
        /// </summary>
        public static string Dialog_AppInstaller_AppInstallerVersion {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_AppInstallerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New bundle.
        /// </summary>
        public static string Dialog_AppInstaller_ContextMenu_NewBundle {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ContextMenu_NewBundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New package.
        /// </summary>
        public static string Dialog_AppInstaller_ContextMenu_NewPackage {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ContextMenu_NewPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Dialog_AppInstaller_ContextMenu_Remove {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ContextMenu_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle.
        /// </summary>
        public static string Dialog_AppInstaller_List_Tooltip_Bundle {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_List_Tooltip_Bundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package.
        /// </summary>
        public static string Dialog_AppInstaller_List_Tooltip_Package {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_List_Tooltip_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open existing….
        /// </summary>
        public static string Dialog_AppInstaller_LoadButton {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_LoadButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        public static string Dialog_AppInstaller_Never {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create appinstaller….
        /// </summary>
        public static string Dialog_AppInstaller_OK {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After checking for updates, do not repeat the check for the next.
        /// </summary>
        public static string Dialog_AppInstaller_PostUpdateDelay {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_PostUpdateDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This combination of settings requires at least.
        /// </summary>
        public static string Dialog_AppInstaller_RequiredWin10 {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_RequiredWin10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your .appinstaller file has been successfully created..
        /// </summary>
        public static string Dialog_AppInstaller_Success {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue editing.
        /// </summary>
        public static string Dialog_AppInstaller_Success_ContinueLink {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Success_ContinueLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing the .appinstaller file.
        /// </summary>
        public static string Dialog_AppInstaller_Success_FolderLink {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Success_FolderLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current .appinstaller file size:.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_CurrentSize {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_CurrentSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pad .appinstaller size during the  build process .
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_EnablePadding {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_EnablePadding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pad this file to this size:.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_Padding {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_Padding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bytes.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_PaddingBytes {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_PaddingBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This advanced settings is used as a workaround for a bug in MSIX / Delivery Optimization subsystem of some versions of Windows..
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_PaddingExplain1 {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_PaddingExplain1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Correct usage of this workaround requires setting the size to a value large enough that it should never be exceeded..
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_PaddingExplain2 {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_PaddingExplain2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you open an existing .appinstaller file with extra padding at the end, the value here will be automatically taken over..
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Advanced_PaddingExplain3 {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Advanced_PaddingExplain3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Dependencies {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional packages.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Optional {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Optional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Options {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Package {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Properties {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Related packages.
        /// </summary>
        public static string Dialog_AppInstaller_Tab_Related {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Tab_Related", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every 8 hours.
        /// </summary>
        public static string Dialog_AppInstaller_Timing_8Hours {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Timing_8Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When to check for updates?.
        /// </summary>
        public static string Dialog_AppInstaller_Timing_Hint {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Timing_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On launch.
        /// </summary>
        public static string Dialog_AppInstaller_Timing_OnLaunch {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Timing_OnLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On launch and every 8 hours.
        /// </summary>
        public static string Dialog_AppInstaller_Timing_OnLaunchAnd8Hours {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Timing_OnLaunchAnd8Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string Dialog_AppInstaller_ToggleButton_New {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ToggleButton_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package (APPX/MSIX).
        /// </summary>
        public static string Dialog_AppInstaller_ToggleButton_New_AppxMsix {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ToggleButton_New_AppxMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse….
        /// </summary>
        public static string Dialog_AppInstaller_ToggleButton_New_Browse {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ToggleButton_New_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle.
        /// </summary>
        public static string Dialog_AppInstaller_ToggleButton_New_Bundle {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_ToggleButton_New_Bundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hours.
        /// </summary>
        public static string Dialog_AppInstaller_Unit_Hours {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Unit_Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update options.
        /// </summary>
        public static string Dialog_AppInstaller_UpdateOptions {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_UpdateOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URI to a remote location where the .appinstaller file will be available.
        /// </summary>
        public static string Dialog_AppInstaller_Uri_AppInstaller_Hint {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Uri_AppInstaller_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URI to a remote location where the main bundle is available.
        /// </summary>
        public static string Dialog_AppInstaller_Uri_Bundle_Hint {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Uri_Bundle_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URI to a remote location where the main package is available.
        /// </summary>
        public static string Dialog_AppInstaller_Uri_Hint {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_Uri_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a new version is available when launching the app….
        /// </summary>
        public static string Dialog_AppInstaller_WhenNewVersionAvailable {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_WhenNewVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show prompt and force the update before the app can be launched.
        /// </summary>
        public static string Dialog_AppInstaller_WhenNewVersionAvailable_Force {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_WhenNewVersionAvailable_Force", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inform about the new version, do not enforce it.
        /// </summary>
        public static string Dialog_AppInstaller_WhenNewVersionAvailable_Inform {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_WhenNewVersionAvailable_Inform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update the app silently in background.
        /// </summary>
        public static string Dialog_AppInstaller_WhenNewVersionAvailable_SilentUpdate {
            get {
                return ResourceManager.GetString("Dialog_AppInstaller_WhenNewVersionAvailable_SilentUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        public static string Dialog_Tab_Advanced {
            get {
                return ResourceManager.GetString("Dialog_Tab_Advanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        public static string Dialogs_About_Author {
            get {
                return ResourceManager.GetString("Dialogs_About_Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string Dialogs_About_Header {
            get {
                return ResourceManager.GetString("Dialogs_About_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License.
        /// </summary>
        public static string Dialogs_About_License {
            get {
                return ResourceManager.GetString("Dialogs_About_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are currently using the newest version of MSIX Hero.
        /// </summary>
        public static string Dialogs_About_Update_AlreadyNew {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_AlreadyNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check again for updates.
        /// </summary>
        public static string Dialogs_About_Update_CheckAgain {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_CheckAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for update now.
        /// </summary>
        public static string Dialogs_About_Update_CheckNow {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_CheckNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the new version from the following URL:.
        /// </summary>
        public static string Dialogs_About_Update_NewUrl {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_NewUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new version is:.
        /// </summary>
        public static string Dialogs_About_Update_NewVersionIs {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_NewVersionIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to released on.
        /// </summary>
        public static string Dialogs_About_Update_NewVersionReleasedOn {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_NewVersionReleasedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting information about the new version….
        /// </summary>
        public static string Dialogs_About_Update_Reading {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show release notes.
        /// </summary>
        public static string Dialogs_About_Update_ShowRelNotes {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_ShowRelNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New version of MSIX Hero is available..
        /// </summary>
        public static string Dialogs_About_Update_UpdateAvailable {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your version is:.
        /// </summary>
        public static string Dialogs_About_Update_YourVersion {
            get {
                return ResourceManager.GetString("Dialogs_About_Update_YourVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About MSIX Hero.
        /// </summary>
        public static string Dialogs_About_WindowTitle {
            get {
                return ResourceManager.GetString("Dialogs_About_WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected folder {0} and all its subfolders.
        /// </summary>
        public static string Dialogs_AppAttach_AddFolderAndSubfolders {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_AddFolderAndSubfolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder contains no MSIX packages..
        /// </summary>
        public static string Dialogs_AppAttach_AddFolderEmpty {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_AddFolderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder contains *.msix file(s) and subfolder(s). Do you want to import all *.msix files, also including subfolders?.
        /// </summary>
        public static string Dialogs_AppAttach_AddFolderMultiple {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_AddFolderMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only selected folder.
        /// </summary>
        public static string Dialogs_AppAttach_AddOnlySelectedFolder {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_AddOnlySelectedFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option is not available for CIM images..
        /// </summary>
        public static string Dialogs_AppAttach_CimNotAvailable {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_CimNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;output-directory&gt;.
        /// </summary>
        public static string Dialogs_AppAttach_CmdLine_DirPlaceholder {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_CmdLine_DirPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;path-to-msix&gt;.
        /// </summary>
        public static string Dialogs_AppAttach_CmdLine_PathPlaceholder {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_CmdLine_PathPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size cannot be empty..
        /// </summary>
        public static string Dialogs_AppAttach_Errors_FixedSize_Empty {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Errors_FixedSize_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size must be a number.
        /// </summary>
        public static string Dialogs_AppAttach_Errors_FixedSize_NaN {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Errors_FixedSize_NaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size must be a positive number.
        /// </summary>
        public static string Dialogs_AppAttach_Errors_FixedSize_Negative {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Errors_FixedSize_Negative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one file is required..
        /// </summary>
        public static string Dialogs_AppAttach_Errors_NoFiles {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Errors_NoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract certificate.
        /// </summary>
        public static string Dialogs_AppAttach_ExtractCert_Header {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_ExtractCert_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this option enabled, MSIX Hero tries to extract digital certificate from the specified package(s) and puts it next to the VHD image..
        /// </summary>
        public static string Dialogs_AppAttach_ExtractCert_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_ExtractCert_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File type.
        /// </summary>
        public static string Dialogs_AppAttach_FileType {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_FileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CIM files.
        /// </summary>
        public static string Dialogs_AppAttach_Filter_Cim {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Filter_Cim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual disks.
        /// </summary>
        public static string Dialogs_AppAttach_Filter_Vhd {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Filter_Vhd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual disks.
        /// </summary>
        public static string Dialogs_AppAttach_Filter_Vhdx {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Filter_Vhdx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size.
        /// </summary>
        public static string Dialogs_AppAttach_FixedSize {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_FixedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate scripts for staging, registering, de-staging and de-registering.
        /// </summary>
        public static string Dialogs_AppAttach_GenScripts_Header {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_GenScripts_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX app attach and samples.
        /// </summary>
        public static string Dialogs_AppAttach_GenScripts_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_GenScripts_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Junction point.
        /// </summary>
        public static string Dialogs_AppAttach_JunctionPoint {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_JunctionPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create volume for app attach.
        /// </summary>
        public static string Dialogs_AppAttach_OK {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your packages have been successfully converted to volumes for app attach..
        /// </summary>
        public static string Dialogs_AppAttach_Success {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert more packages.
        /// </summary>
        public static string Dialogs_AppAttach_Success_ConvertMore {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Success_ConvertMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing your volumes.
        /// </summary>
        public static string Dialogs_AppAttach_Success_OpenFolder {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Success_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected package(s).
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_Context_Remove {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_Context_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_Header {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package(s) to convert to app attach volumes.
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_List {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add package(s)….
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_List_Add {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_List_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add folder….
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_List_AddFolder {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_List_AddFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release Left Mouse Button to drop the files here.
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_List_DragDropHint {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_List_DragDropHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected.
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_List_Remove {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_List_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Dialogs_AppAttach_Tabs_Packages_Options {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Tabs_Packages_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CIM.
        /// </summary>
        public static string Dialogs_AppAttach_Type_Cim {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Type_Cim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXPERIMENTAL.
        /// </summary>
        public static string Dialogs_AppAttach_Type_Experimental {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Type_Experimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VHD (recommended).
        /// </summary>
        public static string Dialogs_AppAttach_Type_Vhd {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Type_Vhd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VHDX.
        /// </summary>
        public static string Dialogs_AppAttach_Type_Vhdx {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_Type_Vhdx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VHD volume size.
        /// </summary>
        public static string Dialogs_AppAttach_VhdVolumeSize {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_VhdVolumeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let MSIX Hero select required dynamic VHD size.
        /// </summary>
        public static string Dialogs_AppAttach_VhdVolumeSize_Auto {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_VhdVolumeSize_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a dynamic size but not more than:.
        /// </summary>
        public static string Dialogs_AppAttach_VhdVolumeSize_Dynamic {
            get {
                return ResourceManager.GetString("Dialogs_AppAttach_VhdVolumeSize_Dynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer URL.
        /// </summary>
        public static string Dialogs_AppInstaller_AppInstallerUrl {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_AppInstallerUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string Dialogs_AppInstaller_Architecture {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32-bit.
        /// </summary>
        public static string Dialogs_AppInstaller_Architecture_32 {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Architecture_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 64-bit.
        /// </summary>
        public static string Dialogs_AppInstaller_Architecture_64 {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Architecture_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neutral.
        /// </summary>
        public static string Dialogs_AppInstaller_Architecture_Neutral {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Architecture_Neutral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle name.
        /// </summary>
        public static string Dialogs_AppInstaller_BundleName {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_BundleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open selected package..
        /// </summary>
        public static string Dialogs_AppInstaller_Errors_Opening {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Errors_Opening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer files.
        /// </summary>
        public static string Dialogs_AppInstaller_Filter_AppInstallerFiles {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Filter_AppInstallerFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hours between updates.
        /// </summary>
        public static string Dialogs_AppInstaller_HoursBetweenUpdates {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_HoursBetweenUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BUNDLE #{0}.
        /// </summary>
        public static string Dialogs_AppInstaller_List_Bundle_Format {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_List_Bundle_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PACKAGE #{0}.
        /// </summary>
        public static string Dialogs_AppInstaller_List_Bundle_Package {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_List_Bundle_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main package URL.
        /// </summary>
        public static string Dialogs_AppInstaller_MainPackageUrl {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_MainPackageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string Dialogs_AppInstaller_PackageName {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string Dialogs_AppInstaller_PackagePublisher {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_PackagePublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package URI.
        /// </summary>
        public static string Dialogs_AppInstaller_PackageUri {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_PackageUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version.
        /// </summary>
        public static string Dialogs_AppInstaller_PackageVersion {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_PackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What will be targeted by this .appinstaller?.
        /// </summary>
        public static string Dialogs_AppInstaller_Target {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create app installer.
        /// </summary>
        public static string Dialogs_AppInstaller_Title {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected file is not a valid .appinstaller..
        /// </summary>
        public static string Dialogs_AppInstaller_Validation_File_Format {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Validation_File_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value cannot be empty..
        /// </summary>
        public static string Dialogs_AppInstaller_Validation_Hours_Empty {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Validation_Hours_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid number..
        /// </summary>
        public static string Dialogs_AppInstaller_Validation_Hours_NaN {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Validation_Hours_NaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not in range from 0 to 255..
        /// </summary>
        public static string Dialogs_AppInstaller_Validation_Hours_Range {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Validation_Hours_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to missing name.
        /// </summary>
        public static string Dialogs_AppInstaller_Validation_MissingName {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Validation_MissingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to missing version.
        /// </summary>
        public static string Dialogs_AppInstaller_Validation_MissingVersion {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Validation_MissingVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Dialogs_AppInstaller_Version {
            get {
                return ResourceManager.GetString("Dialogs_AppInstaller_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Dialogs_Apply {
            get {
                return ResourceManager.GetString("Dialogs_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current volume.
        /// </summary>
        public static string Dialogs_ChangeVolume_CurrentVolume {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_CurrentVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting data….
        /// </summary>
        public static string Dialogs_ChangeVolume_GettingData {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_GettingData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving to the selected volume….
        /// </summary>
        public static string Dialogs_ChangeVolume_Moving {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_Moving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move to selected volume.
        /// </summary>
        public static string Dialogs_ChangeVolume_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected package is already available on the required volume. Currently, there is only a single volume available, did you mean to create a new one first?.
        /// </summary>
        public static string Dialogs_ChangeVolume_PackageAlreadyOnVolume {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_PackageAlreadyOnVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected package is already available on the required volume. Did you mean another volume?.
        /// </summary>
        public static string Dialogs_ChangeVolume_PackageAlreadyOnVolume_Choice {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_PackageAlreadyOnVolume_Choice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new volume.
        /// </summary>
        public static string Dialogs_ChangeVolume_PackageAlreadyOnVolume_NewVolume {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_PackageAlreadyOnVolume_NewVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select another volume.
        /// </summary>
        public static string Dialogs_ChangeVolume_PackageAlreadyOnVolume_Select {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_PackageAlreadyOnVolume_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use {0}.
        /// </summary>
        public static string Dialogs_ChangeVolume_PackageAlreadyOnVolume_Use_Format {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_PackageAlreadyOnVolume_Use_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading packages….
        /// </summary>
        public static string Dialogs_ChangeVolume_ReadingPackages {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_ReadingPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages have been moved to a selected volume..
        /// </summary>
        public static string Dialogs_ChangeVolume_Success {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target volume.
        /// </summary>
        public static string Dialogs_ChangeVolume_TargetVolume {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_TargetVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change volume.
        /// </summary>
        public static string Dialogs_ChangeVolume_Title {
            get {
                return ResourceManager.GetString("Dialogs_ChangeVolume_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Dialogs_Close {
            get {
                return ResourceManager.GetString("Dialogs_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation can be automated by executing the following command line:.
        /// </summary>
        public static string Dialogs_Cmd_CommandLineHint {
            get {
                return ResourceManager.GetString("Dialogs_Cmd_CommandLineHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to clipboard.
        /// </summary>
        public static string Dialogs_Cmd_CopyToClipboard {
            get {
                return ResourceManager.GetString("Dialogs_Cmd_CopyToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show silent command line.
        /// </summary>
        public static string Dialogs_CmdLineCheckbox {
            get {
                return ResourceManager.GetString("Dialogs_CmdLineCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze dependencies.
        /// </summary>
        public static string Dialogs_Dependencies_Analyze_Button {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Analyze_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze.
        /// </summary>
        public static string Dialogs_Dependencies_Analyze_Header {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Analyze_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press the button to start analyzing the selected package….
        /// </summary>
        public static string Dialogs_Dependencies_Analyze_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Analyze_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse….
        /// </summary>
        public static string Dialogs_Dependencies_Browse {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not analyze the selected package..
        /// </summary>
        public static string Dialogs_Dependencies_Error_Failed {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Error_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} image files ({1}).
        /// </summary>
        public static string Dialogs_Dependencies_Export_ImageFilter {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Export_ImageFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting graph as {0} image….
        /// </summary>
        public static string Dialogs_Dependencies_Export_Title {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Export_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export….
        /// </summary>
        public static string Dialogs_Dependencies_ExportButton {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_ExportButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legend.
        /// </summary>
        public static string Dialogs_Dependencies_Legend {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Legend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (B) depends on (A).
        /// </summary>
        public static string Dialogs_Dependencies_Line_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Line_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package dependency.
        /// </summary>
        public static string Dialogs_Dependencies_PackageDependency {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_PackageDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print….
        /// </summary>
        public static string Dialogs_Dependencies_PrintButton {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_PrintButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool analyzes the dependencies and relations between packages and other components, using a selected package as a root object..
        /// </summary>
        public static string Dialogs_Dependencies_Purpose {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to select another file….
        /// </summary>
        public static string Dialogs_Dependencies_SelectAnotherFileButton_Tooltip {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_SelectAnotherFileButton_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzed package.
        /// </summary>
        public static string Dialogs_Dependencies_SelectedPackage {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_SelectedPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an MSIX package or a manifest file to be analyzed….
        /// </summary>
        public static string Dialogs_Dependencies_SelectMsix {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_SelectMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System dependency.
        /// </summary>
        public static string Dialogs_Dependencies_SystemDependency {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_SystemDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze dependencies.
        /// </summary>
        public static string Dialogs_Dependencies_Title {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing values.
        /// </summary>
        public static string Dialogs_Dependencies_Validation_Missing {
            get {
                return ResourceManager.GetString("Dialogs_Dependencies_Validation_Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File extension {0} is not supported..
        /// </summary>
        public static string Dialogs_Error_ExtensionNotSupported_Format {
            get {
                return ResourceManager.GetString("Dialogs_Error_ExtensionNotSupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} was not found..
        /// </summary>
        public static string Dialogs_Error_FileNotFound_Format {
            get {
                return ResourceManager.GetString("Dialogs_Error_FileNotFound_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_Error_Title {
            get {
                return ResourceManager.GetString("Dialogs_Error_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digest algorithm.
        /// </summary>
        public static string Dialogs_ExportCertificate_Algorithm {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Algorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;input-path&gt;.
        /// </summary>
        public static string Dialogs_ExportCertificate_Cmd_InputPath_Placeholder {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Cmd_InputPath_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;output-path&gt;.
        /// </summary>
        public static string Dialogs_ExportCertificate_Cmd_OutputPath_Placeholder {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Cmd_OutputPath_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issued for.
        /// </summary>
        public static string Dialogs_ExportCertificate_IssuedFor {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_IssuedFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer.
        /// </summary>
        public static string Dialogs_ExportCertificate_Issuer {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Issuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract certificate.
        /// </summary>
        public static string Dialogs_ExportCertificate_OkLabel_Extract {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_OkLabel_Extract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import certificate.
        /// </summary>
        public static string Dialogs_ExportCertificate_OkLabel_Import {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_OkLabel_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save as .CER file.
        /// </summary>
        public static string Dialogs_ExportCertificate_Output_Cer {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Output_Cer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to certificate.
        /// </summary>
        public static string Dialogs_ExportCertificate_Output_Cer_Path {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Output_Cer_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import to Trusted People store.
        /// </summary>
        public static string Dialogs_ExportCertificate_Output_Import {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Output_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After importing to the Trusted People store, all apps signed with this certificate will be trusted on this machine..
        /// </summary>
        public static string Dialogs_ExportCertificate_Output_Import_Hint {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Output_Import_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press **Import certificate** to import the certificate. After importing to the Trusted People store, all apps signed with this certificate will be trusted on this machine..
        /// </summary>
        public static string Dialogs_ExportCertificate_Output_Import_Press_Hint {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Output_Import_Press_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed MSIX package or a certificate file.
        /// </summary>
        public static string Dialogs_ExportCertificate_PackageOrCerFile {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_PackageOrCerFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digital signature details:.
        /// </summary>
        public static string Dialogs_ExportCertificate_SignatureDetails {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_SignatureDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your certificate has been successfully extracted..
        /// </summary>
        public static string Dialogs_ExportCertificate_Success {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing your .cer file.
        /// </summary>
        public static string Dialogs_ExportCertificate_Success_OpenFolder {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Success_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbprint.
        /// </summary>
        public static string Dialogs_ExportCertificate_Thumbprint {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Thumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract or import a certificate.
        /// </summary>
        public static string Dialogs_ExportCertificate_Title {
            get {
                return ResourceManager.GetString("Dialogs_ExportCertificate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path cannot be empty..
        /// </summary>
        public static string Dialogs_FilePicker_Validation_Empty {
            get {
                return ResourceManager.GetString("Dialogs_FilePicker_Validation_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path is invalid..
        /// </summary>
        public static string Dialogs_FilePicker_Validation_Invalid {
            get {
                return ResourceManager.GetString("Dialogs_FilePicker_Validation_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file does not exist..
        /// </summary>
        public static string Dialogs_FilePicker_Validation_Missing {
            get {
                return ResourceManager.GetString("Dialogs_FilePicker_Validation_Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All supported files.
        /// </summary>
        public static string Dialogs_Filter_AllSupportedFiles {
            get {
                return ResourceManager.GetString("Dialogs_Filter_AllSupportedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer.
        /// </summary>
        public static string Dialogs_Filter_AppInstaller {
            get {
                return ResourceManager.GetString("Dialogs_Filter_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundles.
        /// </summary>
        public static string Dialogs_Filter_Bundles {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Bundles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificates.
        /// </summary>
        public static string Dialogs_Filter_Certificates {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Certificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable files.
        /// </summary>
        public static string Dialogs_Filter_Exe {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Exe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest files.
        /// </summary>
        public static string Dialogs_Filter_Manifests {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Manifests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Installer.
        /// </summary>
        public static string Dialogs_Filter_Msi {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Msi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files.
        /// </summary>
        public static string Dialogs_Filter_MultipleFormats {
            get {
                return ResourceManager.GetString("Dialogs_Filter_MultipleFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        public static string Dialogs_Filter_Packages {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Registry Files.
        /// </summary>
        public static string Dialogs_Filter_Registry {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Winget manifests.
        /// </summary>
        public static string Dialogs_Filter_Winget {
            get {
                return ResourceManager.GetString("Dialogs_Filter_Winget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path may not be empty..
        /// </summary>
        public static string Dialogs_FolderPicker_Validation_Empty {
            get {
                return ResourceManager.GetString("Dialogs_FolderPicker_Validation_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is invalid..
        /// </summary>
        public static string Dialogs_FolderPicker_Validation_Invalid {
            get {
                return ResourceManager.GetString("Dialogs_FolderPicker_Validation_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder does not exist..
        /// </summary>
        public static string Dialogs_FolderPicker_Validation_Missing {
            get {
                return ResourceManager.GetString("Dialogs_FolderPicker_Validation_Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional content.
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files and directories from disk.
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Files {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import files and folders from the following location into the package root directory:.
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Files_Hint {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Files_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify which extra content (folders, files and/or registry keys) should be merged by MSIX Hero..
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Hint {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry keys and values.
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Registry {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import registry from the specified *.reg file:.
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Registry_Hint {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Registry_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VFS folder structure from the parent package.
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Vfs {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Vfs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option is available only when the output file is uncompressed (AppxManifest.xml) and the parent package is selected from an existing package path..
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Vfs_AvailabilityHint {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Vfs_AvailabilityHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this option is selected, creating uncompressed sources for a modification package will also create empty folders, matching the original VFS structure of the parent package. This is useful for win32 add-ons and modification packages authoring..
        /// </summary>
        public static string Dialogs_ModPack_AdditionalContent_Vfs_Hint {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_AdditionalContent_Vfs_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displayed package name.
        /// </summary>
        public static string Dialogs_ModPack_DisplayName {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display options.
        /// </summary>
        public static string Dialogs_ModPack_DisplayOptions {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_DisplayOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read the properties from the package..
        /// </summary>
        public static string Dialogs_ModPack_Error_ReadProperties {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Error_ReadProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder to include.
        /// </summary>
        public static string Dialogs_ModPack_Folder {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From file path.
        /// </summary>
        public static string Dialogs_ModPack_FromFilePath {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_FromFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manually entered identifiers.
        /// </summary>
        public static string Dialogs_ModPack_FromManualInput {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_FromManualInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX Modification Packages.
        /// </summary>
        public static string Dialogs_ModPack_MSIX_OpenDialog {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_MSIX_OpenDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create modification package….
        /// </summary>
        public static string Dialogs_ModPack_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification package.
        /// </summary>
        public static string Dialogs_ModPack_OutputSuffix {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_OutputSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output type.
        /// </summary>
        public static string Dialogs_ModPack_OutputType {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_OutputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncompressed package (AppxManifest.xml).
        /// </summary>
        public static string Dialogs_ModPack_OutputType_Manifest {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_OutputType_Manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed MSIX modification package.
        /// </summary>
        public static string Dialogs_ModPack_OutputType_Signed {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_OutputType_Signed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsigned MSIX modification package.
        /// </summary>
        public static string Dialogs_ModPack_OutputType_Unsigned {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_OutputType_Unsigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string Dialogs_ModPack_Package {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent package name.
        /// </summary>
        public static string Dialogs_ModPack_Parent_Package {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Parent_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent publisher name.
        /// </summary>
        public static string Dialogs_ModPack_Parent_Publisher {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Parent_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent package path.
        /// </summary>
        public static string Dialogs_ModPack_ParentPath {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_ParentPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher name.
        /// </summary>
        public static string Dialogs_ModPack_Publisher {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displayed publisher name.
        /// </summary>
        public static string Dialogs_ModPack_PublisherDisplayName {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_PublisherDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .REG file to include.
        /// </summary>
        public static string Dialogs_ModPack_RegFile {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_RegFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file path for the parent package:.
        /// </summary>
        public static string Dialogs_ModPack_SourceLabel {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_SourceLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing the new file.
        /// </summary>
        public static string Dialogs_ModPack_Success_Open {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Success_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        public static string Dialogs_ModPack_Tab_Content {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Tab_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent package.
        /// </summary>
        public static string Dialogs_ModPack_Tab_Parent {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Tab_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string Dialogs_ModPack_Tab_Properties {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Tab_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature.
        /// </summary>
        public static string Dialogs_ModPack_Tab_Signature {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Tab_Signature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create modification package.
        /// </summary>
        public static string Dialogs_ModPack_Title {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version.
        /// </summary>
        public static string Dialogs_ModPack_Version {
            get {
                return ResourceManager.GetString("Dialogs_ModPack_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate certificate.
        /// </summary>
        public static string Dialogs_NewCert_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output path.
        /// </summary>
        public static string Dialogs_NewCert_OutputPath {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_OutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Dialogs_NewCert_Password {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;display-name&gt;.
        /// </summary>
        public static string Dialogs_NewCert_Placeholder_DisplayName {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Placeholder_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;name&gt;.
        /// </summary>
        public static string Dialogs_NewCert_Placeholder_Name {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Placeholder_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;output-directory&gt;.
        /// </summary>
        public static string Dialogs_NewCert_Placeholder_OutputDir {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Placeholder_OutputDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher display name.
        /// </summary>
        public static string Dialogs_NewCert_PublisherDisplayName {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_PublisherDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher name (subject).
        /// </summary>
        public static string Dialogs_NewCert_PublisherName {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_PublisherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your certificate has been successfully created..
        /// </summary>
        public static string Dialogs_NewCert_Success {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import this certificate to your Personal certificate store.
        /// </summary>
        public static string Dialogs_NewCert_Success_Import {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Success_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder with your certificate and its private key..
        /// </summary>
        public static string Dialogs_NewCert_Success_Open {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Success_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New self- signed certificate.
        /// </summary>
        public static string Dialogs_NewCert_Title {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The date lies in the past..
        /// </summary>
        public static string Dialogs_NewCert_Validation_DatePast {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Validation_DatePast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password cannot be empty..
        /// </summary>
        public static string Dialogs_NewCert_Validation_EmptyPwd {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Validation_EmptyPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the publisher cannot be empty..
        /// </summary>
        public static string Dialogs_NewCert_Validation_PublisherDisplayName {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_Validation_PublisherDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid until.
        /// </summary>
        public static string Dialogs_NewCert_ValidUntil {
            get {
                return ResourceManager.GetString("Dialogs_NewCert_ValidUntil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a volume….
        /// </summary>
        public static string Dialogs_NewVolume_Adding {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Adding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing the default volume….
        /// </summary>
        public static string Dialogs_NewVolume_ChangingDefault {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_ChangingDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default volume.
        /// </summary>
        public static string Dialogs_NewVolume_DefaultVolume {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_DefaultVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive.
        /// </summary>
        public static string Dialogs_NewVolume_Drive {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Drive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting available drives….
        /// </summary>
        public static string Dialogs_NewVolume_GettingDrives {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_GettingDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no disks available for a new MSIX package volume..
        /// </summary>
        public static string Dialogs_NewVolume_None {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add volume.
        /// </summary>
        public static string Dialogs_NewVolume_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string Dialogs_NewVolume_Path {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install packages in a custom folder path.
        /// </summary>
        public static string Dialogs_NewVolume_Path_Custom {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Path_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install packages to WindowsApps root folder (default).
        /// </summary>
        public static string Dialogs_NewVolume_Path_Default {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Path_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading volumes….
        /// </summary>
        public static string Dialogs_NewVolume_Reading {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make this volume my default volume.
        /// </summary>
        public static string Dialogs_NewVolume_SetAsDefault {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_SetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New volume has been created..
        /// </summary>
        public static string Dialogs_NewVolume_Success {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New volume.
        /// </summary>
        public static string Dialogs_NewVolume_Title {
            get {
                return ResourceManager.GetString("Dialogs_NewVolume_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string Dialogs_OK {
            get {
                return ResourceManager.GetString("Dialogs_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing the selected folder….
        /// </summary>
        public static string Dialogs_Pack_Analyzing {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Analyzing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating manifest file….
        /// </summary>
        public static string Dialogs_Pack_CreatingManifest {
            get {
                return ResourceManager.GetString("Dialogs_Pack_CreatingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full path to an folder where extracted files are.
        /// </summary>
        public static string Dialogs_Pack_FullPathFolder {
            get {
                return ResourceManager.GetString("Dialogs_Pack_FullPathFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full path to the output MSIX package.
        /// </summary>
        public static string Dialogs_Pack_FullPathMSIX {
            get {
                return ResourceManager.GetString("Dialogs_Pack_FullPathMSIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your folder does not contain manifest file. MSIX Hero will create one for you if you proceed..
        /// </summary>
        public static string Dialogs_Pack_ManifestWillBeCreated {
            get {
                return ResourceManager.GetString("Dialogs_Pack_ManifestWillBeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select for which executables entry points (applications) should be created..
        /// </summary>
        public static string Dialogs_Pack_ManifestWillBeCreated_EntryPoint {
            get {
                return ResourceManager.GetString("Dialogs_Pack_ManifestWillBeCreated_EntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder cannot be packed because it has no manifest, and MSIX Hero was unable to create one. A manifest can be only created if the selected folder contains any executable file..
        /// </summary>
        public static string Dialogs_Pack_NoManifestException {
            get {
                return ResourceManager.GetString("Dialogs_Pack_NoManifestException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder does not contain a manifest file and any executable files. It cannot be packed to MSIX format..
        /// </summary>
        public static string Dialogs_Pack_NoManifests {
            get {
                return ResourceManager.GetString("Dialogs_Pack_NoManifests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No conversion.
        /// </summary>
        public static string Dialogs_Pack_NoRegConversion {
            get {
                return ResourceManager.GetString("Dialogs_Pack_NoRegConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder does not contain any .reg file, so no registry conversion will take place..
        /// </summary>
        public static string Dialogs_Pack_NoRegFiles {
            get {
                return ResourceManager.GetString("Dialogs_Pack_NoRegFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack folder to MSIX package.
        /// </summary>
        public static string Dialogs_Pack_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_Pack_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform basic integrity checks.
        /// </summary>
        public static string Dialogs_Pack_Options_Check {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Options_Check", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress files according to their type.
        /// </summary>
        public static string Dialogs_Pack_Options_Compress {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Options_Compress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove input folder after packing.
        /// </summary>
        public static string Dialogs_Pack_Options_Remove {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Options_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign this package.
        /// </summary>
        public static string Dialogs_Pack_Options_Sign {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Options_Sign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package publisher name.
        /// </summary>
        public static string Dialogs_Pack_PackagePublisher {
            get {
                return ResourceManager.GetString("Dialogs_Pack_PackagePublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override package publisher with the certificate subject (recommended).
        /// </summary>
        public static string Dialogs_Pack_PackagePublisherOverride {
            get {
                return ResourceManager.GetString("Dialogs_Pack_PackagePublisherOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected folder contains no manifest files, and no executable files have been found. Packing to MSIX format is not possible..
        /// </summary>
        public static string Dialogs_Pack_PackingNotPossible {
            get {
                return ResourceManager.GetString("Dialogs_Pack_PackingNotPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX Hero found at least one file with .reg extension. Do you want to convert it to MSIX registry?.
        /// </summary>
        public static string Dialogs_Pack_RegFileAction {
            get {
                return ResourceManager.GetString("Dialogs_Pack_RegFileAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source directory.
        /// </summary>
        public static string Dialogs_Pack_SrcDir {
            get {
                return ResourceManager.GetString("Dialogs_Pack_SrcDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your folder has been successfully packed..
        /// </summary>
        public static string Dialogs_Pack_Success {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack another package.
        /// </summary>
        public static string Dialogs_Pack_Success_More {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Success_More", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing packed files.
        /// </summary>
        public static string Dialogs_Pack_Success_Open {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Success_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature.
        /// </summary>
        public static string Dialogs_Pack_TabSignature {
            get {
                return ResourceManager.GetString("Dialogs_Pack_TabSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source + target.
        /// </summary>
        public static string Dialogs_Pack_TabSourceTarget {
            get {
                return ResourceManager.GetString("Dialogs_Pack_TabSourceTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target package path.
        /// </summary>
        public static string Dialogs_Pack_TargetPackagePath {
            get {
                return ResourceManager.GetString("Dialogs_Pack_TargetPackagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack MSIX package.
        /// </summary>
        public static string Dialogs_Pack_Title {
            get {
                return ResourceManager.GetString("Dialogs_Pack_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an unpacked MSIX package. The manifest file (AppxManifest.xml) will be taken as-is during packaging..
        /// </summary>
        public static string Dialogs_Pack_UnpackedMsixInfo {
            get {
                return ResourceManager.GetString("Dialogs_Pack_UnpackedMsixInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string Dialogs_PackageName_Architecture {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x64.
        /// </summary>
        public static string Dialogs_PackageName_Architecture_64 {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Architecture_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x86.
        /// </summary>
        public static string Dialogs_PackageName_Architecture_86 {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Architecture_86", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM.
        /// </summary>
        public static string Dialogs_PackageName_Architecture_ARM {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Architecture_ARM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM64.
        /// </summary>
        public static string Dialogs_PackageName_Architecture_ARM64 {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Architecture_ARM64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to neutral.
        /// </summary>
        public static string Dialogs_PackageName_Architecture_Neutral {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Architecture_Neutral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated values.
        /// </summary>
        public static string Dialogs_PackageName_Calculated {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Calculated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PackageName.
        /// </summary>
        public static string Dialogs_PackageName_DefaultName {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_DefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CN=Publisher Name.
        /// </summary>
        public static string Dialogs_PackageName_DefaultPublisher {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_DefaultPublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family name.
        /// </summary>
        public static string Dialogs_PackageName_FamilyName {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_FamilyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy package family name to clipboard.
        /// </summary>
        public static string Dialogs_PackageName_FamilyName_Copy {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_FamilyName_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full name.
        /// </summary>
        public static string Dialogs_PackageName_FullName {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_FullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy full name to clipboard.
        /// </summary>
        public static string Dialogs_PackageName_FullName_Copy {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_FullName_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package identity.
        /// </summary>
        public static string Dialogs_PackageName_Identity {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid package name.
        /// </summary>
        public static string Dialogs_PackageName_InvalidPackageName {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_InvalidPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid package version.
        /// </summary>
        public static string Dialogs_PackageName_InvalidPackageVersion {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_InvalidPackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid publisher name.
        /// </summary>
        public static string Dialogs_PackageName_InvalidPublisherName {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_InvalidPublisherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid resource ID.
        /// </summary>
        public static string Dialogs_PackageName_InvalidResourceId {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_InvalidResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load from file….
        /// </summary>
        public static string Dialogs_PackageName_LoadFile {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_LoadFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        public static string Dialogs_PackageName_MissingFile {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_MissingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File extension {0} is not supported..
        /// </summary>
        public static string Dialogs_PackageName_NotSupportedExtension {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_NotSupportedExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only manifest files are accepted..
        /// </summary>
        public static string Dialogs_PackageName_OnlyManifests {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_OnlyManifests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string Dialogs_PackageName_ProductName {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher string.
        /// </summary>
        public static string Dialogs_PackageName_Publisher {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher hash.
        /// </summary>
        public static string Dialogs_PackageName_PublisherHash {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_PublisherHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy publisher hash to clipboard.
        /// </summary>
        public static string Dialogs_PackageName_PublisherHash_Copy {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_PublisherHash_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource ID.
        /// </summary>
        public static string Dialogs_PackageName_ResourceId {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_ResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name calculator.
        /// </summary>
        public static string Dialogs_PackageName_Title {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Dialogs_PackageName_Version {
            get {
                return ResourceManager.GetString("Dialogs_PackageName_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected folder {0} and all its subfolders.
        /// </summary>
        public static string Dialogs_PackageSigning_ImportFolder_Folder_Format {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_ImportFolder_Folder_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder contains both subfolders and MSIX file(s). Do you want to import all *.msix files, also including subfolders?.
        /// </summary>
        public static string Dialogs_PackageSigning_ImportFolder_Multiple {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_ImportFolder_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only selected folder.
        /// </summary>
        public static string Dialogs_PackageSigning_ImportFolder_Title {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_ImportFolder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update selected packages.
        /// </summary>
        public static string Dialogs_PackageSigning_OkLabel {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_OkLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;path-to-msix&gt;.
        /// </summary>
        public static string Dialogs_PackageSigning_Placeholder_Msix {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Placeholder_Msix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;path-to-pfx-file&gt;.
        /// </summary>
        public static string Dialogs_PackageSigning_Placeholder_Pfx {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Placeholder_Pfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;your-password&gt;.
        /// </summary>
        public static string Dialogs_PackageSigning_Placeholder_Pwd {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Placeholder_Pwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;certificate-thumbprint&gt;.
        /// </summary>
        public static string Dialogs_PackageSigning_Placeholder_Thumbprint {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Placeholder_Thumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package(s) have been successfully signed..
        /// </summary>
        public static string Dialogs_PackageSigning_Success {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing the signed package.
        /// </summary>
        public static string Dialogs_PackageSigning_Success_OpenFolder {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Success_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign some more packages.
        /// </summary>
        public static string Dialogs_PackageSigning_Success_SignMore {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Success_SignMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjustments.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version after signing:.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments_Version {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase build (A.B.[*].D) by one.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments_Version_Build {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments_Version_Build", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase major ([*].B.C.D) by one.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments_Version_Major {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments_Version_Major", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase minor (A.[*].C.D) by one.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments_Version_Minor {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments_Version_Minor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not change the version.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments_Version_Nothing {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments_Version_Nothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase revision (A.B.C.[*]) by one.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Adjustments_Version_Revision {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Adjustments_Version_Revision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Certificate {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package publisher name.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Certificate_PublisherName {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Certificate_PublisherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override package publisher with the certificate subject (recommended).
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Certificate_PublisherName_Override {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Certificate_PublisherName_Override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add package(s)….
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages_Button_Add {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages_Button_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add folder….
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages_Button_AddFolder {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages_Button_AddFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages_Button_Remove {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages_Button_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release Left Mouse Button to drop the files here.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages_DragDrop_Hint {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages_DragDrop_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package(s) to sign.
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages_Label {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected package(s).
        /// </summary>
        public static string Dialogs_PackageSigning_Tabs_Packages_Menu_Remove {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Tabs_Packages_Menu_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package signing.
        /// </summary>
        public static string Dialogs_PackageSigning_Title {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one file is required..
        /// </summary>
        public static string Dialogs_PackageSigning_Validation_FileNotSelected {
            get {
                return ResourceManager.GetString("Dialogs_PackageSigning_Validation_FileNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default (MSIXMGR).
        /// </summary>
        public static string Dialogs_Settings_AppAttach_DefaultStrategy {
            get {
                return ResourceManager.GetString("Dialogs_Settings_AppAttach_DefaultStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternative (Legacy / MSIX Hero 1.5).
        /// </summary>
        public static string Dialogs_Settings_AppAttach_LegacyStrategy {
            get {
                return ResourceManager.GetString("Dialogs_Settings_AppAttach_LegacyStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App attach volume creation strategy.
        /// </summary>
        public static string Dialogs_Settings_AppAttach_Strategy {
            get {
                return ResourceManager.GetString("Dialogs_Settings_AppAttach_Strategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote .msix URL.
        /// </summary>
        public static string Dialogs_Settings_AppInstaller_RemoteMsix {
            get {
                return ResourceManager.GetString("Dialogs_Settings_AppInstaller_RemoteMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote .appinstaller URL.
        /// </summary>
        public static string Dialogs_Settings_AppInstaller_RemoteUrl {
            get {
                return ResourceManager.GetString("Dialogs_Settings_AppInstaller_RemoteUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for an icon….
        /// </summary>
        public static string Dialogs_Settings_BrowseIcon {
            get {
                return ResourceManager.GetString("Dialogs_Settings_BrowseIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate output path.
        /// </summary>
        public static string Dialogs_Settings_Certificate_Output {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Certificate_Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands.
        /// </summary>
        public static string Dialogs_Settings_Commands {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments.
        /// </summary>
        public static string Dialogs_Settings_Commands_Arguments {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command.
        /// </summary>
        public static string Dialogs_Settings_Commands_Command {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use default icon.
        /// </summary>
        public static string Dialogs_Settings_Commands_DefaultIcon {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_DefaultIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display name.
        /// </summary>
        public static string Dialogs_Settings_Commands_DisplayName {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon.
        /// </summary>
        public static string Dialogs_Settings_Commands_Icon {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_Icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string Dialogs_Settings_Commands_New {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Dialogs_Settings_Commands_Remove {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: reorder commands by drag-and-drop..
        /// </summary>
        public static string Dialogs_Settings_Commands_Reorder_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_Reorder_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run as administrator.
        /// </summary>
        public static string Dialogs_Settings_Commands_RunAsAdmin {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Commands_RunAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editors.
        /// </summary>
        public static string Dialogs_Settings_Editors {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer editor path.
        /// </summary>
        public static string Dialogs_Settings_Editors_AppInstaller_Path {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_AppInstaller_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer files.
        /// </summary>
        public static string Dialogs_Settings_Editors_AppInstallerFiles {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_AppInstallerFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default editor for App installer files (*.appinstaller).
        /// </summary>
        public static string Dialogs_Settings_Editors_AppInstallerFiles_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_AppInstallerFiles_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always ask me which program to use.
        /// </summary>
        public static string Dialogs_Settings_Editors_Ask {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Ask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed packages.
        /// </summary>
        public static string Dialogs_Settings_Editors_CompressedPackages {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_CompressedPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default editor for APPX/MSIX files.
        /// </summary>
        public static string Dialogs_Settings_Editors_CompressedPackages_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_CompressedPackages_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open with custom application.
        /// </summary>
        public static string Dialogs_Settings_Editors_CustomApp {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_CustomApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open with default application.
        /// </summary>
        public static string Dialogs_Settings_Editors_Default {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open with default JSON editor.
        /// </summary>
        public static string Dialogs_Settings_Editors_DefaultJson {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_DefaultJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open with default text editor.
        /// </summary>
        public static string Dialogs_Settings_Editors_DefaultTxt {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_DefaultTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open with default XML editor.
        /// </summary>
        public static string Dialogs_Settings_Editors_DefaultXml {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_DefaultXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest editor path.
        /// </summary>
        public static string Dialogs_Settings_Editors_Manifest_Path {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Manifest_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest files.
        /// </summary>
        public static string Dialogs_Settings_Editors_ManifestFiles {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_ManifestFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default editor for manifest files (AppxManifest.xml).
        /// </summary>
        public static string Dialogs_Settings_Editors_ManifestFiles_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_ManifestFiles_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX editor path.
        /// </summary>
        public static string Dialogs_Settings_Editors_Msix_Path {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Msix_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell.
        /// </summary>
        public static string Dialogs_Settings_Editors_PowerShell {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_PowerShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default editor for PS1 scripts.
        /// </summary>
        public static string Dialogs_Settings_Editors_PowerShell_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_PowerShell_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell editor path.
        /// </summary>
        public static string Dialogs_Settings_Editors_Ps1_Path {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Ps1_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Support Framework.
        /// </summary>
        public static string Dialogs_Settings_Editors_Psf {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Psf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default editor for Package Support Framework configuration files.
        /// </summary>
        public static string Dialogs_Settings_Editors_Psf_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Psf_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PSF editor path.
        /// </summary>
        public static string Dialogs_Settings_Editors_Psf_Path {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Psf_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot be empty..
        /// </summary>
        public static string Dialogs_Settings_Editors_Validation_EmptyPath {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Validation_EmptyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid URI..
        /// </summary>
        public static string Dialogs_Settings_Editors_Validation_WrongUrl {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Editors_Validation_WrongUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial screen.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Containers.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen_Containers {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen_Containers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event viewer.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen_EventViewer {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen_EventViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen_Packages {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen_Packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System state.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen_SystemState {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen_SystemState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tools dashboard.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen_Tools {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen_Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volumes.
        /// </summary>
        public static string Dialogs_Settings_InitialScreen_Volumes {
            get {
                return ResourceManager.GetString("Dialogs_Settings_InitialScreen_Volumes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface.
        /// </summary>
        public static string Dialogs_Settings_Interface {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Dialogs_Settings_Language {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto.
        /// </summary>
        public static string Dialogs_Settings_Language_Auto {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Language_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        public static string Dialogs_Settings_Other {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer (.appinstaller).
        /// </summary>
        public static string Dialogs_Settings_Other_AppInstaller {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificates.
        /// </summary>
        public static string Dialogs_Settings_Other_Certificates {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Certificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default folder where certificates are extracted.
        /// </summary>
        public static string Dialogs_Settings_Other_Certificates_DefaultFolder {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Certificates_DefaultFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX Hero logging.
        /// </summary>
        public static string Dialogs_Settings_Other_Logs {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Logs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to open the current log file.
        /// </summary>
        public static string Dialogs_Settings_Other_Logs_Open {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Logs_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable verbose logging.
        /// </summary>
        public static string Dialogs_Settings_Other_Logs_Verbose {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Logs_Verbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing.
        /// </summary>
        public static string Dialogs_Settings_Other_Packing {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Packing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign packages after packing.
        /// </summary>
        public static string Dialogs_Settings_Other_Packing_Sign {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Packing_Sign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default base URI for hosted MSIX packages.
        /// </summary>
        public static string Dialogs_Settings_Other_Url {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default base URI for hosted app installer files.
        /// </summary>
        public static string Dialogs_Settings_Other_Url_AppInstaller {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Other_Url_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompts.
        /// </summary>
        public static string Dialogs_Settings_Prompts {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Prompts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm removal of items.
        /// </summary>
        public static string Dialogs_Settings_Prompts_ConfirmRemoving {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Prompts_ConfirmRemoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release notes.
        /// </summary>
        public static string Dialogs_Settings_ReleaseNotes {
            get {
                return ResourceManager.GetString("Dialogs_Settings_ReleaseNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Release Notes after each update of MSIX Hero.
        /// </summary>
        public static string Dialogs_Settings_ReleaseNotes_Show {
            get {
                return ResourceManager.GetString("Dialogs_Settings_ReleaseNotes_Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove icon….
        /// </summary>
        public static string Dialogs_Settings_RemoveIcon {
            get {
                return ResourceManager.GetString("Dialogs_Settings_RemoveIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing.
        /// </summary>
        public static string Dialogs_Settings_Signing {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Signing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start-up.
        /// </summary>
        public static string Dialogs_Settings_StartUp {
            get {
                return ResourceManager.GetString("Dialogs_Settings_StartUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings - MSIX Hero.
        /// </summary>
        public static string Dialogs_Settings_Title {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SETTINGS - MSIX HERO.
        /// </summary>
        public static string Dialogs_Settings_TitleUpper {
            get {
                return ResourceManager.GetString("Dialogs_Settings_TitleUpper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command icon.
        /// </summary>
        public static string Dialogs_Settings_Tools_CommandIcon {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_CommandIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command name.
        /// </summary>
        public static string Dialogs_Settings_Tools_CommandName {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_CommandName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command path.
        /// </summary>
        public static string Dialogs_Settings_Tools_CommandPath {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_CommandPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move {0} here.
        /// </summary>
        public static string Dialogs_Settings_Tools_DragDrop_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_DragDrop_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable files.
        /// </summary>
        public static string Dialogs_Settings_Tools_Filter_Exe {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_Filter_Exe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon files.
        /// </summary>
        public static string Dialogs_Settings_Tools_Filter_Ico {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_Filter_Ico", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New tool.
        /// </summary>
        public static string Dialogs_Settings_Tools_NewTool_Name {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_NewTool_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot be empty..
        /// </summary>
        public static string Dialogs_Settings_Tools_Validation_EmptyName {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_Validation_EmptyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to a tool cannot be empty..
        /// </summary>
        public static string Dialogs_Settings_Tools_Validation_EmptyPath {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Tools_Validation_EmptyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visuals and performance.
        /// </summary>
        public static string Dialogs_Settings_Visuals {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic (recommended).
        /// </summary>
        public static string Dialogs_Settings_Visuals_Automatic {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UI adjusts automatically to your hardware and session status..
        /// </summary>
        public static string Dialogs_Settings_Visuals_Automatic_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Automatic_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best looking.
        /// </summary>
        public static string Dialogs_Settings_Visuals_BestLook {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_BestLook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animations, transparency and acrylic effects are always enabled..
        /// </summary>
        public static string Dialogs_Settings_Visuals_BestLook_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_BestLook_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting controls how much Windows 10 acrylic effect, animations and other effects are used..
        /// </summary>
        public static string Dialogs_Settings_Visuals_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium.
        /// </summary>
        public static string Dialogs_Settings_Visuals_Medium {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A compromise between look-and-feel and performance..
        /// </summary>
        public static string Dialogs_Settings_Visuals_Medium_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Medium_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best performance.
        /// </summary>
        public static string Dialogs_Settings_Visuals_Performance {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Performance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animations, transparency and acrylic effects are always disabled..
        /// </summary>
        public static string Dialogs_Settings_Visuals_Performance_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Settings_Visuals_Performance_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add installed….
        /// </summary>
        public static string Dialogs_SharedContainer_AddButton {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_AddButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already selected.
        /// </summary>
        public static string Dialogs_SharedContainer_AlreadySelected {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_AlreadySelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building shared package container….
        /// </summary>
        public static string Dialogs_SharedContainer_Building {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Building", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy container.
        /// </summary>
        public static string Dialogs_SharedContainer_Button_Deploy {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Button_Deploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create XML file….
        /// </summary>
        public static string Dialogs_SharedContainer_Button_Xml {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Button_Xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The container cannot be deployed. There is already a container with that name, and it already contains all required packages..
        /// </summary>
        public static string Dialogs_SharedContainer_CannotDeploy_AllPackagesThere {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_CannotDeploy_AllPackagesThere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current container:.
        /// </summary>
        public static string Dialogs_SharedContainer_Compare_CurrentContainer {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Compare_CurrentContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed container:.
        /// </summary>
        public static string Dialogs_SharedContainer_Compare_InstalledContainer {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Compare_InstalledContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [NEW].
        /// </summary>
        public static string Dialogs_SharedContainer_Compare_New {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Compare_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container &apos;{0}&apos; already exists and contains {1} packages. How do you want to proceed?.
        /// </summary>
        public static string Dialogs_SharedContainer_ContainerExists {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContainerExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extend existing container.
        /// </summary>
        public static string Dialogs_SharedContainer_ContainerExists_Extend {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContainerExists_Extend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace existing container.
        /// </summary>
        public static string Dialogs_SharedContainer_ContainerExists_Replace {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContainerExists_Replace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container already exists.
        /// </summary>
        public static string Dialogs_SharedContainer_ContainerExists_Title {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContainerExists_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container for {0}.
        /// </summary>
        public static string Dialogs_SharedContainer_ContainerForPkg {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContainerForPkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container name.
        /// </summary>
        public static string Dialogs_SharedContainer_ContainerName {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContainerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue with selection.
        /// </summary>
        public static string Dialogs_SharedContainer_ContinueButton {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ContinueButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploying….
        /// </summary>
        public static string Dialogs_SharedContainer_Deploying {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Deploying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family name.
        /// </summary>
        public static string Dialogs_SharedContainer_FamilyName {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_FamilyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import….
        /// </summary>
        public static string Dialogs_SharedContainer_ImportButton {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ImportButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New….
        /// </summary>
        public static string Dialogs_SharedContainer_NewButton {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_NewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploying of containers is not supported on this version of Windows. You need at least Windows 11 build 21354 (10.0.21354) to use this feature..
        /// </summary>
        public static string Dialogs_SharedContainer_NotSupported {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation type.
        /// </summary>
        public static string Dialogs_SharedContainer_OperationType {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_OperationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy the container.
        /// </summary>
        public static string Dialogs_SharedContainer_OperationType_Deploy {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_OperationType_Deploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WINDOWS 11 ONLY.
        /// </summary>
        public static string Dialogs_SharedContainer_OperationType_DeployWin11 {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_OperationType_DeployWin11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create .XML file.
        /// </summary>
        public static string Dialogs_SharedContainer_OperationType_Xml {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_OperationType_Xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;output-file-path.xml&gt;.
        /// </summary>
        public static string Dialogs_SharedContainer_Output_Placeholder {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Output_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; is already added to container &apos;{1}&apos;. Windows does not support multiple containers for the same package..
        /// </summary>
        public static string Dialogs_SharedContainer_PackageInMultipleContainers {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_PackageInMultipleContainers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages in the container.
        /// </summary>
        public static string Dialogs_SharedContainer_PackagesInContainer {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_PackagesInContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press.
        /// </summary>
        public static string Dialogs_SharedContainer_Press1 {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Press1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to to accept.
        /// </summary>
        public static string Dialogs_SharedContainer_Press2 {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Press2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Dialogs_SharedContainer_RemoveButton {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_RemoveButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: reorder packages by drag-and-drop to set priorities, double click or [F2] to edit..
        /// </summary>
        public static string Dialogs_SharedContainer_ReorderTip {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_ReorderTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container has been deployed.
        /// </summary>
        public static string Dialogs_SharedContainer_Result_Deployed {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Result_Deployed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container has been merged.
        /// </summary>
        public static string Dialogs_SharedContainer_Result_Merged {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Result_Merged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container replaced.
        /// </summary>
        public static string Dialogs_SharedContainer_Result_Replaced {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Result_Replaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected package could not be read..
        /// </summary>
        public static string Dialogs_SharedContainer_Selection_Error {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Selection_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some package(s) could not be opened..
        /// </summary>
        public static string Dialogs_SharedContainer_Selections_Error {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Selections_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared package container has been installed..
        /// </summary>
        public static string Dialogs_SharedContainer_Success_Deploy {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Success_Deploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared package container has been successfully created..
        /// </summary>
        public static string Dialogs_SharedContainer_Success_Xml {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Success_Xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create shared package container definition.
        /// </summary>
        public static string Dialogs_SharedContainer_Title {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying….
        /// </summary>
        public static string Dialogs_SharedContainer_Verifying {
            get {
                return ResourceManager.GetString("Dialogs_SharedContainer_Verifying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;output-directory&gt;.
        /// </summary>
        public static string Dialogs_Unpack_Cmd_Placeholder_OutputDir {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Cmd_Placeholder_OutputDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;source-package&gt;.
        /// </summary>
        public static string Dialogs_Unpack_Cmd_Placeholder_SourcePkg {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Cmd_Placeholder_SourcePkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full path to an folder where files will be extracted.
        /// </summary>
        public static string Dialogs_Unpack_FullFolderPath {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_FullFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full path to an MSIX package.
        /// </summary>
        public static string Dialogs_Unpack_FullMsixPath {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_FullMsixPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpack package.
        /// </summary>
        public static string Dialogs_Unpack_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new sub-directory for the unpacked content.
        /// </summary>
        public static string Dialogs_Unpack_Options_CreateDir {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Options_CreateDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove original package after unpacking.
        /// </summary>
        public static string Dialogs_Unpack_Options_Remove {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Options_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source package path.
        /// </summary>
        public static string Dialogs_Unpack_SourceMsix {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_SourceMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package has been successfully unpacked..
        /// </summary>
        public static string Dialogs_Unpack_Success {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpack another package.
        /// </summary>
        public static string Dialogs_Unpack_Success_More {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Success_More", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing unpacked files.
        /// </summary>
        public static string Dialogs_Unpack_Success_Open {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Success_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target directory.
        /// </summary>
        public static string Dialogs_Unpack_TargetDir {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_TargetDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _extracted.
        /// </summary>
        public static string Dialogs_Unpack_TargetDir_Suffix {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_TargetDir_Suffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpack MSIX package.
        /// </summary>
        public static string Dialogs_Unpack_Title {
            get {
                return ResourceManager.GetString("Dialogs_Unpack_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newer version.
        /// </summary>
        public static string Dialogs_UpdateImpact_Blank_New {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Blank_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the newer version of the MSIX package to be compared….
        /// </summary>
        public static string Dialogs_UpdateImpact_Blank_New_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Blank_New_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Older version.
        /// </summary>
        public static string Dialogs_UpdateImpact_Blank_Old {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Blank_Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the previous version of the MSIX package to be compared….
        /// </summary>
        public static string Dialogs_UpdateImpact_Blank_Old_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Blank_Old_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added.
        /// </summary>
        public static string Dialogs_UpdateImpact_ChangeType_Added {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_ChangeType_Added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed.
        /// </summary>
        public static string Dialogs_UpdateImpact_ChangeType_Changed {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_ChangeType_Changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleted.
        /// </summary>
        public static string Dialogs_UpdateImpact_ChangeType_Deleted {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_ChangeType_Deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unchanged.
        /// </summary>
        public static string Dialogs_UpdateImpact_ChangeType_Unchanged {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_ChangeType_Unchanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compare.
        /// </summary>
        public static string Dialogs_UpdateImpact_Compare {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Compare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze the update impact.
        /// </summary>
        public static string Dialogs_UpdateImpact_Compare_Button {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Compare_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press the button to start comparing selected packages….
        /// </summary>
        public static string Dialogs_UpdateImpact_Compare_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Compare_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files.
        /// </summary>
        public static string Dialogs_UpdateImpact_Duplicates_FilesCount {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Duplicates_FilesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (+1 another file).
        /// </summary>
        public static string Dialogs_UpdateImpact_Duplicates_NamedFilePlusOne {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Duplicates_NamedFilePlusOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (+{1} other files).
        /// </summary>
        public static string Dialogs_UpdateImpact_Duplicates_NamedFilePlusOther {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Duplicates_NamedFilePlusOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not compare selected packages..
        /// </summary>
        public static string Dialogs_UpdateImpact_Errors {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Retry to ignore the version check and compare the packages anyway..
        /// </summary>
        public static string Dialogs_UpdateImpact_Errors_IgnoreRetry {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Errors_IgnoreRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid versions.
        /// </summary>
        public static string Dialogs_UpdateImpact_Errors_InvalidVersions {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Errors_InvalidVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing values.
        /// </summary>
        public static string Dialogs_UpdateImpact_Errors_MissingValues {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Errors_MissingValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export to XML….
        /// </summary>
        public static string Dialogs_UpdateImpact_ExportXML {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_ExportXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the previous version of an upgradable package.
        /// </summary>
        public static string Dialogs_UpdateImpact_File1_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_File1_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to the old version.
        /// </summary>
        public static string Dialogs_UpdateImpact_File1_Path {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_File1_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the newer version of an upgradable package.
        /// </summary>
        public static string Dialogs_UpdateImpact_File2_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_File2_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to the new version.
        /// </summary>
        public static string Dialogs_UpdateImpact_File2_Path {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_File2_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_All {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_Column_Name {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_Column_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_Column_Size {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_Column_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible size reduction.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_Column_SizeReduction {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_Column_SizeReduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_Column_Type {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_Column_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update impact.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_Column_UpdateImpact {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_Column_UpdateImpact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only changes.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_OnlyChanges {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_OnlyChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only impacting update.
        /// </summary>
        public static string Dialogs_UpdateImpact_Files_OnlyImpacting {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Files_OnlyImpacting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in {0} files.
        /// </summary>
        public static string Dialogs_UpdateImpact_InXFiles {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_InXFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New comparison.
        /// </summary>
        public static string Dialogs_UpdateImpact_New {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze update impact.
        /// </summary>
        public static string Dialogs_UpdateImpact_OK {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_Added {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_Added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks after.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_BlocksAfter {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_BlocksAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks before.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_BlocksBefore {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_BlocksBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_Changed {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_Changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files after.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_FilesAfter {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_FilesAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files before.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_FilesBefore {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_FilesBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Net size difference.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_NetSizeDiff {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_NetSizeDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The difference between the old and the new size (all uncompressed files). The number is positive if the new package requires more space than the old one..
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_NetSizeDiff_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_NetSizeDiff_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The relation between the total size of the new package files compared to the total size of the old package (uncompressed)..
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_NetSizeDiff_Tooltip {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_NetSizeDiff_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_Removed {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_Removed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unchanged.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_Unchanged {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_Unchanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update impact.
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_UpdateImpact {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_UpdateImpact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The approximated size of the data that needs to be downloaded to perform an update..
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_UpdateImpact_HelpText {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_UpdateImpact_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The relation between the required download size compared to the new total package size (compressed). For example, a value of -30% means that the total size of the required download during the update is 30% lower than the actual size of the package. The less the number is the more bandwidth is saved thanks to byte-level differencing..
        /// </summary>
        public static string Dialogs_UpdateImpact_Overview_UpdateImpact_Tooltip {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Overview_UpdateImpact_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool analyzes the differences between two versions of a package and determines how the changes and additions can impact the process of updating..
        /// </summary>
        public static string Dialogs_UpdateImpact_Purpose {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to select another file….
        /// </summary>
        public static string Dialogs_UpdateImpact_SelectAnotherFile_Tooltip {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SelectAnotherFile_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added files.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_AddedFiles {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_AddedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed files.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_ChangedFiles {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_ChangedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated files.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_DuplicatedFiles {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_DuplicatedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in {0} files.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_In {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed files.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_RemovedFiles {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_RemovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ∑ Total.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_Total {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_Total", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unchanged files.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeComparison_UnchangedFiles {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeComparison_UnchangedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no difference.
        /// </summary>
        public static string Dialogs_UpdateImpact_SizeNoDiff {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_SizeNoDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicates.
        /// </summary>
        public static string Dialogs_UpdateImpact_Tabs_Duplicates {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Tabs_Duplicates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        public static string Dialogs_UpdateImpact_Tabs_Files {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Tabs_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string Dialogs_UpdateImpact_Tabs_Overview {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Tabs_Overview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size comparison.
        /// </summary>
        public static string Dialogs_UpdateImpact_Tabs_SizeComparison {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Tabs_SizeComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze update impact.
        /// </summary>
        public static string Dialogs_UpdateImpact_Title {
            get {
                return ResourceManager.GetString("Dialogs_UpdateImpact_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX Hero has just been updated to version **{0}**..
        /// </summary>
        public static string Dialogs_WhatsNew_AfterUpdate {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_AfterUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read the news on the official website to learn more about this new update….
        /// </summary>
        public static string Dialogs_WhatsNew_AfterUpdate_ReadMore {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_AfterUpdate_ReadMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation and how-to.
        /// </summary>
        public static string Dialogs_WhatsNew_Docs {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_Docs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source code on github.com.
        /// </summary>
        public static string Dialogs_WhatsNew_Git {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_Git", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License and conditions.
        /// </summary>
        public static string Dialogs_WhatsNew_License {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New version.
        /// </summary>
        public static string Dialogs_WhatsNew_NewVersion {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_NewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Official website.
        /// </summary>
        public static string Dialogs_WhatsNew_OfficialWebsite {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_OfficialWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional resources.
        /// </summary>
        public static string Dialogs_WhatsNew_Resources {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show this information after each update.
        /// </summary>
        public static string Dialogs_WhatsNew_ShowUpdateInfo {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_ShowUpdateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss and go to the list of shared containers.
        /// </summary>
        public static string Dialogs_WhatsNew_SkipToContainers {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_SkipToContainers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss and go to MSIX logs.
        /// </summary>
        public static string Dialogs_WhatsNew_SkipToEventViewer {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_SkipToEventViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss and go to the list of installed apps.
        /// </summary>
        public static string Dialogs_WhatsNew_SkipToPackages {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_SkipToPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss and go to the System status.
        /// </summary>
        public static string Dialogs_WhatsNew_SkipToStatus {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_SkipToStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss and go to the tools.
        /// </summary>
        public static string Dialogs_WhatsNew_SkipToTools {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_SkipToTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss and go to the list of volumes.
        /// </summary>
        public static string Dialogs_WhatsNew_SkipToVolumes {
            get {
                return ResourceManager.GetString("Dialogs_WhatsNew_SkipToVolumes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AppMoniker.
        /// </summary>
        public static string Dialogs_Winget_AppMoniker {
            get {
                return ResourceManager.GetString("Dialogs_Winget_AppMoniker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The common name someone may use to search for the package.
        /// </summary>
        public static string Dialogs_Winget_AppMoniker_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Winget_AppMoniker_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer architecture.
        /// </summary>
        public static string Dialogs_Winget_Architecture {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM.
        /// </summary>
        public static string Dialogs_Winget_Architecture_Arm {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture_Arm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM64.
        /// </summary>
        public static string Dialogs_Winget_Architecture_Arm64 {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture_Arm64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neutral.
        /// </summary>
        public static string Dialogs_Winget_Architecture_Neutral {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture_Neutral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown / not specified.
        /// </summary>
        public static string Dialogs_Winget_Architecture_None {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x64.
        /// </summary>
        public static string Dialogs_Winget_Architecture_x64 {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture_x64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x86.
        /// </summary>
        public static string Dialogs_Winget_Architecture_x86 {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Architecture_x86", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get hash from a local file….
        /// </summary>
        public static string Dialogs_Winget_Button_HashFile {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Button_HashFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get hash from installer URL.
        /// </summary>
        public static string Dialogs_Winget_Button_HashUrl {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Button_HashUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load data from MSI/MSIX/EXE….
        /// </summary>
        public static string Dialogs_Winget_Button_Load {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Button_Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line for basic installation (with progress).
        /// </summary>
        public static string Dialogs_Winget_Cmd_Basic {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Cmd_Basic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line for custom installation.
        /// </summary>
        public static string Dialogs_Winget_Cmd_Custom {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Cmd_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line for interactive installation.
        /// </summary>
        public static string Dialogs_Winget_Cmd_Interactive {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Cmd_Interactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line for logging.
        /// </summary>
        public static string Dialogs_Winget_Cmd_Logging {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Cmd_Logging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line for silent installation.
        /// </summary>
        public static string Dialogs_Winget_Cmd_Silent {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Cmd_Silent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line for upgrade.
        /// </summary>
        public static string Dialogs_Winget_Cmd_Upgrade {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Cmd_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright string.
        /// </summary>
        public static string Dialogs_Winget_Copyrights {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Copyrights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link to the copyright page.
        /// </summary>
        public static string Dialogs_Winget_CopyrightsUrl {
            get {
                return ResourceManager.GetString("Dialogs_Winget_CopyrightsUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will download the file &apos;{0}&apos; and calculate its hash. The download may take a while, do you want to continue?.
        /// </summary>
        public static string Dialogs_Winget_DownloadHash_Info_Format {
            get {
                return ResourceManager.GetString("Dialogs_Winget_DownloadHash_Info_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file could not be hashed..
        /// </summary>
        public static string Dialogs_Winget_Errors_HashingFailed {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Errors_HashingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first configure the installer URL before a hash can be calculated..
        /// </summary>
        public static string Dialogs_Winget_Errors_InstallerUrlRequired {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Errors_InstallerUrlRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load the details from the selected file..
        /// </summary>
        public static string Dialogs_Winget_Errors_LoadFailed {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Errors_LoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full description.
        /// </summary>
        public static string Dialogs_Winget_Full_Description {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Full_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product homepage.
        /// </summary>
        public static string Dialogs_Winget_Homepage {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Homepage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom command.
        /// </summary>
        public static string Dialogs_Winget_Installer_Custom {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will download the file &apos;{0}&apos; and calculate its hash. The download may take a while, do you want to continue?.
        /// </summary>
        public static string Dialogs_Winget_Installer_DownloadHint_Format {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_DownloadHint_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file could not be hashed..
        /// </summary>
        public static string Dialogs_Winget_Installer_Error_Hash {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Error_Hash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first configure the installer URL before a hash can be calculated..
        /// </summary>
        public static string Dialogs_Winget_Installer_Error_MissingUrl {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Error_MissingUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation type must be selected..
        /// </summary>
        public static string Dialogs_Winget_Installer_Error_TypeNotSet {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Error_TypeNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interactive command.
        /// </summary>
        public static string Dialogs_Winget_Installer_Interactive {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Interactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log command.
        /// </summary>
        public static string Dialogs_Winget_Installer_Log {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package family name.
        /// </summary>
        public static string Dialogs_Winget_Installer_PFN {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_PFN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product code.
        /// </summary>
        public static string Dialogs_Winget_Installer_ProductCode {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_ProductCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature hash.
        /// </summary>
        public static string Dialogs_Winget_Installer_SignatureHash {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_SignatureHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silent command.
        /// </summary>
        public static string Dialogs_Winget_Installer_Silent {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Silent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silent command with progress.
        /// </summary>
        public static string Dialogs_Winget_Installer_SilentProgress {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_SilentProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer type.
        /// </summary>
        public static string Dialogs_Winget_Installer_Type {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade command.
        /// </summary>
        public static string Dialogs_Winget_Installer_Upgrade {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Installer_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer hash.
        /// </summary>
        public static string Dialogs_Winget_InstallerHash {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer type.
        /// </summary>
        public static string Dialogs_Winget_InstallerType {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPX.
        /// </summary>
        public static string Dialogs_Winget_InstallerType_APPX {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_APPX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable (WIX/Burn).
        /// </summary>
        public static string Dialogs_Winget_InstallerType_Burn {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_Burn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable (generic).
        /// </summary>
        public static string Dialogs_Winget_InstallerType_EXE {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_EXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable (Inno Setup).
        /// </summary>
        public static string Dialogs_Winget_InstallerType_Inno {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_Inno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSI (Windows Installer).
        /// </summary>
        public static string Dialogs_Winget_InstallerType_MSI {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_MSI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX.
        /// </summary>
        public static string Dialogs_Winget_InstallerType_MSIX {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_MSIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown / not specified.
        /// </summary>
        public static string Dialogs_Winget_InstallerType_None {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable (NSIS).
        /// </summary>
        public static string Dialogs_Winget_InstallerType_Nsis {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_Nsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progressive Web App.
        /// </summary>
        public static string Dialogs_Winget_InstallerType_PWA {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_PWA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSI (WIX).
        /// </summary>
        public static string Dialogs_Winget_InstallerType_Wix {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_Wix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZIP file.
        /// </summary>
        public static string Dialogs_Winget_InstallerType_Zip {
            get {
                return ResourceManager.GetString("Dialogs_Winget_InstallerType_Zip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License.
        /// </summary>
        public static string Dialogs_Winget_License {
            get {
                return ResourceManager.GetString("Dialogs_Winget_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link to the license page.
        /// </summary>
        public static string Dialogs_Winget_LicenseUrl {
            get {
                return ResourceManager.GetString("Dialogs_Winget_LicenseUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest version.
        /// </summary>
        public static string Dialogs_Winget_ManifestVersion {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ManifestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest version changed to {0}..
        /// </summary>
        public static string Dialogs_Winget_ManifestVersionChanged_Format {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ManifestVersionChanged_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum required Windows version.
        /// </summary>
        public static string Dialogs_Winget_MinimumWindowsVersion {
            get {
                return ResourceManager.GetString("Dialogs_Winget_MinimumWindowsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: The official repository has some conventions to follow. This value must include the publisher name and application name separated by a period..
        /// </summary>
        public static string Dialogs_Winget_OfficialRepo_Conventions {
            get {
                return ResourceManager.GetString("Dialogs_Winget_OfficialRepo_Conventions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create winget manifest.
        /// </summary>
        public static string Dialogs_Winget_OkButton {
            get {
                return ResourceManager.GetString("Dialogs_Winget_OkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open YAML file….
        /// </summary>
        public static string Dialogs_Winget_OpenButton {
            get {
                return ResourceManager.GetString("Dialogs_Winget_OpenButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package identifier.
        /// </summary>
        public static string Dialogs_Winget_PackageIdentifier {
            get {
                return ResourceManager.GetString("Dialogs_Winget_PackageIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string Dialogs_Winget_PackageName {
            get {
                return ResourceManager.GetString("Dialogs_Winget_PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version.
        /// </summary>
        public static string Dialogs_Winget_PackageVersion {
            get {
                return ResourceManager.GetString("Dialogs_Winget_PackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform.
        /// </summary>
        public static string Dialogs_Winget_Platform {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Platform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UWP App.
        /// </summary>
        public static string Dialogs_Winget_Platform_UWP {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Platform_UWP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 Desktop App.
        /// </summary>
        public static string Dialogs_Winget_Platform_Win32 {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Platform_Win32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package publisher.
        /// </summary>
        public static string Dialogs_Winget_Publisher {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scope.
        /// </summary>
        public static string Dialogs_Winget_Scope {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Scope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machine installation.
        /// </summary>
        public static string Dialogs_Winget_Scope_Machine {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Scope_Machine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown / not specified.
        /// </summary>
        public static string Dialogs_Winget_Scope_Unknown {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Scope_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User installation.
        /// </summary>
        public static string Dialogs_Winget_Scope_User {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Scope_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short description.
        /// </summary>
        public static string Dialogs_Winget_Short_Description {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Short_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature hash.
        /// </summary>
        public static string Dialogs_Winget_SignatureHash {
            get {
                return ResourceManager.GetString("Dialogs_Winget_SignatureHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your winget package manifest has been successfully created..
        /// </summary>
        public static string Dialogs_Winget_Success {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create or edit another manifest.
        /// </summary>
        public static string Dialogs_Winget_Success_Another {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Success_Another", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the folder containing the manifest.
        /// </summary>
        public static string Dialogs_Winget_Success_OpenFolder {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Success_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads.
        /// </summary>
        public static string Dialogs_Winget_Tab_Downloads {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tab_Downloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity.
        /// </summary>
        public static string Dialogs_Winget_Tab_Identity {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tab_Identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer.
        /// </summary>
        public static string Dialogs_Winget_Tab_Installer {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tab_Installer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License + copyright.
        /// </summary>
        public static string Dialogs_Winget_Tab_License {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tab_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata.
        /// </summary>
        public static string Dialogs_Winget_Tab_Metadata {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tab_Metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        public static string Dialogs_Winget_Tags {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional strings users would use to search for the package.
        /// </summary>
        public static string Dialogs_Winget_Tags_Hint {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Tags_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create winget manifest.
        /// </summary>
        public static string Dialogs_Winget_Title {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL.
        /// </summary>
        public static string Dialogs_Winget_Url {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating with winget CLI….
        /// </summary>
        public static string Dialogs_Winget_ValidatingCli {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ValidatingCli", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Winget validation failed. Your package may not be accepted after pushing to the official repo. Press &apos;See details&apos; to to show detailed warnings..
        /// </summary>
        public static string Dialogs_Winget_ValidatingCli_Body {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ValidatingCli_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix issues.
        /// </summary>
        public static string Dialogs_Winget_ValidatingCli_Fix {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ValidatingCli_Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore this warning.
        /// </summary>
        public static string Dialogs_Winget_ValidatingCli_Ignore {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ValidatingCli_Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation errors.
        /// </summary>
        public static string Dialogs_Winget_ValidatingCli_Title {
            get {
                return ResourceManager.GetString("Dialogs_Winget_ValidatingCli_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Winget CLI validation has been passed..
        /// </summary>
        public static string Dialogs_Winget_Validation_Success {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Validation_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing YAML manifest to {0}….
        /// </summary>
        public static string Dialogs_Winget_Yaml_Saving_Format {
            get {
                return ResourceManager.GetString("Dialogs_Winget_Yaml_Saving_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to clipboard.
        /// </summary>
        public static string EventViewer_ContextMenu_CopyToClipboard {
            get {
                return ResourceManager.GetString("EventViewer_ContextMenu_CopyToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity ID.
        /// </summary>
        public static string EventViewer_Details_ActivityId {
            get {
                return ResourceManager.GetString("EventViewer_Details_ActivityId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error code:.
        /// </summary>
        public static string EventViewer_Details_ErrorCode {
            get {
                return ResourceManager.GetString("EventViewer_Details_ErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error code.
        /// </summary>
        public static string EventViewer_Details_ErrorCode1 {
            get {
                return ResourceManager.GetString("EventViewer_Details_ErrorCode1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event source.
        /// </summary>
        public static string EventViewer_Details_EventSource {
            get {
                return ResourceManager.GetString("EventViewer_Details_EventSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path:.
        /// </summary>
        public static string EventViewer_Details_FilePath {
            get {
                return ResourceManager.GetString("EventViewer_Details_FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        public static string EventViewer_Details_Message {
            get {
                return ResourceManager.GetString("EventViewer_Details_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opcode Display Name.
        /// </summary>
        public static string EventViewer_Details_OpcodeDisplayName {
            get {
                return ResourceManager.GetString("EventViewer_Details_OpcodeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package file path.
        /// </summary>
        public static string EventViewer_Details_PackageFile {
            get {
                return ResourceManager.GetString("EventViewer_Details_PackageFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string EventViewer_Details_PackageName {
            get {
                return ResourceManager.GetString("EventViewer_Details_PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string EventViewer_Details_Properties {
            get {
                return ResourceManager.GetString("EventViewer_Details_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread ID.
        /// </summary>
        public static string EventViewer_Details_ThreadId {
            get {
                return ResourceManager.GetString("EventViewer_Details_ThreadId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Troubleshooting info.
        /// </summary>
        public static string EventViewer_Details_TroubleShootingInfo {
            get {
                return ResourceManager.GetString("EventViewer_Details_TroubleShootingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User.
        /// </summary>
        public static string EventViewer_Details_User {
            get {
                return ResourceManager.GetString("EventViewer_Details_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string EventViewer_Filter_Clear {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level.
        /// </summary>
        public static string EventViewer_Filter_Log {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Critical.
        /// </summary>
        public static string EventViewer_Filter_Log_Critical {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Log_Critical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string EventViewer_Filter_Log_Error {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Log_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        public static string EventViewer_Filter_Log_Info {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Log_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verbose.
        /// </summary>
        public static string EventViewer_Filter_Log_Verbose {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Log_Verbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string EventViewer_Filter_Log_Warn {
            get {
                return ResourceManager.GetString("EventViewer_Filter_Log_Warn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order by.
        /// </summary>
        public static string EventViewer_Filter_OrderBy {
            get {
                return ResourceManager.GetString("EventViewer_Filter_OrderBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date.
        /// </summary>
        public static string EventViewer_Filter_OrderBy_Date {
            get {
                return ResourceManager.GetString("EventViewer_Filter_OrderBy_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level.
        /// </summary>
        public static string EventViewer_Filter_OrderBy_Level {
            get {
                return ResourceManager.GetString("EventViewer_Filter_OrderBy_Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string EventViewer_Filter_OrderBy_Package {
            get {
                return ResourceManager.GetString("EventViewer_Filter_OrderBy_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time span.
        /// </summary>
        public static string EventViewer_Filter_TimeSpan {
            get {
                return ResourceManager.GetString("EventViewer_Filter_TimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string EventViewer_Filter_TimeSpan_All {
            get {
                return ResourceManager.GetString("EventViewer_Filter_TimeSpan_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last 24 hours.
        /// </summary>
        public static string EventViewer_Filter_TimeSpan_Day {
            get {
                return ResourceManager.GetString("EventViewer_Filter_TimeSpan_Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last hour.
        /// </summary>
        public static string EventViewer_Filter_TimeSpan_Hour {
            get {
                return ResourceManager.GetString("EventViewer_Filter_TimeSpan_Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last 7 days.
        /// </summary>
        public static string EventViewer_Filter_TimeSpan_Week {
            get {
                return ResourceManager.GetString("EventViewer_Filter_TimeSpan_Week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string EventViewer_Refresh {
            get {
                return ResourceManager.GetString("EventViewer_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search in events….
        /// </summary>
        public static string EventViewer_Search_Prompt {
            get {
                return ResourceManager.GetString("EventViewer_Search_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing selected.
        /// </summary>
        public static string EventViewer_Sidebar_NoSelection {
            get {
                return ResourceManager.GetString("EventViewer_Sidebar_NoSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select any event log to display its properties..
        /// </summary>
        public static string EventViewer_Sidebar_NoSelection_Hint {
            get {
                return ResourceManager.GetString("EventViewer_Sidebar_NoSelection_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (all).
        /// </summary>
        public static string FilterAll {
            get {
                return ResourceManager.GetString("FilterAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last 6 months.
        /// </summary>
        public static string HumanDate_Last6Months {
            get {
                return ResourceManager.GetString("HumanDate_Last6Months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last month.
        /// </summary>
        public static string HumanDate_LastMonth {
            get {
                return ResourceManager.GetString("HumanDate_LastMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last week.
        /// </summary>
        public static string HumanDate_LastWeek {
            get {
                return ResourceManager.GetString("HumanDate_LastWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last year.
        /// </summary>
        public static string HumanDate_LastYear {
            get {
                return ResourceManager.GetString("HumanDate_LastYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one year ago.
        /// </summary>
        public static string HumanDate_Older {
            get {
                return ResourceManager.GetString("HumanDate_Older", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This month.
        /// </summary>
        public static string HumanDate_ThisMonth {
            get {
                return ResourceManager.GetString("HumanDate_ThisMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This week.
        /// </summary>
        public static string HumanDate_ThisWeek {
            get {
                return ResourceManager.GetString("HumanDate_ThisWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This year.
        /// </summary>
        public static string HumanDate_ThisYear {
            get {
                return ResourceManager.GetString("HumanDate_ThisYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Today.
        /// </summary>
        public static string HumanDate_Today {
            get {
                return ResourceManager.GetString("HumanDate_Today", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yesterday.
        /// </summary>
        public static string HumanDate_Yesterday {
            get {
                return ResourceManager.GetString("HumanDate_Yesterday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about.
        /// </summary>
        public static string Link_LearnMore_Part1 {
            get {
                return ResourceManager.GetString("Link_LearnMore_Part1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling….
        /// </summary>
        public static string Loading_Cancelling {
            get {
                return ResourceManager.GetString("Loading_Cancelling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait….
        /// </summary>
        public static string Loading_PleaseWait {
            get {
                return ResourceManager.GetString("Loading_PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop any file here to open it.
        /// </summary>
        public static string Package_DragDropToOpen {
            get {
                return ResourceManager.GetString("Package_DragDropToOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the icon to star this package.
        ///
        ///Starred packages are displayed on the top of the list, regardless of the sorting..
        /// </summary>
        public static string Package_Star_Tooltip {
            get {
                return ResourceManager.GetString("Package_Star_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package is starred and is displayed on the top of the list, regardless of the sorting.
        ///
        ///Click the icon again to remove the star..
        /// </summary>
        public static string Package_Unstar_Tooltip {
            get {
                return ResourceManager.GetString("Package_Unstar_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load details. {0}.
        /// </summary>
        public static string PackageControl_Error_Exception {
            get {
                return ResourceManager.GetString("PackageControl_Error_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessible via.
        /// </summary>
        public static string PackageExpert_AccessibleVia {
            get {
                return ResourceManager.GetString("PackageExpert_AccessibleVia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution alias.
        /// </summary>
        public static string PackageExpert_AccessibleVia_ExecAlias {
            get {
                return ResourceManager.GetString("PackageExpert_AccessibleVia_ExecAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start menu tile.
        /// </summary>
        public static string PackageExpert_AccessibleVia_StartMenu {
            get {
                return ResourceManager.GetString("PackageExpert_AccessibleVia_StartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package has no installed add-ons or modification packages..
        /// </summary>
        public static string PackageExpert_AddOns_None {
            get {
                return ResourceManager.GetString("PackageExpert_AddOns_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates.
        /// </summary>
        public static string PackageExpert_App_CheckUpdates {
            get {
                return ResourceManager.GetString("PackageExpert_App_CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in a new window.
        /// </summary>
        public static string PackageExpert_App_NewWindow {
            get {
                return ResourceManager.GetString("PackageExpert_App_NewWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string PackageExpert_App_Open {
            get {
                return ResourceManager.GetString("PackageExpert_App_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        public static string PackageExpert_App_Other {
            get {
                return ResourceManager.GetString("PackageExpert_App_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change volume….
        /// </summary>
        public static string PackageExpert_App_Other_ChangeVolume {
            get {
                return ResourceManager.GetString("PackageExpert_App_Other_ChangeVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send to….
        /// </summary>
        public static string PackageExpert_App_SendTo {
            get {
                return ResourceManager.GetString("PackageExpert_App_SendTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer editor….
        /// </summary>
        public static string PackageExpert_App_SendTo_AppInstaller {
            get {
                return ResourceManager.GetString("PackageExpert_App_SendTo_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency analyzer….
        /// </summary>
        public static string PackageExpert_App_SendTo_DependencyAnalyzer {
            get {
                return ResourceManager.GetString("PackageExpert_App_SendTo_DependencyAnalyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification package editor….
        /// </summary>
        public static string PackageExpert_App_SendTo_ModPackage {
            get {
                return ResourceManager.GetString("PackageExpert_App_SendTo_ModPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Package Container….
        /// </summary>
        public static string PackageExpert_App_SendTo_SharedPackageContainer {
            get {
                return ResourceManager.GetString("PackageExpert_App_SendTo_SharedPackageContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Winget (YAML) editor….
        /// </summary>
        public static string PackageExpert_App_SendTo_Winget {
            get {
                return ResourceManager.GetString("PackageExpert_App_SendTo_Winget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string PackageExpert_App_Start {
            get {
                return ResourceManager.GetString("PackageExpert_App_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string PackageExpert_App_Uninstall {
            get {
                return ResourceManager.GetString("PackageExpert_App_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application ID.
        /// </summary>
        public static string PackageExpert_Applications_AppId {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_AppId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line arguments.
        /// </summary>
        public static string PackageExpert_Applications_CmdLine {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_CmdLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global applications (with alias).
        /// </summary>
        public static string PackageExpert_Applications_Command {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications.
        /// </summary>
        public static string PackageExpert_Applications_Header {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host ID.
        /// </summary>
        public static string PackageExpert_Applications_HostID {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_HostID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No applications.
        /// </summary>
        public static string PackageExpert_Applications_None {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and one another application.
        /// </summary>
        public static string PackageExpert_Applications_OneExtra {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_OneExtra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other applications.
        /// </summary>
        public static string PackageExpert_Applications_Other {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy executable.
        /// </summary>
        public static string PackageExpert_Applications_ProxyExe {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_ProxyExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications in Start Menu.
        /// </summary>
        public static string PackageExpert_Applications_StartMenu {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_StartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string PackageExpert_Applications_Type {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and {1} other applications.
        /// </summary>
        public static string PackageExpert_Applications_XExtra {
            get {
                return ResourceManager.GetString("PackageExpert_Applications_XExtra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developer.
        /// </summary>
        public static string PackageExpert_AppType_Developer {
            get {
                return ResourceManager.GetString("PackageExpert_AppType_Developer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not installed.
        /// </summary>
        public static string PackageExpert_AppType_NotInstalled {
            get {
                return ResourceManager.GetString("PackageExpert_AppType_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sideloaded App.
        /// </summary>
        public static string PackageExpert_AppType_Sideloaded {
            get {
                return ResourceManager.GetString("PackageExpert_AppType_Sideloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store App.
        /// </summary>
        public static string PackageExpert_AppType_Store {
            get {
                return ResourceManager.GetString("PackageExpert_AppType_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System App.
        /// </summary>
        public static string PackageExpert_AppType_System {
            get {
                return ResourceManager.GetString("PackageExpert_AppType_System", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has been side-loaded from an .appinstaller file..
        /// </summary>
        public static string PackageExpert_AppTypeToolTip_AppInstaller {
            get {
                return ResourceManager.GetString("PackageExpert_AppTypeToolTip_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has been installed from a manifest file, using the Developer mode..
        /// </summary>
        public static string PackageExpert_AppTypeToolTip_Manifest {
            get {
                return ResourceManager.GetString("PackageExpert_AppTypeToolTip_Manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has not been installed yet..
        /// </summary>
        public static string PackageExpert_AppTypeToolTip_NotInstalled {
            get {
                return ResourceManager.GetString("PackageExpert_AppTypeToolTip_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has been pre-installed with Windows..
        /// </summary>
        public static string PackageExpert_AppTypeToolTip_PreInstalled {
            get {
                return ResourceManager.GetString("PackageExpert_AppTypeToolTip_PreInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has been side-loaded..
        /// </summary>
        public static string PackageExpert_AppTypeToolTip_SideLoading {
            get {
                return ResourceManager.GetString("PackageExpert_AppTypeToolTip_SideLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has been installed from Microsoft Store..
        /// </summary>
        public static string PackageExpert_AppTypeToolTip_Store {
            get {
                return ResourceManager.GetString("PackageExpert_AppTypeToolTip_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string PackageExpert_Architecture {
            get {
                return ResourceManager.GetString("PackageExpert_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back to package overview.
        /// </summary>
        public static string PackageExpert_BackToOverview {
            get {
                return ResourceManager.GetString("PackageExpert_BackToOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root folder.
        /// </summary>
        public static string PackageExpert_Browser_Root {
            get {
                return ResourceManager.GetString("PackageExpert_Browser_Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packaging environment.
        /// </summary>
        public static string PackageExpert_Builds_Environment {
            get {
                return ResourceManager.GetString("PackageExpert_Builds_Environment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to can elevate.
        /// </summary>
        public static string PackageExpert_Capabilities_Summary_Elevation {
            get {
                return ResourceManager.GetString("PackageExpert_Capabilities_Summary_Elevation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package requires no capabilities..
        /// </summary>
        public static string PackageExpert_Capabilities_Summary_None {
            get {
                return ResourceManager.GetString("PackageExpert_Capabilities_Summary_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to and one another capability….
        /// </summary>
        public static string PackageExpert_Capabilities_Summary_OneAnother {
            get {
                return ResourceManager.GetString("PackageExpert_Capabilities_Summary_OneAnother", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to runs with full trust.
        /// </summary>
        public static string PackageExpert_Capabilities_Summary_Trust {
            get {
                return ResourceManager.GetString("PackageExpert_Capabilities_Summary_Trust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to and {0} other capabilities….
        /// </summary>
        public static string PackageExpert_Capabilities_Summary_XOther {
            get {
                return ResourceManager.GetString("PackageExpert_Capabilities_Summary_XOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a framework app.
        /// </summary>
        public static string PackageExpert_CaptionToolTip_Framework {
            get {
                return ResourceManager.GetString("PackageExpert_CaptionToolTip_Framework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an app of an unknown type..
        /// </summary>
        public static string PackageExpert_CaptionToolTip_Unknown {
            get {
                return ResourceManager.GetString("PackageExpert_CaptionToolTip_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is Universal Windows Platform (UWP) package..
        /// </summary>
        public static string PackageExpert_CaptionToolTip_Uwp {
            get {
                return ResourceManager.GetString("PackageExpert_CaptionToolTip_Uwp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a web app..
        /// </summary>
        public static string PackageExpert_CaptionToolTip_Web {
            get {
                return ResourceManager.GetString("PackageExpert_CaptionToolTip_Web", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a Win32 packaged app..
        /// </summary>
        public static string PackageExpert_CaptionToolTip_Win32 {
            get {
                return ResourceManager.GetString("PackageExpert_CaptionToolTip_Win32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a Win32 packaged app, enhanced by Package Support Framework (PSF).
        /// </summary>
        public static string PackageExpert_CaptionToolTip_Win32_Psf {
            get {
                return ResourceManager.GetString("PackageExpert_CaptionToolTip_Win32_Psf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates.
        /// </summary>
        public static string PackageExpert_CheckForUpdatesLink {
            get {
                return ResourceManager.GetString("PackageExpert_CheckForUpdatesLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installed.
        /// </summary>
        public static string PackageExpert_Commands_Add_Success1 {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_Add_Success1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application {0} has been just installed..
        /// </summary>
        public static string PackageExpert_Commands_Add_Success2 {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_Add_Success2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new app has been just installed from {0}..
        /// </summary>
        public static string PackageExpert_Commands_Add_SuccessFile2 {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_Add_SuccessFile2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates are available..
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_NoUpdates {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_NoUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates are available for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_NoUpdates_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_NoUpdates_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An optional update is available..
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_OptionalUpdateAvailable {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_OptionalUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An optional update is available for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_OptionalUpdateAvailable_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_OptionalUpdateAvailable_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required update is available..
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_RequiredUpdateAvailable {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_RequiredUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required update is available for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_RequiredUpdateAvailable_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_RequiredUpdateAvailable_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update check result.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_UpdateCheck_Result {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_UpdateCheck_Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not check for updates..
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_UpdateCheckFailed {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_UpdateCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not check for updates for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_UpdateCheckFailed_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_UpdateCheckFailed_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update now.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_UpdateNow {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_UpdateNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package was not installed via {0} file..
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_WrongSource {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_WrongSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These package were not installed via {0} file:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_WrongSource_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_WrongSource_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not remove the package..
        /// </summary>
        public static string PackageExpert_Commands_AppRemovalFailed {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemovalFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App removed.
        /// </summary>
        public static string PackageExpert_Commands_AppRemoved1 {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemoved1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apps removed.
        /// </summary>
        public static string PackageExpert_Commands_AppRemoved1_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemoved1_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application {0} has been just removed..
        /// </summary>
        public static string PackageExpert_Commands_AppRemoved2 {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemoved2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} apps has been just removed..
        /// </summary>
        public static string PackageExpert_Commands_AppRemoved2_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemoved2_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove {0} packages? This operation is irreversible..
        /// </summary>
        public static string PackageExpert_Commands_ConfirmRemovalMultiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_ConfirmRemovalMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove {0} {1}? This operation is irreversible..
        /// </summary>
        public static string PackageExpert_Commands_ConfirmRemovalSingle {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_ConfirmRemovalSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to De-provisioning {0}….
        /// </summary>
        public static string PackageExpert_Commands_Deprovisioning {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_Deprovisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not dismount the registry..
        /// </summary>
        public static string PackageExpert_Commands_DismountRegistry_Error {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_DismountRegistry_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not remove.
        /// </summary>
        public static string PackageExpert_Commands_DoNotRemove {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_DoNotRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave the app running.
        /// </summary>
        public static string PackageExpert_Commands_LeaveRunning {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_LeaveRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not mount the registry.
        /// </summary>
        public static string PackageExpert_Commands_MountRegistry_Error {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_MountRegistry_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove for all users.
        /// </summary>
        public static string PackageExpert_Commands_RemoveAllUsers {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_RemoveAllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove for current user.
        /// </summary>
        public static string PackageExpert_Commands_RemoveCurrentUser {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_RemoveCurrentUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing package.
        /// </summary>
        public static string PackageExpert_Commands_Removing {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_Removing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start the app..
        /// </summary>
        public static string PackageExpert_Commands_StartApp_Error {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_StartApp_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop this system app.
        /// </summary>
        public static string PackageExpert_Commands_StopSystemApp {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_StopSystemApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a system app. Are you sure you want to stop it?   &lt;&lt;&lt;&lt;&lt;&gt;&gt;&gt;&gt;&gt; Stopping a system app may have unexpected side-effects..
        /// </summary>
        public static string PackageExpert_Commands_StopSystemApp_Remark {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_StopSystemApp_Remark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping a system app.
        /// </summary>
        public static string PackageExpert_Commands_StopSystemApp_Title {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_StopSystemApp_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates are available for the following packages:.
        /// </summary>
        public static string PackageExpert_Commands_UpdatesAvailable {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_UpdatesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy the path to clipboard.
        /// </summary>
        public static string PackageExpert_CopyPath {
            get {
                return ResourceManager.GetString("PackageExpert_CopyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to open Windows 10 version history in Wikipedia.
        /// </summary>
        public static string PackageExpert_Dependencies_Explanation {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DEVICE FAMILIES.
        /// </summary>
        public static string PackageExpert_Dependencies_Family_Header {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Family_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open dependencies graph….
        /// </summary>
        public static string PackageExpert_Dependencies_Link {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum required OS version.
        /// </summary>
        public static string PackageExpert_Dependencies_MinOs {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_MinOs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [MSIX Core] Minimum required OS version.
        /// </summary>
        public static string PackageExpert_Dependencies_MinOs_MsixCore {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_MinOs_MsixCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PACKAGE DEPENDENCIES.
        /// </summary>
        public static string PackageExpert_Dependencies_Package_Header {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Package_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package does not have dependencies..
        /// </summary>
        public static string PackageExpert_Dependencies_Summary_None {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Summary_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and {1} other dependencies.
        /// </summary>
        public static string PackageExpert_Dependencies_Summary_XOther {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Summary_XOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declared API compatibility level.
        /// </summary>
        public static string PackageExpert_Dependencies_TestedOn {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_TestedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [MSIX Core] Declared API compatibility level.
        /// </summary>
        public static string PackageExpert_Dependencies_TestedOn_MsixCore {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_TestedOn_MsixCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 10 version history.
        /// </summary>
        public static string PackageExpert_Dependencies_Win10Link {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Win10Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 11 version history.
        /// </summary>
        public static string PackageExpert_Dependencies_Win11Link {
            get {
                return ResourceManager.GetString("PackageExpert_Dependencies_Win11Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string PackageExpert_Dependency_Open {
            get {
                return ResourceManager.GetString("PackageExpert_Dependency_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string PackageExpert_Description {
            get {
                return ResourceManager.GetString("PackageExpert_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enforce run time package integrity checks on the entire contents of the package.
        /// </summary>
        public static string PackageExpert_Enforce_PIChecks {
            get {
                return ResourceManager.GetString("PackageExpert_Enforce_PIChecks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default settings.
        /// </summary>
        public static string PackageExpert_Enforce_PIChecks_Disabled {
            get {
                return ResourceManager.GetString("PackageExpert_Enforce_PIChecks_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Even a **HERO** cannot open this package. Please double check its content, below is something that may help:.
        /// </summary>
        public static string PackageExpert_Error {
            get {
                return ResourceManager.GetString("PackageExpert_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family name.
        /// </summary>
        public static string PackageExpert_FamilyName {
            get {
                return ResourceManager.GetString("PackageExpert_FamilyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View/edit.
        /// </summary>
        public static string PackageExpert_Files_Context_View {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Context_View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string PackageExpert_Files_Header_Name {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Header_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        public static string PackageExpert_Files_Header_Size {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Header_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to more than **{0}** and **{1}**.
        /// </summary>
        public static string PackageExpert_Files_Summary_Estimated {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_Estimated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **{0}**, together **{1}**.
        /// </summary>
        public static string PackageExpert_Files_Summary_Exact {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_Exact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and {1} other files.
        /// </summary>
        public static string PackageExpert_Files_Summary_FilesExe1 {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_FilesExe1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and more than {1} other files.
        /// </summary>
        public static string PackageExpert_Files_Summary_FilesExe1Plus {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_FilesExe1Plus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} and {2} other files.
        /// </summary>
        public static string PackageExpert_Files_Summary_FilesExe2 {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_FilesExe2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} and more than {2} other files.
        /// </summary>
        public static string PackageExpert_Files_Summary_FilesExe2Plus {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_FilesExe2Plus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files.
        /// </summary>
        public static string PackageExpert_Files_Summary_FilesGeneric {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_FilesGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}+ files.
        /// </summary>
        public static string PackageExpert_Files_Summary_FilesGenericPlus {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_FilesGenericPlus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package contains no files..
        /// </summary>
        public static string PackageExpert_Files_Summary_None {
            get {
                return ResourceManager.GetString("PackageExpert_Files_Summary_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full package name.
        /// </summary>
        public static string PackageExpert_FullPackageName {
            get {
                return ResourceManager.GetString("PackageExpert_FullPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has one add-on.
        /// </summary>
        public static string PackageExpert_Installation_AddOn1 {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_AddOn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has {0} add-ons.
        /// </summary>
        public static string PackageExpert_Installation_AddOnX {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_AddOnX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to from .appinstaller file.
        /// </summary>
        public static string PackageExpert_Installation_AppInstaller {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change install directory….
        /// </summary>
        public static string PackageExpert_Installation_ChangeDir {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_ChangeDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSTALLED FOR.
        /// </summary>
        public static string PackageExpert_Installation_For {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_For", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed.
        /// </summary>
        public static string PackageExpert_Installation_Installed {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed on.
        /// </summary>
        public static string PackageExpert_Installation_InstalledOn {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstalledOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation type.
        /// </summary>
        public static string PackageExpert_Installation_InstallType {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstallType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in development mode.
        /// </summary>
        public static string PackageExpert_Installation_InstallType_Dev {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstallType_Dev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file (developer mode).
        /// </summary>
        public static string PackageExpert_Installation_InstallType_Manifest {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstallType_Manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to via side-loading.
        /// </summary>
        public static string PackageExpert_Installation_InstallType_SideLoading {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstallType_SideLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to as system application.
        /// </summary>
        public static string PackageExpert_Installation_InstallType_System {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstallType_System", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string PackageExpert_Installation_InstallType_Unknown {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_InstallType_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed manifest path location.
        /// </summary>
        public static string PackageExpert_Installation_Manifest {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_Manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No add-ons / modification packages are installed for this product..
        /// </summary>
        public static string PackageExpert_Installation_NoAddons {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_NoAddons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not installed.
        /// </summary>
        public static string PackageExpert_Installation_NotInstalled {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string PackageExpert_Installation_Status {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed on **{0}**.
        /// </summary>
        public static string PackageExpert_Installation_StatusDate {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_StatusDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed.
        /// </summary>
        public static string PackageExpert_Installation_StatusDateUnknown {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_StatusDateUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to from Microsoft Store.
        /// </summary>
        public static string PackageExpert_Installation_Store {
            get {
                return ResourceManager.GetString("PackageExpert_Installation_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation folder.
        /// </summary>
        public static string PackageExpert_InstallationFolder {
            get {
                return ResourceManager.GetString("PackageExpert_InstallationFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to view who installed this package you must be an administrator..
        /// </summary>
        public static string PackageExpert_Installations_UacPrompt {
            get {
                return ResourceManager.GetString("PackageExpert_Installations_UacPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press here to query the packages as local administrator.
        /// </summary>
        public static string PackageExpert_Installations_UacPrompt_Caption {
            get {
                return ResourceManager.GetString("PackageExpert_Installations_UacPrompt_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App installer file with update function.
        /// </summary>
        public static string PackageExpert_InstalledFrom_AppInstaller {
            get {
                return ResourceManager.GetString("PackageExpert_InstalledFrom_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote .appinstaller location.
        /// </summary>
        public static string PackageExpert_InstalledFrom_AppInstaller_RemoteUrl {
            get {
                return ResourceManager.GetString("PackageExpert_InstalledFrom_AppInstaller_RemoteUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed from.
        /// </summary>
        public static string PackageExpert_InstalledFromHeader {
            get {
                return ResourceManager.GetString("PackageExpert_InstalledFromHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting certificate details….
        /// </summary>
        public static string PackageExpert_LoadingCertificate {
            get {
                return ResourceManager.GetString("PackageExpert_LoadingCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX modification packages.
        /// </summary>
        public static string PackageExpert_ModPack_Topic {
            get {
                return ResourceManager.GetString("PackageExpert_ModPack_Topic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [more info].
        /// </summary>
        public static string PackageExpert_MoreInfoLink {
            get {
                return ResourceManager.GetString("PackageExpert_MoreInfoLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Store.
        /// </summary>
        public static string PackageExpert_MsStore {
            get {
                return ResourceManager.GetString("PackageExpert_MsStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open package name calculator….
        /// </summary>
        public static string PackageExpert_NameCalculator_OpenButton {
            get {
                return ResourceManager.GetString("PackageExpert_NameCalculator_OpenButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package architecture.
        /// </summary>
        public static string PackageExpert_PackageArchitecture {
            get {
                return ResourceManager.GetString("PackageExpert_PackageArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package content.
        /// </summary>
        public static string PackageExpert_PackageContent {
            get {
                return ResourceManager.GetString("PackageExpert_PackageContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Integrity Enforcement.
        /// </summary>
        public static string PackageExpert_PackageIntegrityEnforcement {
            get {
                return ResourceManager.GetString("PackageExpert_PackageIntegrityEnforcement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package manifest.
        /// </summary>
        public static string PackageExpert_PackageManifest {
            get {
                return ResourceManager.GetString("PackageExpert_PackageManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authored with {0} {1}.
        /// </summary>
        public static string PackageExpert_Packaging_Summary {
            get {
                return ResourceManager.GetString("PackageExpert_Packaging_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Physical user data directory.
        /// </summary>
        public static string PackageExpert_PhysicalUserDir {
            get {
                return ResourceManager.GetString("PackageExpert_PhysicalUserDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product page.
        /// </summary>
        public static string PackageExpert_ProductPage {
            get {
                return ResourceManager.GetString("PackageExpert_ProductPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Support Framework.
        /// </summary>
        public static string PackageExpert_Psf {
            get {
                return ResourceManager.GetString("PackageExpert_Psf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line arguments.
        /// </summary>
        public static string PackageExpert_Psf_CmdArgs {
            get {
                return ResourceManager.GetString("PackageExpert_Psf_CmdArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inject custom fix-up with configuration.
        /// </summary>
        public static string PackageExpert_PSF_CustomInject {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_CustomInject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry point.
        /// </summary>
        public static string PackageExpert_Psf_EntryPoint {
            get {
                return ResourceManager.GetString("PackageExpert_Psf_EntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to launched by.
        /// </summary>
        public static string PackageExpert_Psf_LaunchedBy {
            get {
                return ResourceManager.GetString("PackageExpert_Psf_LaunchedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package does not contain any fix-ups.
        /// </summary>
        public static string PackageExpert_Psf_None {
            get {
                return ResourceManager.GetString("PackageExpert_Psf_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom PSF definition.
        /// </summary>
        public static string PackageExpert_PSF_Summary_Custom {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_Summary_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to custom fix-ups.
        /// </summary>
        public static string PackageExpert_PSF_SummaryBuilder_Custom {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_SummaryBuilder_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Electron fix-up.
        /// </summary>
        public static string PackageExpert_PSF_SummaryBuilder_Electron {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_SummaryBuilder_Electron", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines.
        /// </summary>
        public static string PackageExpert_PSF_SummaryBuilder_Header {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_SummaryBuilder_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file redirections.
        /// </summary>
        public static string PackageExpert_PSF_SummaryBuilder_Redirections {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_SummaryBuilder_Redirections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to scripts.
        /// </summary>
        public static string PackageExpert_PSF_SummaryBuilder_Scripts {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_SummaryBuilder_Scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tracing.
        /// </summary>
        public static string PackageExpert_PSF_SummaryBuilder_Tracing {
            get {
                return ResourceManager.GetString("PackageExpert_PSF_SummaryBuilder_Tracing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working directory.
        /// </summary>
        public static string PackageExpert_Psf_WkDir {
            get {
                return ResourceManager.GetString("PackageExpert_Psf_WkDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PSF configuration.
        /// </summary>
        public static string PackageExpert_PsfConfig {
            get {
                return ResourceManager.GetString("PackageExpert_PsfConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After closing **{0}**.
        /// </summary>
        public static string PackageExpert_PsScripts_AfterFinish {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_AfterFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments.
        /// </summary>
        public static string PackageExpert_PsScripts_Args {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_Args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before starting **{0}**.
        /// </summary>
        public static string PackageExpert_PsScripts_BeforeStart {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_BeforeStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start script {0}.
        /// </summary>
        public static string PackageExpert_PsScripts_BeforeStart_Text {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_BeforeStart_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to POWERSHELL SCRIPTS.
        /// </summary>
        public static string PackageExpert_PsScripts_Header {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run in a virtual environment.
        /// </summary>
        public static string PackageExpert_PsScripts_Inside {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_Inside", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show no window.
        /// </summary>
        public static string PackageExpert_PsScripts_NoWindow {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_NoWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run outside of the virtual environment.
        /// </summary>
        public static string PackageExpert_PsScripts_Outside {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_Outside", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run always.
        /// </summary>
        public static string PackageExpert_PsScripts_RunAlways {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_RunAlways", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run asynchronously.
        /// </summary>
        public static string PackageExpert_PsScripts_RunAsync {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_RunAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run only once.
        /// </summary>
        public static string PackageExpert_PsScripts_RunOnce {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_RunOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show window.
        /// </summary>
        public static string PackageExpert_PsScripts_ShowWindow {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_ShowWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait for finish.
        /// </summary>
        public static string PackageExpert_PsScripts_Wait {
            get {
                return ResourceManager.GetString("PackageExpert_PsScripts_Wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string PackageExpert_Publisher {
            get {
                return ResourceManager.GetString("PackageExpert_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string PackageExpert_Publisher1 {
            get {
                return ResourceManager.GetString("PackageExpert_Publisher1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading….
        /// </summary>
        public static string PackageExpert_Reading {
            get {
                return ResourceManager.GetString("PackageExpert_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data.
        /// </summary>
        public static string PackageExpert_Registry_Header_Data {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_Header_Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string PackageExpert_Registry_Header_Name {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_Header_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string PackageExpert_Registry_Header_Type {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_Header_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading registry keys….
        /// </summary>
        public static string PackageExpert_Registry_Loading {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package does not contain Registry entries..
        /// </summary>
        public static string PackageExpert_Registry_None {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-machine and per-user registry keys..
        /// </summary>
        public static string PackageExpert_Registry_SummaryBuilder_General {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_SummaryBuilder_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HKCU\{0} and other per-user registry keys..
        /// </summary>
        public static string PackageExpert_Registry_SummaryBuilder_HKCU_Other {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_SummaryBuilder_HKCU_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HKLM\{0} and other per-machine registry keys..
        /// </summary>
        public static string PackageExpert_Registry_SummaryBuilder_HKLM_Other {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_SummaryBuilder_HKLM_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-machine registry keys..
        /// </summary>
        public static string PackageExpert_Registry_SummaryBuilder_Machine {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_SummaryBuilder_Machine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Windows registry..
        /// </summary>
        public static string PackageExpert_Registry_SummaryBuilder_Unknown {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_SummaryBuilder_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-user registry keys..
        /// </summary>
        public static string PackageExpert_Registry_SummaryBuilder_User {
            get {
                return ResourceManager.GetString("PackageExpert_Registry_SummaryBuilder_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute in package context.
        /// </summary>
        public static string PackageExpert_RunInPkgContext {
            get {
                return ResourceManager.GetString("PackageExpert_RunInPkgContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature:.
        /// </summary>
        public static string PackageExpert_Signature_Summary {
            get {
                return ResourceManager.GetString("PackageExpert_Signature_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature: **none**.
        /// </summary>
        public static string PackageExpert_Signature_Summary_NotSigned {
            get {
                return ResourceManager.GetString("PackageExpert_Signature_Summary_NotSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package is not signed.
        /// </summary>
        public static string PackageExpert_Signature_Summary_NotSigned2 {
            get {
                return ResourceManager.GetString("PackageExpert_Signature_Summary_NotSigned2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature: publisher is **not trusted**.
        /// </summary>
        public static string PackageExpert_Signature_Summary_Signed {
            get {
                return ResourceManager.GetString("PackageExpert_Signature_Summary_Signed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature: **Signed** and **trusted**.
        /// </summary>
        public static string PackageExpert_Signature_Summary_SignedTrusted {
            get {
                return ResourceManager.GetString("PackageExpert_Signature_Summary_SignedTrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed by.
        /// </summary>
        public static string PackageExpert_SignedBy {
            get {
                return ResourceManager.GetString("PackageExpert_SignedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust this publisher.
        /// </summary>
        public static string PackageExpert_SignedBy_TrustButton {
            get {
                return ResourceManager.GetString("PackageExpert_SignedBy_TrustButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (trusted publisher).
        /// </summary>
        public static string PackageExpert_SignedBy_Trusted {
            get {
                return ResourceManager.GetString("PackageExpert_SignedBy_Trusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (untrusted publisher).
        /// </summary>
        public static string PackageExpert_SignedBy_Untrusted {
            get {
                return ResourceManager.GetString("PackageExpert_SignedBy_Untrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications: {0}.
        /// </summary>
        public static string PackageExpert_Summary_Applications {
            get {
                return ResourceManager.GetString("PackageExpert_Summary_Applications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capabilities: {0}.
        /// </summary>
        public static string PackageExpert_Summary_Capabilities {
            get {
                return ResourceManager.GetString("PackageExpert_Summary_Capabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package and OS requirements: {0}.
        /// </summary>
        public static string PackageExpert_Summary_Dependencies {
            get {
                return ResourceManager.GetString("PackageExpert_Summary_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency analyzer….
        /// </summary>
        public static string PackageExpert_Summary_Dependencies_OpenGraph {
            get {
                return ResourceManager.GetString("PackageExpert_Summary_Dependencies_OpenGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_Custom {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peripherals and internal devices.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_Devices {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_Devices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General-use capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_General {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_MoreLink {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_MoreLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_None_Clickable2 {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_None_Clickable2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package does not define any.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_None_NotClickable1 {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_None_NotClickable1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restricted capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_Restricted {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_Restricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to supported MSIX capabilities.
        /// </summary>
        public static string PackageExpert_Tab_Capabilities_Supported_MoreLink {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Capabilities_Supported_MoreLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string PackageExpert_Tab_Overview {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Overview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string PackageExpert_Tab_Properties {
            get {
                return ResourceManager.GetString("PackageExpert_Tab_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-ons and modification packages.
        /// </summary>
        public static string PackageExpert_Tabs_AddOns {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_AddOns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications.
        /// </summary>
        public static string PackageExpert_Tabs_Applications {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Applications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        public static string PackageExpert_Tabs_Content {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies.
        /// </summary>
        public static string PackageExpert_Tabs_Dependencies {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        public static string PackageExpert_Tabs_Files {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string PackageExpert_Tabs_General {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation.
        /// </summary>
        public static string PackageExpert_Tabs_Installation {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Installation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry.
        /// </summary>
        public static string PackageExpert_Tabs_Registry {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users.
        /// </summary>
        public static string PackageExpert_Tabs_Users {
            get {
                return ResourceManager.GetString("PackageExpert_Tabs_Users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target.
        /// </summary>
        public static string PackageExpert_Target {
            get {
                return ResourceManager.GetString("PackageExpert_Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to add this publisher to the list of trusted publishers (machine-wide)?.
        /// </summary>
        public static string PackageExpert_Trust_Prompt {
            get {
                return ResourceManager.GetString("PackageExpert_Trust_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string PackageExpert_Version {
            get {
                return ResourceManager.GetString("PackageExpert_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtualization for the file system is disabled for this application..
        /// </summary>
        public static string PackageExpert_Virtualization_File_Disabled {
            get {
                return ResourceManager.GetString("PackageExpert_Virtualization_File_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about file system write virtualization.
        /// </summary>
        public static string PackageExpert_Virtualization_Files_LearnMore {
            get {
                return ResourceManager.GetString("PackageExpert_Virtualization_Files_LearnMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtualization for the registry is disabled for this application..
        /// </summary>
        public static string PackageExpert_Virtualization_Registry_Disabled {
            get {
                return ResourceManager.GetString("PackageExpert_Virtualization_Registry_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about registry write virtualization.
        /// </summary>
        public static string PackageExpert_Virtualization_Registry_LearnMore {
            get {
                return ResourceManager.GetString("PackageExpert_Virtualization_Registry_LearnMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package publisher.
        /// </summary>
        public static string PackagePublisher {
            get {
                return ResourceManager.GetString("PackagePublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Packages_Actions_Install {
            get {
                return ResourceManager.GetString("Packages_Actions_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From file (all users - provisioning)….
        /// </summary>
        public static string Packages_Actions_Install_AllUsers {
            get {
                return ResourceManager.GetString("Packages_Actions_Install_AllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From file (current user)….
        /// </summary>
        public static string Packages_Actions_Install_CurrentUser {
            get {
                return ResourceManager.GetString("Packages_Actions_Install_CurrentUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string Packages_Actions_Refresh {
            get {
                return ResourceManager.GetString("Packages_Actions_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View.
        /// </summary>
        public static string Packages_Actions_ViewSettings {
            get {
                return ResourceManager.GetString("Packages_Actions_ViewSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating….
        /// </summary>
        public static string Packages_Calculating {
            get {
                return ResourceManager.GetString("Packages_Calculating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity.
        /// </summary>
        public static string Packages_Filter_Activity {
            get {
                return ResourceManager.GetString("Packages_Filter_Activity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running now.
        /// </summary>
        public static string Packages_Filter_Activity_RunningNow {
            get {
                return ResourceManager.GetString("Packages_Filter_Activity_RunningNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-updates.
        /// </summary>
        public static string Packages_Filter_AppInstaller {
            get {
                return ResourceManager.GetString("Packages_Filter_AppInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offers app installer auto-update.
        /// </summary>
        public static string Packages_Filter_AppInstaller_Defined {
            get {
                return ResourceManager.GetString("Packages_Filter_AppInstaller_Defined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application type.
        /// </summary>
        public static string Packages_Filter_AppType {
            get {
                return ResourceManager.GetString("Packages_Filter_AppType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-on.
        /// </summary>
        public static string Packages_Filter_AppType_AddOn {
            get {
                return ResourceManager.GetString("Packages_Filter_AppType_AddOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main applicaiton.
        /// </summary>
        public static string Packages_Filter_AppType_MainApp {
            get {
                return ResourceManager.GetString("Packages_Filter_AppType_MainApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string Packages_Filter_Architecture {
            get {
                return ResourceManager.GetString("Packages_Filter_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32-bit.
        /// </summary>
        public static string Packages_Filter_Architecture_32Bit {
            get {
                return ResourceManager.GetString("Packages_Filter_Architecture_32Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 64-bit.
        /// </summary>
        public static string Packages_Filter_Architecture_64Bit {
            get {
                return ResourceManager.GetString("Packages_Filter_Architecture_64Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM.
        /// </summary>
        public static string Packages_Filter_Architecture_ARM {
            get {
                return ResourceManager.GetString("Packages_Filter_Architecture_ARM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM64.
        /// </summary>
        public static string Packages_Filter_Architecture_ARM64 {
            get {
                return ResourceManager.GetString("Packages_Filter_Architecture_ARM64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neutral.
        /// </summary>
        public static string Packages_Filter_Architecture_Neutral {
            get {
                return ResourceManager.GetString("Packages_Filter_Architecture_Neutral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category.
        /// </summary>
        public static string Packages_Filter_Category {
            get {
                return ResourceManager.GetString("Packages_Filter_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Side-loaded.
        /// </summary>
        public static string Packages_Filter_Category_Sideloaded {
            get {
                return ResourceManager.GetString("Packages_Filter_Category_Sideloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Store.
        /// </summary>
        public static string Packages_Filter_Category_Store {
            get {
                return ResourceManager.GetString("Packages_Filter_Category_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System app.
        /// </summary>
        public static string Packages_Filter_Category_SystemApp {
            get {
                return ResourceManager.GetString("Packages_Filter_Category_SystemApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group by.
        /// </summary>
        public static string Packages_Filter_GroupBy {
            get {
                return ResourceManager.GetString("Packages_Filter_GroupBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string Packages_Filter_GroupBy_Architecture {
            get {
                return ResourceManager.GetString("Packages_Filter_GroupBy_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category.
        /// </summary>
        public static string Packages_Filter_GroupBy_Category {
            get {
                return ResourceManager.GetString("Packages_Filter_GroupBy_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install date.
        /// </summary>
        public static string Packages_Filter_GroupBy_InstallDate {
            get {
                return ResourceManager.GetString("Packages_Filter_GroupBy_InstallDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string Packages_Filter_GroupBy_None {
            get {
                return ResourceManager.GetString("Packages_Filter_GroupBy_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string Packages_Filter_GroupBy_Publisher {
            get {
                return ResourceManager.GetString("Packages_Filter_GroupBy_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order by.
        /// </summary>
        public static string Packages_Filter_OrderBy {
            get {
                return ResourceManager.GetString("Packages_Filter_OrderBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string Packages_Filter_OrderBy_Architecture {
            get {
                return ResourceManager.GetString("Packages_Filter_OrderBy_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install date.
        /// </summary>
        public static string Packages_Filter_OrderBy_InstallDate {
            get {
                return ResourceManager.GetString("Packages_Filter_OrderBy_InstallDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Packages_Filter_OrderBy_Name {
            get {
                return ResourceManager.GetString("Packages_Filter_OrderBy_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string Packages_Filter_OrderBy_Publisher {
            get {
                return ResourceManager.GetString("Packages_Filter_OrderBy_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        public static string Packages_Filter_Source {
            get {
                return ResourceManager.GetString("Packages_Filter_Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed for all users.
        /// </summary>
        public static string Packages_Filter_Source_AllUser {
            get {
                return ResourceManager.GetString("Packages_Filter_Source_AllUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed for the current user.
        /// </summary>
        public static string Packages_Filter_Source_User {
            get {
                return ResourceManager.GetString("Packages_Filter_Source_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This app is currently running.
        /// </summary>
        public static string Packages_List_AppRunning {
            get {
                return ResourceManager.GetString("Packages_List_AppRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze dependencies.
        /// </summary>
        public static string Packages_List_ContextMenu_AnalyzeDependencies {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_AnalyzeDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change volume….
        /// </summary>
        public static string Packages_List_ContextMenu_ChangeVolume {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_ChangeVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates.
        /// </summary>
        public static string Packages_List_ContextMenu_CheckUpdates {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy….
        /// </summary>
        public static string Packages_List_ContextMenu_Copy {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display name.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_DisplayName {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family name.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_FamilyName {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_FamilyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full name.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_FullName {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_FullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install path.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_InstallPath {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_InstallPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_Name {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_Publisher {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher (display name).
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_PublisherDisplayName {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_PublisherDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Packages_List_ContextMenu_Copy_Version {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Copy_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open….
        /// </summary>
        public static string Packages_List_ContextMenu_Open {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config.json.
        /// </summary>
        public static string Packages_List_ContextMenu_Open_ConfigJson {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Open_ConfigJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install folder.
        /// </summary>
        public static string Packages_List_ContextMenu_Open_InstallFolder {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Open_InstallFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file.
        /// </summary>
        public static string Packages_List_ContextMenu_Open_ManifestFile {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Open_ManifestFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User folder.
        /// </summary>
        public static string Packages_List_ContextMenu_Open_UserFolder {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_Open_UserFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove for….
        /// </summary>
        public static string Packages_List_ContextMenu_RemoveFor {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_RemoveFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All users.
        /// </summary>
        public static string Packages_List_ContextMenu_RemoveFor_AllUsers {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_RemoveFor_AllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current user.
        /// </summary>
        public static string Packages_List_ContextMenu_RemoveFor_CurrentUser {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_RemoveFor_CurrentUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run command in context….
        /// </summary>
        public static string Packages_List_ContextMenu_RunCommand {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_RunCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start app.
        /// </summary>
        public static string Packages_List_ContextMenu_StartApp {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_StartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop app.
        /// </summary>
        public static string Packages_List_ContextMenu_StopApp {
            get {
                return ResourceManager.GetString("Packages_List_ContextMenu_StopApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More commands….
        /// </summary>
        public static string Packages_MoreCommands {
            get {
                return ResourceManager.GetString("Packages_MoreCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DIRECTORY.
        /// </summary>
        public static string Packages_Search_Badge_Directory {
            get {
                return ResourceManager.GetString("Packages_Search_Badge_Directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MACHINE.
        /// </summary>
        public static string Packages_Search_Badge_Machine {
            get {
                return ResourceManager.GetString("Packages_Search_Badge_Machine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to change between showing of packages installed per-user and per-machine.
        /// </summary>
        public static string Packages_Search_Badge_Tooltip {
            get {
                return ResourceManager.GetString("Packages_Search_Badge_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USER.
        /// </summary>
        public static string Packages_Search_Badge_User {
            get {
                return ResourceManager.GetString("Packages_Search_Badge_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search applications….
        /// </summary>
        public static string Packages_Search_TextBox_Prompt {
            get {
                return ResourceManager.GetString("Packages_Search_TextBox_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple items selected.
        /// </summary>
        public static string Packages_Sidebar_MultipleItems {
            get {
                return ResourceManager.GetString("Packages_Sidebar_MultipleItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a single package to display its properties..
        /// </summary>
        public static string Packages_Sidebar_MultipleItems_Hint {
            get {
                return ResourceManager.GetString("Packages_Sidebar_MultipleItems_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing selected.
        /// </summary>
        public static string Packages_Sidebar_NoSelection {
            get {
                return ResourceManager.GetString("Packages_Sidebar_NoSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select any package to display its properties..
        /// </summary>
        public static string Packages_Sidebar_NoSelection_Hint {
            get {
                return ResourceManager.GetString("Packages_Sidebar_NoSelection_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Side-loaded (Developer).
        /// </summary>
        public static string Packages_Type_Developer {
            get {
                return ResourceManager.GetString("Packages_Type_Developer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Side-loaded (Enterprise).
        /// </summary>
        public static string Packages_Type_Enterprise {
            get {
                return ResourceManager.GetString("Packages_Type_Enterprise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store app.
        /// </summary>
        public static string Packages_Type_Store {
            get {
                return ResourceManager.GetString("Packages_Type_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System app.
        /// </summary>
        public static string Packages_Type_System {
            get {
                return ResourceManager.GetString("Packages_Type_System", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string Packages_Type_Unknown {
            get {
                return ResourceManager.GetString("Packages_Type_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Side-loaded (unsigned).
        /// </summary>
        public static string Packages_Type_Unsigned {
            get {
                return ResourceManager.GetString("Packages_Type_Unsigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string PackageSelector_Architecture {
            get {
                return ResourceManager.GetString("PackageSelector_Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32-bit.
        /// </summary>
        public static string PackageSelector_Architecture_32 {
            get {
                return ResourceManager.GetString("PackageSelector_Architecture_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 64-bit.
        /// </summary>
        public static string PackageSelector_Architecture_64 {
            get {
                return ResourceManager.GetString("PackageSelector_Architecture_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM.
        /// </summary>
        public static string PackageSelector_Architecture_Arm {
            get {
                return ResourceManager.GetString("PackageSelector_Architecture_Arm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neutral.
        /// </summary>
        public static string PackageSelector_Architecture_Neutral {
            get {
                return ResourceManager.GetString("PackageSelector_Architecture_Neutral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle name.
        /// </summary>
        public static string PackageSelector_BundleName {
            get {
                return ResourceManager.GetString("PackageSelector_BundleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a bundle.
        /// </summary>
        public static string PackageSelector_Caption_LoadFromBundle {
            get {
                return ResourceManager.GetString("PackageSelector_Caption_LoadFromBundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a manifest.
        /// </summary>
        public static string PackageSelector_Caption_LoadFromManifest {
            get {
                return ResourceManager.GetString("PackageSelector_Caption_LoadFromManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a package.
        /// </summary>
        public static string PackageSelector_Caption_LoadFromPkg {
            get {
                return ResourceManager.GetString("PackageSelector_Caption_LoadFromPkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to or.
        /// </summary>
        public static string PackageSelector_Caption_Separator {
            get {
                return ResourceManager.GetString("PackageSelector_Caption_Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load from.
        /// </summary>
        public static string PackageSelector_Caption_Start {
            get {
                return ResourceManager.GetString("PackageSelector_Caption_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displayed bundle name.
        /// </summary>
        public static string PackageSelector_DisplayBundleName {
            get {
                return ResourceManager.GetString("PackageSelector_DisplayBundleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displayed package name.
        /// </summary>
        public static string PackageSelector_DisplayName {
            get {
                return ResourceManager.GetString("PackageSelector_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displayed publisher name.
        /// </summary>
        public static string PackageSelector_DisplayPublisher {
            get {
                return ResourceManager.GetString("PackageSelector_DisplayPublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read value from MSIX manifest &apos;{0}&apos;..
        /// </summary>
        public static string PackageSelector_Error_Manifest_Format {
            get {
                return ResourceManager.GetString("PackageSelector_Error_Manifest_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string PackageSelector_Name {
            get {
                return ResourceManager.GetString("PackageSelector_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package name.
        /// </summary>
        public static string PackageSelector_PackageName {
            get {
                return ResourceManager.GetString("PackageSelector_PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package path.
        /// </summary>
        public static string PackageSelector_PackagePath {
            get {
                return ResourceManager.GetString("PackageSelector_PackagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package type.
        /// </summary>
        public static string PackageSelector_PackageType {
            get {
                return ResourceManager.GetString("PackageSelector_PackageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle (.appxbundle/.msixbundle).
        /// </summary>
        public static string PackageSelector_PackageType_Bundle {
            get {
                return ResourceManager.GetString("PackageSelector_PackageType_Bundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package (.msix/.appx).
        /// </summary>
        public static string PackageSelector_PackageType_Package {
            get {
                return ResourceManager.GetString("PackageSelector_PackageType_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher.
        /// </summary>
        public static string PackageSelector_Publisher {
            get {
                return ResourceManager.GetString("PackageSelector_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher display name.
        /// </summary>
        public static string PackageSelector_PublisherDisplayName {
            get {
                return ResourceManager.GetString("PackageSelector_PublisherDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher name.
        /// </summary>
        public static string PackageSelector_PublisherName {
            get {
                return ResourceManager.GetString("PackageSelector_PublisherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string PackageSelector_Version {
            get {
                return ResourceManager.GetString("PackageSelector_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packaging information.
        /// </summary>
        public static string PackagingInformation {
            get {
                return ResourceManager.GetString("PackagingInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inject a fixup with **a custom configuration**.
        /// </summary>
        public static string Psf_CustomFixup {
            get {
                return ResourceManager.GetString("Psf_CustomFixup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable launching this app in an application container.
        /// </summary>
        public static string Psf_Electron_Enable {
            get {
                return ResourceManager.GetString("Psf_Electron_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ELECTRON.
        /// </summary>
        public static string Psf_Header_Electron {
            get {
                return ResourceManager.GetString("Psf_Header_Electron", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REDIRECTIONS.
        /// </summary>
        public static string Psf_Header_Redirections {
            get {
                return ResourceManager.GetString("Psf_Header_Redirections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRACING.
        /// </summary>
        public static string Psf_Header_Tracing {
            get {
                return ResourceManager.GetString("Psf_Header_Tracing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not configured for any process.
        /// </summary>
        public static string Psf_NotConfiguredForAnyProcess {
            get {
                return ResourceManager.GetString("Psf_NotConfiguredForAnyProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always.
        /// </summary>
        public static string Psf_Process_Any {
            get {
                return ResourceManager.GetString("Psf_Process_Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If process name contains **{0}**.
        /// </summary>
        public static string Psf_Process_Contains {
            get {
                return ResourceManager.GetString("Psf_Process_Contains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If process name ends with **{0}**.
        /// </summary>
        public static string Psf_Process_EndsWith {
            get {
                return ResourceManager.GetString("Psf_Process_EndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If process name matches **{0}**.
        /// </summary>
        public static string Psf_Process_Pattern {
            get {
                return ResourceManager.GetString("Psf_Process_Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If process name starts with **{0}**.
        /// </summary>
        public static string Psf_Process_StartsWith {
            get {
                return ResourceManager.GetString("Psf_Process_StartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect to **{0}**  .
        /// </summary>
        public static string Psf_Redirect {
            get {
                return ResourceManager.GetString("Psf_Redirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect to **Local application data** (default).
        /// </summary>
        public static string Psf_Redirect_Default {
            get {
                return ResourceManager.GetString("Psf_Redirect_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect to read-only **Local application data**.
        /// </summary>
        public static string Psf_Redirect_Default_ReadOnly {
            get {
                return ResourceManager.GetString("Psf_Redirect_Default_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect to read-only **{0}**.
        /// </summary>
        public static string Psf_Redirect_ReadOnly {
            get {
                return ResourceManager.GetString("Psf_Redirect_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Except of:.
        /// </summary>
        public static string Psf_Redirection_ExceptOf {
            get {
                return ResourceManager.GetString("Psf_Redirection_ExceptOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In directory **{0}**.
        /// </summary>
        public static string Psf_Redirection_ForDir {
            get {
                return ResourceManager.GetString("Psf_Redirection_ForDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirected files.
        /// </summary>
        public static string Psf_Redirection_Include {
            get {
                return ResourceManager.GetString("Psf_Redirection_Include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local AppData (default).
        /// </summary>
        public static string Psf_Redirection_LocalAppData {
            get {
                return ResourceManager.GetString("Psf_Redirection_LocalAppData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package directory.
        /// </summary>
        public static string Psf_Redirection_PackageDir {
            get {
                return ResourceManager.GetString("Psf_Redirection_PackageDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (read-only).
        /// </summary>
        public static string Psf_Redirection_ReadOnly {
            get {
                return ResourceManager.GetString("Psf_Redirection_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root drive.
        /// </summary>
        public static string Psf_Redirection_RootDrive {
            get {
                return ResourceManager.GetString("Psf_Redirection_RootDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string Psf_Regex_AllFiles {
            get {
                return ResourceManager.GetString("Psf_Regex_AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to any.
        /// </summary>
        public static string Psf_Regex_Any {
            get {
                return ResourceManager.GetString("Psf_Regex_Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File **{0}**.
        /// </summary>
        public static string Psf_Regex_File {
            get {
                return ResourceManager.GetString("Psf_Regex_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files that end with **{0}**.
        /// </summary>
        public static string Psf_Regex_FilesEndingWith {
            get {
                return ResourceManager.GetString("Psf_Regex_FilesEndingWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files that match pattern **{0}**.
        /// </summary>
        public static string Psf_Regex_FilesMatching {
            get {
                return ResourceManager.GetString("Psf_Regex_FilesMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files that start with **{0}**.
        /// </summary>
        public static string Psf_Regex_FilesStartingWith {
            get {
                return ResourceManager.GetString("Psf_Regex_FilesStartingWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files with extension **{0}**.
        /// </summary>
        public static string Psf_Regex_FileWithExtension {
            get {
                return ResourceManager.GetString("Psf_Regex_FileWithExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to all failures.
        /// </summary>
        public static string Psf_Trace_AllFailures {
            get {
                return ResourceManager.GetString("Psf_Trace_AllFailures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to always.
        /// </summary>
        public static string Psf_Trace_Always {
            get {
                return ResourceManager.GetString("Psf_Trace_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in console.
        /// </summary>
        public static string Psf_Trace_Console {
            get {
                return ResourceManager.GetString("Psf_Trace_Console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to by default.
        /// </summary>
        public static string Psf_Trace_Default {
            get {
                return ResourceManager.GetString("Psf_Trace_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write trace events **{0}** breaking on: **{1}**.
        /// </summary>
        public static string Psf_Trace_EnableMethod {
            get {
                return ResourceManager.GetString("Psf_Trace_EnableMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in event log.
        /// </summary>
        public static string Psf_Trace_EventLog {
            get {
                return ResourceManager.GetString("Psf_Trace_EventLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ignore.
        /// </summary>
        public static string Psf_Trace_Ignore {
            get {
                return ResourceManager.GetString("Psf_Trace_Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ignore success.
        /// </summary>
        public static string Psf_Trace_IgnoreSuccess {
            get {
                return ResourceManager.GetString("Psf_Trace_IgnoreSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default: **{0}**.
        /// </summary>
        public static string Psf_Trace_Level_Default {
            get {
                return ResourceManager.GetString("Psf_Trace_Level_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DLL: **{0}**.
        /// </summary>
        public static string Psf_Trace_Level_Dll {
            get {
                return ResourceManager.GetString("Psf_Trace_Level_Dll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system: **{0}**.
        /// </summary>
        public static string Psf_Trace_Level_FileSystem {
            get {
                return ResourceManager.GetString("Psf_Trace_Level_FileSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process and thread: **{0}**.
        /// </summary>
        public static string Psf_Trace_Level_ProcessThread {
            get {
                return ResourceManager.GetString("Psf_Trace_Level_ProcessThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry: **{0}**.
        /// </summary>
        public static string Psf_Trace_Level_Registry {
            get {
                return ResourceManager.GetString("Psf_Trace_Level_Registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace levels:.
        /// </summary>
        public static string Psf_Trace_Levels {
            get {
                return ResourceManager.GetString("Psf_Trace_Levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unexpected failures.
        /// </summary>
        public static string Psf_Trace_UnexpectedFailures {
            get {
                return ResourceManager.GetString("Psf_Trace_UnexpectedFailures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About….
        /// </summary>
        public static string Sidebar_About {
            get {
                return ResourceManager.GetString("Sidebar_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Containers.
        /// </summary>
        public static string Sidebar_Containers {
            get {
                return ResourceManager.GetString("Sidebar_Containers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Events.
        /// </summary>
        public static string Sidebar_EventViewer {
            get {
                return ResourceManager.GetString("Sidebar_EventViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        public static string Sidebar_Packages {
            get {
                return ResourceManager.GetString("Sidebar_Packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings….
        /// </summary>
        public static string Sidebar_Settings {
            get {
                return ResourceManager.GetString("Sidebar_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System.
        /// </summary>
        public static string Sidebar_SystemStatus {
            get {
                return ResourceManager.GetString("Sidebar_SystemStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tools.
        /// </summary>
        public static string Sidebar_Tools {
            get {
                return ResourceManager.GetString("Sidebar_Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volumes.
        /// </summary>
        public static string Sidebar_Volumes {
            get {
                return ResourceManager.GetString("Sidebar_Volumes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration is valid and the certificate is trusted on this machine..
        /// </summary>
        public static string Signing_Test_OK {
            get {
                return ResourceManager.GetString("Signing_Test_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action could not be executed..
        /// </summary>
        public static string System_Action_Error {
            get {
                return ResourceManager.GetString("System_Action_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already installed.
        /// </summary>
        public static string System_Apps_AlreadyInstalled {
            get {
                return ResourceManager.GetString("System_Apps_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discover more tools….
        /// </summary>
        public static string System_Apps_Discover {
            get {
                return ResourceManager.GetString("System_Apps_Discover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get from Microsoft Store.
        /// </summary>
        public static string System_Apps_FromStore {
            get {
                return ResourceManager.GetString("System_Apps_FromStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX Tooling.
        /// </summary>
        public static string System_Apps_Recommendation {
            get {
                return ResourceManager.GetString("System_Apps_Recommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No MSIX authoring tool detected on this machine..
        /// </summary>
        public static string System_Apps_Recommendation_Option0 {
            get {
                return ResourceManager.GetString("System_Apps_Recommendation_Option0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One MSIX authoring tool has been discovered..
        /// </summary>
        public static string System_Apps_Recommendation_Option1 {
            get {
                return ResourceManager.GetString("System_Apps_Recommendation_Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two MSIX authoring tools have been discovered..
        /// </summary>
        public static string System_Apps_Recommendation_Option2 {
            get {
                return ResourceManager.GetString("System_Apps_Recommendation_Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Three MSIX authoring tools have been discovered..
        /// </summary>
        public static string System_Apps_Recommendation_Option3 {
            get {
                return ResourceManager.GetString("System_Apps_Recommendation_Option3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} MSIX authoring tools have been discovered..
        /// </summary>
        public static string System_Apps_Recommendation_OptionN {
            get {
                return ResourceManager.GetString("System_Apps_Recommendation_OptionN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic updates of Store apps.
        /// </summary>
        public static string System_AutoDownload_Recommendation {
            get {
                return ResourceManager.GetString("System_AutoDownload_Recommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default policy applies..
        /// </summary>
        public static string System_AutoDownload_Recommendation_Option0 {
            get {
                return ResourceManager.GetString("System_AutoDownload_Recommendation_Option0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic download is enabled..
        /// </summary>
        public static string System_AutoDownload_Recommendation_Option1 {
            get {
                return ResourceManager.GetString("System_AutoDownload_Recommendation_Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic download is disabled..
        /// </summary>
        public static string System_AutoDownload_Recommendation_Option2 {
            get {
                return ResourceManager.GetString("System_AutoDownload_Recommendation_Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Group Policy Editor.
        /// </summary>
        public static string System_AutoUpdates_GP_Editor {
            get {
                return ResourceManager.GetString("System_AutoUpdates_GP_Editor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn automatic download and install of updates on or off.
        /// </summary>
        public static string System_AutoUpdates_OnOff {
            get {
                return ResourceManager.GetString("System_AutoUpdates_OnOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings can be changed manually in Local Group Policy Editor in the following node:.
        /// </summary>
        public static string System_AutoUpdates_OnOff_GPO {
            get {
                return ResourceManager.GetString("System_AutoUpdates_OnOff_GPO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computer Configuration/Administrative Templates/Windows Components/Store.
        /// </summary>
        public static string System_AutoUpdates_OnOff_GPO_Path {
            get {
                return ResourceManager.GetString("System_AutoUpdates_OnOff_GPO_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use default settings.
        /// </summary>
        public static string System_AutoUpdates_Option1 {
            get {
                return ResourceManager.GetString("System_AutoUpdates_Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic download always enabled.
        /// </summary>
        public static string System_AutoUpdates_Option2 {
            get {
                return ResourceManager.GetString("System_AutoUpdates_Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic download always disabled.
        /// </summary>
        public static string System_AutoUpdates_Option3 {
            get {
                return ResourceManager.GetString("System_AutoUpdates_Option3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking your system….
        /// </summary>
        public static string System_Checking {
            get {
                return ResourceManager.GetString("System_Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing and debugging apps from outside of Microsoft Store.
        /// </summary>
        public static string System_DeveloperOptions {
            get {
                return ResourceManager.GetString("System_DeveloperOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developer mode.
        /// </summary>
        public static string System_DeveloperOptions_DevMode {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_DevMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only install apps from Microsoft Store.
        /// </summary>
        public static string System_DeveloperOptions_Option1 {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow only Microsoft Store apps.
        /// </summary>
        public static string System_DeveloperOptions_Option1_Short {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option1_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install apps from any trusted source (Microsoft Store and side-loaded packages).
        /// </summary>
        public static string System_DeveloperOptions_Option2 {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Microsoft Store and signed apps.
        /// </summary>
        public static string System_DeveloperOptions_Option2_Short {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option2_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install apps from any source, including loose files.
        /// </summary>
        public static string System_DeveloperOptions_Option3a {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option3a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow all apps (developer mode).
        /// </summary>
        public static string System_DeveloperOptions_Option3a_Short {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option3a_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install any signed and trusted app and enable development features.
        /// </summary>
        public static string System_DeveloperOptions_Option3b {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option3b", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow all apps (developer mode).
        /// </summary>
        public static string System_DeveloperOptions_Option3b_Short {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_Option3b_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Side-loading.
        /// </summary>
        public static string System_DeveloperOptions_SideLoading {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_SideLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system supports installing signed apps out-of-the-box..
        /// </summary>
        public static string System_DeveloperOptions_SideLoading_OutOfTheBox {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_SideLoading_OutOfTheBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings can be changed manually in Windows Settings app..
        /// </summary>
        public static string System_DeveloperOptions_WindowsSettings {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_WindowsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Settings.
        /// </summary>
        public static string System_DeveloperOptions_WindowsSettings_Link {
            get {
                return ResourceManager.GetString("System_DeveloperOptions_WindowsSettings_Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open the URL {0}..
        /// </summary>
        public static string System_Error_UrlCouldNotOpen {
            get {
                return ResourceManager.GetString("System_Error_UrlCouldNotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make most of MSIX.
        /// </summary>
        public static string System_Header {
            get {
                return ResourceManager.GetString("System_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See what&apos;s happening with MSIX, important services and related programs on your device and take any actions needed..
        /// </summary>
        public static string System_Header2 {
            get {
                return ResourceManager.GetString("System_Header2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string System_Refresh {
            get {
                return ResourceManager.GetString("System_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repackaging on this machine.
        /// </summary>
        public static string System_Repackaging {
            get {
                return ResourceManager.GetString("System_Repackaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No recommendations available.
        /// </summary>
        public static string System_Repackaging_Recommendation_Option0 {
            get {
                return ResourceManager.GetString("System_Repackaging_Recommendation_Option0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One recommendations available.
        /// </summary>
        public static string System_Repackaging_Recommendation_Option1 {
            get {
                return ResourceManager.GetString("System_Repackaging_Recommendation_Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two recommendations available.
        /// </summary>
        public static string System_Repackaging_Recommendation_Option2 {
            get {
                return ResourceManager.GetString("System_Repackaging_Recommendation_Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Three recommendations available.
        /// </summary>
        public static string System_Repackaging_Recommendation_Option3 {
            get {
                return ResourceManager.GetString("System_Repackaging_Recommendation_Option3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} recommendations available.
        /// </summary>
        public static string System_Repackaging_Recommendation_OptionN {
            get {
                return ResourceManager.GetString("System_Repackaging_Recommendation_OptionN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Windows Defender Settings.
        /// </summary>
        public static string System_Service_Defender {
            get {
                return ResourceManager.GetString("System_Service_Defender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable.
        /// </summary>
        public static string System_Service_Disable_Button {
            get {
                return ResourceManager.GetString("System_Service_Disable_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service is disabled..
        /// </summary>
        public static string System_Service_Disabled {
            get {
                return ResourceManager.GetString("System_Service_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to enable it.
        /// </summary>
        public static string System_Service_Disabled_Link {
            get {
                return ResourceManager.GetString("System_Service_Disabled_Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill process.
        /// </summary>
        public static string System_Service_Kill_Button {
            get {
                return ResourceManager.GetString("System_Service_Kill_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only apps from Microsoft Store can be installed..
        /// </summary>
        public static string System_Sideloading_Recommendation_Option1 {
            get {
                return ResourceManager.GetString("System_Sideloading_Recommendation_Option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sideloading of apps is enabled..
        /// </summary>
        public static string System_Sideloading_Recommendation_Option2 {
            get {
                return ResourceManager.GetString("System_Sideloading_Recommendation_Option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sideloading and development features are enabled..
        /// </summary>
        public static string System_Sideloading_Recommendation_Option3 {
            get {
                return ResourceManager.GetString("System_Sideloading_Recommendation_Option3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sideloading and development features.
        /// </summary>
        public static string System_Sideloading_Recommendation_Title {
            get {
                return ResourceManager.GetString("System_Sideloading_Recommendation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic updates of Microsoft Store apps.
        /// </summary>
        public static string System_StoreUpdates {
            get {
                return ResourceManager.GetString("System_StoreUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable automatic updates.
        /// </summary>
        public static string System_StoreUpdates_Disable_Button {
            get {
                return ResourceManager.GetString("System_StoreUpdates_Disable_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic updates are disabled..
        /// </summary>
        public static string System_StoreUpdates_Disabled {
            get {
                return ResourceManager.GetString("System_StoreUpdates_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to restore the default setting.
        /// </summary>
        public static string System_StoreUpdates_RestoreLink {
            get {
                return ResourceManager.GetString("System_StoreUpdates_RestoreLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Services can be managed from the Services snap-in:.
        /// </summary>
        public static string System_StoreUpdates_Services {
            get {
                return ResourceManager.GetString("System_StoreUpdates_Services", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Service Manager.
        /// </summary>
        public static string System_StoreUpdates_Services_ServMan {
            get {
                return ResourceManager.GetString("System_StoreUpdates_Services_ServMan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Store may occasionally update your apps managed by Store. This can create unrelated noise for packaging purposes. It is recommended to disable automatic updates on repackaging machines..
        /// </summary>
        public static string System_StoreUpdates2 {
            get {
                return ResourceManager.GetString("System_StoreUpdates2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing this setting requires admin rights..
        /// </summary>
        public static string System_UAC {
            get {
                return ResourceManager.GetString("System_UAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation requires administrative rights..
        /// </summary>
        public static string UacApp_AdminRightsRequired {
            get {
                return ResourceManager.GetString("UacApp_AdminRightsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value is not a valid GUID..
        /// </summary>
        public static string Validation_Guid {
            get {
                return ResourceManager.GetString("Validation_Guid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be a well-formed GUID..
        /// </summary>
        public static string Validation_Guid_Named {
            get {
                return ResourceManager.GetString("Validation_Guid_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value must be an integer.
        /// </summary>
        public static string Validation_Integer {
            get {
                return ResourceManager.GetString("Validation_Integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not an integer..
        /// </summary>
        public static string Validation_Integer_Named {
            get {
                return ResourceManager.GetString("Validation_Integer_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value cannot be empty..
        /// </summary>
        public static string Validation_NotEmptyField {
            get {
                return ResourceManager.GetString("Validation_NotEmptyField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be empty..
        /// </summary>
        public static string Validation_NotEmptyField_Named {
            get {
                return ResourceManager.GetString("Validation_NotEmptyField_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA-256 string is invalid. It must consist of exactly 64 hexadecimal characters..
        /// </summary>
        public static string Validation_Sha256Field {
            get {
                return ResourceManager.GetString("Validation_Sha256Field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has an invalid value. It must ba a valid SHA-256 hash consisting of exactly 64 hexadecimal characters..
        /// </summary>
        public static string Validation_Sha256Field_Named {
            get {
                return ResourceManager.GetString("Validation_Sha256Field_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol {0} is not supported..
        /// </summary>
        public static string Validation_SupportedWebProtocol {
            get {
                return ResourceManager.GetString("Validation_SupportedWebProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has an unsupported protocol {1}..
        /// </summary>
        public static string Validation_SupportedWebProtocol_Named {
            get {
                return ResourceManager.GetString("Validation_SupportedWebProtocol_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value must be a valid URL..
        /// </summary>
        public static string Validation_Url {
            get {
                return ResourceManager.GetString("Validation_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid URL..
        /// </summary>
        public static string Validation_Url_Named {
            get {
                return ResourceManager.GetString("Validation_Url_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version must be in format #.#.#.#..
        /// </summary>
        public static string Validation_VersionField {
            get {
                return ResourceManager.GetString("Validation_VersionField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be in format #.#.#.#..
        /// </summary>
        public static string Validation_VersionField_Named {
            get {
                return ResourceManager.GetString("Validation_VersionField_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove volume &apos;{0}&apos;? Removing of volumes affects only registration and does not delete any physical files..
        /// </summary>
        public static string Volumes_ConfirmRemoval {
            get {
                return ResourceManager.GetString("Volumes_ConfirmRemoval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismount.
        /// </summary>
        public static string Volumes_ContextMenu_Dismount {
            get {
                return ResourceManager.GetString("Volumes_ContextMenu_Dismount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount.
        /// </summary>
        public static string Volumes_ContextMenu_Mount {
            get {
                return ResourceManager.GetString("Volumes_ContextMenu_Mount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Volumes_ContextMenu_Remove {
            get {
                return ResourceManager.GetString("Volumes_ContextMenu_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set as default.
        /// </summary>
        public static string Volumes_ContextMenu_SetDefault {
            get {
                return ResourceManager.GetString("Volumes_ContextMenu_SetDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create….
        /// </summary>
        public static string Volumes_Create {
            get {
                return ResourceManager.GetString("Volumes_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the default volume.
        /// </summary>
        public static string Volumes_DefaultVolume {
            get {
                return ResourceManager.GetString("Volumes_DefaultVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Volumes_DefaultVolume_Caption {
            get {
                return ResourceManager.GetString("Volumes_DefaultVolume_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a default volume.
        /// </summary>
        public static string Volumes_DefaultVolume_Tooltip {
            get {
                return ResourceManager.GetString("Volumes_DefaultVolume_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detached.
        /// </summary>
        public static string Volumes_DetachedVolume_Caption {
            get {
                return ResourceManager.GetString("Volumes_DetachedVolume_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This volume is detached (offline).
        /// </summary>
        public static string Volumes_DetachedVolume_Tooltip {
            get {
                return ResourceManager.GetString("Volumes_DetachedVolume_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismounting volume….
        /// </summary>
        public static string Volumes_Dismounting {
            get {
                return ResourceManager.GetString("Volumes_Dismounting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not dismount the volume..
        /// </summary>
        public static string Volumes_DismountingError {
            get {
                return ResourceManager.GetString("Volumes_DismountingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not remove.
        /// </summary>
        public static string Volumes_DoNotRemove {
            get {
                return ResourceManager.GetString("Volumes_DoNotRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mounting volume….
        /// </summary>
        public static string Volumes_Mounting {
            get {
                return ResourceManager.GetString("Volumes_Mounting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not mount the volume..
        /// </summary>
        public static string Volumes_MountingError {
            get {
                return ResourceManager.GetString("Volumes_MountingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Volumes_No_Label {
            get {
                return ResourceManager.GetString("Volumes_No_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This volume is not mounted.
        /// </summary>
        public static string Volumes_NotMounted {
            get {
                return ResourceManager.GetString("Volumes_NotMounted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online.
        /// </summary>
        public static string Volumes_OnlineVolume_Caption {
            get {
                return ResourceManager.GetString("Volumes_OnlineVolume_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This volume is online.
        /// </summary>
        public static string Volumes_OnlineVolume_Tooltip {
            get {
                return ResourceManager.GetString("Volumes_OnlineVolume_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string Volumes_Refresh {
            get {
                return ResourceManager.GetString("Volumes_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not delete the volume..
        /// </summary>
        public static string Volumes_RemovalError {
            get {
                return ResourceManager.GetString("Volumes_RemovalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected volume.
        /// </summary>
        public static string Volumes_RemoveSelected {
            get {
                return ResourceManager.GetString("Volumes_RemoveSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search volumes….
        /// </summary>
        public static string Volumes_Search_Prompt {
            get {
                return ResourceManager.GetString("Volumes_Search_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the default volume….
        /// </summary>
        public static string Volumes_SettingDefault {
            get {
                return ResourceManager.GetString("Volumes_SettingDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not set the volume as the default volume..
        /// </summary>
        public static string Volumes_SettingDefaultError {
            get {
                return ResourceManager.GetString("Volumes_SettingDefaultError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple items selected.
        /// </summary>
        public static string Volumes_Sidebar_MultipleItems {
            get {
                return ResourceManager.GetString("Volumes_Sidebar_MultipleItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a single volume to display its properties..
        /// </summary>
        public static string Volumes_Sidebar_MultipleItems_Hint {
            get {
                return ResourceManager.GetString("Volumes_Sidebar_MultipleItems_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing selected.
        /// </summary>
        public static string Volumes_Sidebar_NoSelection {
            get {
                return ResourceManager.GetString("Volumes_Sidebar_NoSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} free of {1}.
        /// </summary>
        public static string Volumes_SizeConverter_Caption_Format {
            get {
                return ResourceManager.GetString("Volumes_SizeConverter_Caption_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string Volumes_Status {
            get {
                return ResourceManager.GetString("Volumes_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System.
        /// </summary>
        public static string Volumes_SystemVolume_Caption {
            get {
                return ResourceManager.GetString("Volumes_SystemVolume_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a system volume.
        /// </summary>
        public static string Volumes_SystemVolume_Tooltip {
            get {
                return ResourceManager.GetString("Volumes_SystemVolume_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Volumes_Yes_Label {
            get {
                return ResourceManager.GetString("Volumes_Yes_Label", resourceCulture);
            }
        }
    }
}
