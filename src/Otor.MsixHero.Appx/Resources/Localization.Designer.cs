//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Otor.MsixHero.Appx.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Otor.MsixHero.Appx.Resources.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting events, please wait….
        /// </summary>
        public static string Events_PleaseWait {
            get {
                return ResourceManager.GetString("Events_PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading {0}….
        /// </summary>
        public static string Events_Reading {
            get {
                return ResourceManager.GetString("Events_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates are available for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_NoUpdates_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_NoUpdates_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An optional update is available for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_OptionalUpdateAvailable_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_OptionalUpdateAvailable_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required update is available for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_RequiredUpdateAvailable_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_RequiredUpdateAvailable_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not check for updates for these packages:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_UpdateCheckFailed_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_UpdateCheckFailed_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These package were not installed via {0} file:.
        /// </summary>
        public static string PackageExpert_Commands_AppInstaller_WrongSource_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppInstaller_WrongSource_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apps removed.
        /// </summary>
        public static string PackageExpert_Commands_AppRemoved1_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemoved1_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} apps has been just removed..
        /// </summary>
        public static string PackageExpert_Commands_AppRemoved2_Multiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_AppRemoved2_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove {0} packages? This operation is irreversible..
        /// </summary>
        public static string PackageExpert_Commands_ConfirmRemovalMultiple {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_ConfirmRemovalMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to De-provisioning {0}….
        /// </summary>
        public static string PackageExpert_Commands_Deprovisioning {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_Deprovisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates are available for the following packages:.
        /// </summary>
        public static string PackageExpert_Commands_UpdatesAvailable {
            get {
                return ResourceManager.GetString("PackageExpert_Commands_UpdatesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing {0}….
        /// </summary>
        public static string Packages_Analyzing {
            get {
                return ResourceManager.GetString("Packages_Analyzing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying ACLs….
        /// </summary>
        public static string Packages_AppAttach_ApplyingACL {
            get {
                return ResourceManager.GetString("Packages_AppAttach_ApplyingACL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating JSON file….
        /// </summary>
        public static string Packages_AppAttach_CreatingJson {
            get {
                return ResourceManager.GetString("Packages_AppAttach_CreatingJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating scripts….
        /// </summary>
        public static string Packages_AppAttach_CreatingScripts {
            get {
                return ResourceManager.GetString("Packages_AppAttach_CreatingScripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanding MSIX….
        /// </summary>
        public static string Packages_AppAttach_Expanding {
            get {
                return ResourceManager.GetString("Packages_AppAttach_Expanding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing….
        /// </summary>
        public static string Packages_AppAttach_Initializing {
            get {
                return ResourceManager.GetString("Packages_AppAttach_Initializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpacking {0}….
        /// </summary>
        public static string Packages_AppAttach_Unpacking_Format {
            get {
                return ResourceManager.GetString("Packages_AppAttach_Unpacking_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpacking MSIX….
        /// </summary>
        public static string Packages_AppAttach_UnpackingMsix {
            get {
                return ResourceManager.GetString("Packages_AppAttach_UnpackingMsix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to De-provisioning for all users.
        /// </summary>
        public static string Packages_Deprovision_AllUsers {
            get {
                return ResourceManager.GetString("Packages_Deprovision_AllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use the flag AllBundleResources with non-bundle packages..
        /// </summary>
        public static string Packages_Error_AllBundleResources {
            get {
                return ResourceManager.GetString("Packages_Error_AllBundleResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finishing….
        /// </summary>
        public static string Packages_Error_AppAttachFinishing {
            get {
                return ResourceManager.GetString("Packages_Error_AppAttachFinishing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot install a package from .appinstaller for all users..
        /// </summary>
        public static string Packages_Error_AppInstallerAllUsers {
            get {
                return ResourceManager.GetString("Packages_Error_AppInstallerAllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot force a downgrade with .appinstaller. The .appinstaller defines on its own whether the downgrade is allowed..
        /// </summary>
        public static string Packages_Error_AppInstallerDowngrade {
            get {
                return ResourceManager.GetString("Packages_Error_AppInstallerDowngrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundles are not supported..
        /// </summary>
        public static string Packages_Error_BundleNotSupported {
            get {
                return ResourceManager.GetString("Packages_Error_BundleNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package cannot be installed, because it is not signed by a trusted certificate..
        /// </summary>
        public static string Packages_Error_CertTrust {
            get {
                return ResourceManager.GetString("Packages_Error_CertTrust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developer mode must be enabled to use this feature..
        /// </summary>
        public static string Packages_Error_DeveloperMode {
            get {
                return ResourceManager.GetString("Packages_Error_DeveloperMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory &apos;{0}&apos; does not exist..
        /// </summary>
        public static string Packages_Error_DirectoryMissing_Format {
            get {
                return ResourceManager.GetString("Packages_Error_DirectoryMissing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disk format {0} is not supported..
        /// </summary>
        public static string Packages_Error_DiskFormatNotSupported {
            get {
                return ResourceManager.GetString("Packages_Error_DiskFormatNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package path must not be empty..
        /// </summary>
        public static string Packages_Error_EmptyPath {
            get {
                return ResourceManager.GetString("Packages_Error_EmptyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume path must not be empty..
        /// </summary>
        public static string Packages_Error_EmptyVolumePath {
            get {
                return ResourceManager.GetString("Packages_Error_EmptyVolumePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension {0} is not supported..
        /// </summary>
        public static string Packages_Error_ExtensionNotSupported_Format {
            get {
                return ResourceManager.GetString("Packages_Error_ExtensionNotSupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; does not exist..
        /// </summary>
        public static string Packages_Error_FileMissing_Format {
            get {
                return ResourceManager.GetString("Packages_Error_FileMissing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found..
        /// </summary>
        public static string Packages_Error_FileNotFound {
            get {
                return ResourceManager.GetString("Packages_Error_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path {0} is not supported..
        /// </summary>
        public static string Packages_Error_FileNotSupported {
            get {
                return ResourceManager.GetString("Packages_Error_FileNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This folder contains no executable files..
        /// </summary>
        public static string Packages_Error_Folder_NoExe {
            get {
                return ResourceManager.GetString("Packages_Error_Folder_NoExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full name must be a string with 5 units, separated by underscores..
        /// </summary>
        public static string Packages_Error_FullName {
            get {
                return ResourceManager.GetString("Packages_Error_FullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid full package name. String &apos;{1}&apos; is not a valid package architecture..
        /// </summary>
        public static string Packages_Error_FullNameInvalid_Architecture_Format {
            get {
                return ResourceManager.GetString("Packages_Error_FullNameInvalid_Architecture_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid full package name. String &apos;{1}&apos; is not a valid publisher hash..
        /// </summary>
        public static string Packages_Error_FullNameInvalid_Hash_Format {
            get {
                return ResourceManager.GetString("Packages_Error_FullNameInvalid_Hash_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid full package name. String &apos;{1}&apos; is not a valid version..
        /// </summary>
        public static string Packages_Error_FullNameInvalid_Version_Format {
            get {
                return ResourceManager.GetString("Packages_Error_FullNameInvalid_Version_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not install {0} {1}..
        /// </summary>
        public static string Packages_Error_Install_Format {
            get {
                return ResourceManager.GetString("Packages_Error_Install_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid version format, major version is required..
        /// </summary>
        public static string Packages_Error_InvalidVersion {
            get {
                return ResourceManager.GetString("Packages_Error_InvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is malformed, missing &lt;Identity /&gt;..
        /// </summary>
        public static string Packages_Error_Manifest_Identity {
            get {
                return ResourceManager.GetString("Packages_Error_Manifest_Identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is malformed. There is no root element..
        /// </summary>
        public static string Packages_Error_Manifest_Root {
            get {
                return ResourceManager.GetString("Packages_Error_Manifest_Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is malformed. The document root must be &lt;Package /&gt; element..
        /// </summary>
        public static string Packages_Error_Manifest_Root_Package {
            get {
                return ResourceManager.GetString("Packages_Error_Manifest_Root_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is malformed. The document root must be &lt;Package /&gt; element, belonging to a supported namespace..
        /// </summary>
        public static string Packages_Error_Manifest_Root_Package_Namespace {
            get {
                return ResourceManager.GetString("Packages_Error_Manifest_Root_Package_Namespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file has not been found..
        /// </summary>
        public static string Packages_Error_ManifestNotFound {
            get {
                return ResourceManager.GetString("Packages_Error_ManifestNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate resource {0}..
        /// </summary>
        public static string Packages_Error_MissingResource_Format {
            get {
                return ResourceManager.GetString("Packages_Error_MissingResource_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not mount the drive..
        /// </summary>
        public static string Packages_Error_Mount {
            get {
                return ResourceManager.GetString("Packages_Error_Mount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read the content of the mounted file..
        /// </summary>
        public static string Packages_Error_MountContent {
            get {
                return ResourceManager.GetString("Packages_Error_MountContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry point &apos;{0}&apos; was not found..
        /// </summary>
        public static string Packages_Error_NoEntryPoint_Format {
            get {
                return ResourceManager.GetString("Packages_Error_NoEntryPoint_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute a command in this package context. The package does not have any applications defined..
        /// </summary>
        public static string Packages_Error_NoEntryPointCmd {
            get {
                return ResourceManager.GetString("Packages_Error_NoEntryPointCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package has no Start Menu entry points..
        /// </summary>
        public static string Packages_Error_NoStartMenu {
            get {
                return ResourceManager.GetString("Packages_Error_NoStartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package could not be registered..
        /// </summary>
        public static string Packages_Error_Registering {
            get {
                return ResourceManager.GetString("Packages_Error_Registering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported on this version of Windows. You need at least Windows 11 build 21354 (10.0.21354) to use this feature..
        /// </summary>
        public static string Packages_Error_SharedContainerNotSupported {
            get {
                return ResourceManager.GetString("Packages_Error_SharedContainerNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required package source is not supported..
        /// </summary>
        public static string Packages_Error_SrcNotSupported {
            get {
                return ResourceManager.GetString("Packages_Error_SrcNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target path must be a directory..
        /// </summary>
        public static string Packages_Error_TargetNotDir {
            get {
                return ResourceManager.GetString("Packages_Error_TargetNotDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required template {0} was not found..
        /// </summary>
        public static string Packages_Error_TemplateNotFound_Format {
            get {
                return ResourceManager.GetString("Packages_Error_TemplateNotFound_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool requires admin rights..
        /// </summary>
        public static string Packages_Error_Uac {
            get {
                return ResourceManager.GetString("Packages_Error_Uac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume {0} could not be created..
        /// </summary>
        public static string Packages_Error_VolumeCreation_Format {
            get {
                return ResourceManager.GetString("Packages_Error_VolumeCreation_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find volume &apos;{0}&apos;..
        /// </summary>
        public static string Packages_Error_VolumeNotFound_Format {
            get {
                return ResourceManager.GetString("Packages_Error_VolumeNotFound_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting certificate….
        /// </summary>
        public static string Packages_ExtractingCert {
            get {
                return ResourceManager.GetString("Packages_ExtractingCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting certificate from {0}….
        /// </summary>
        public static string Packages_ExtractingCertFrom_Format {
            get {
                return ResourceManager.GetString("Packages_ExtractingCertFrom_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting installed apps….
        /// </summary>
        public static string Packages_GettingApps {
            get {
                return ResourceManager.GetString("Packages_GettingApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {0}….
        /// </summary>
        public static string Packages_Installing_Format {
            get {
                return ResourceManager.GetString("Packages_Installing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing from {0}….
        /// </summary>
        public static string Packages_InstallingFrom_Format {
            get {
                return ResourceManager.GetString("Packages_InstallingFrom_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification Package for {0}.
        /// </summary>
        public static string Packages_ModPackage_DefaultDescription_Format {
            get {
                return ResourceManager.GetString("Packages_ModPackage_DefaultDescription_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification Package Name.
        /// </summary>
        public static string Packages_ModPackage_DefaultPackageName {
            get {
                return ResourceManager.GetString("Packages_ModPackage_DefaultPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification Package Publisher Name.
        /// </summary>
        public static string Packages_ModPackage_DefaultPublisherName {
            get {
                return ResourceManager.GetString("Packages_ModPackage_DefaultPublisherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;PackageDirectory&gt;.
        /// </summary>
        public static string Packages_PkgDir_Placeholder {
            get {
                return ResourceManager.GetString("Packages_PkgDir_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;PackageDrive&gt;.
        /// </summary>
        public static string Packages_PkgDrv_Placeholder {
            get {
                return ResourceManager.GetString("Packages_PkgDrv_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get the list of running processes..
        /// </summary>
        public static string Packages_Processes_CheckError {
            get {
                return ResourceManager.GetString("Packages_Processes_CheckError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning {0} {1}….
        /// </summary>
        public static string Packages_Provisioning_Format {
            get {
                return ResourceManager.GetString("Packages_Provisioning_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files with extension {0}.
        /// </summary>
        public static string Packages_Psf_FilesWithExt_Format {
            get {
                return ResourceManager.GetString("Packages_Psf_FilesWithExt_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing….
        /// </summary>
        public static string Packages_Removing {
            get {
                return ResourceManager.GetString("Packages_Removing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing {0}….
        /// </summary>
        public static string Packages_Removing_Format {
            get {
                return ResourceManager.GetString("Packages_Removing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 + AI.
        /// </summary>
        public static string Packages_Types_AiStub {
            get {
                return ResourceManager.GetString("Packages_Types_AiStub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classic Win32 app enhanced by Advanced Installer launcher.
        /// </summary>
        public static string Packages_Types_AiStub_Long {
            get {
                return ResourceManager.GetString("Packages_Types_AiStub_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AI.
        /// </summary>
        public static string Packages_Types_AiStub_Short {
            get {
                return ResourceManager.GetString("Packages_Types_AiStub_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App.
        /// </summary>
        public static string Packages_Types_App {
            get {
                return ResourceManager.GetString("Packages_Types_App", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framework.
        /// </summary>
        public static string Packages_Types_Framework {
            get {
                return ResourceManager.GetString("Packages_Types_Framework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 + MSIX Helper.
        /// </summary>
        public static string Packages_Types_MsixHelper {
            get {
                return ResourceManager.GetString("Packages_Types_MsixHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classic Win32 app enhanced by MSIX Helper.
        /// </summary>
        public static string Packages_Types_MsixHelper_Long {
            get {
                return ResourceManager.GetString("Packages_Types_MsixHelper_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSIX Helper.
        /// </summary>
        public static string Packages_Types_MsixHelper_Short {
            get {
                return ResourceManager.GetString("Packages_Types_MsixHelper_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 + PSF.
        /// </summary>
        public static string Packages_Types_Psf {
            get {
                return ResourceManager.GetString("Packages_Types_Psf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classic Win32 app enhanced by Package Support Framework (PSF).
        /// </summary>
        public static string Packages_Types_Psf_Long {
            get {
                return ResourceManager.GetString("Packages_Types_Psf_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PSF.
        /// </summary>
        public static string Packages_Types_Psf_Short {
            get {
                return ResourceManager.GetString("Packages_Types_Psf_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PWA.
        /// </summary>
        public static string Packages_Types_Pwa {
            get {
                return ResourceManager.GetString("Packages_Types_Pwa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progressive Web Application.
        /// </summary>
        public static string Packages_Types_Pwa_Long {
            get {
                return ResourceManager.GetString("Packages_Types_Pwa_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string Packages_Types_Unknown {
            get {
                return ResourceManager.GetString("Packages_Types_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UWP.
        /// </summary>
        public static string Packages_Types_UWP {
            get {
                return ResourceManager.GetString("Packages_Types_UWP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Universal Windows Platform (UWP) app.
        /// </summary>
        public static string Packages_Types_UWP_Long {
            get {
                return ResourceManager.GetString("Packages_Types_UWP_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32.
        /// </summary>
        public static string Packages_Types_W32 {
            get {
                return ResourceManager.GetString("Packages_Types_W32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classic Win32 app.
        /// </summary>
        public static string Packages_Types_W32_Long {
            get {
                return ResourceManager.GetString("Packages_Types_W32_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates failed from an unspecified reason..
        /// </summary>
        public static string Packages_Update_CheckError {
            get {
                return ResourceManager.GetString("Packages_Update_CheckError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing added files….
        /// </summary>
        public static string Packages_UpdateImpact_AnalyzingAdded {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_AnalyzingAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing changed files….
        /// </summary>
        public static string Packages_UpdateImpact_AnalyzingChanges {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_AnalyzingChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing deleted files….
        /// </summary>
        public static string Packages_UpdateImpact_AnalyzingDeleted {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_AnalyzingDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing unchanged files….
        /// </summary>
        public static string Packages_UpdateImpact_AnalyzingUnchanged {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_AnalyzingUnchanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating file status (1/2)….
        /// </summary>
        public static string Packages_UpdateImpact_Calculating1 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Calculating1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating file status (2/2)….
        /// </summary>
        public static string Packages_UpdateImpact_Calculating2 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Calculating2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing files….
        /// </summary>
        public static string Packages_UpdateImpact_ComparingFiles {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_ComparingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finding duplicates….
        /// </summary>
        public static string Packages_UpdateImpact_Deduplicating {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Deduplicating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing duplication impact (1/3)….
        /// </summary>
        public static string Packages_UpdateImpact_DeduplicatingImpact1 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_DeduplicatingImpact1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing duplication impact (2/3)….
        /// </summary>
        public static string Packages_UpdateImpact_DeduplicatingImpact2 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_DeduplicatingImpact2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing duplication impact (3/3)….
        /// </summary>
        public static string Packages_UpdateImpact_DeduplicatingImpact3 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_DeduplicatingImpact3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A bundle can be only compared to another bundle..
        /// </summary>
        public static string Packages_UpdateImpact_Error_BundleMismatch {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_BundleMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundles are not supported..
        /// </summary>
        public static string Packages_UpdateImpact_Error_BundleNotSupported {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_BundleNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} is not supported..
        /// </summary>
        public static string Packages_UpdateImpact_Error_FileNotsupported_Format {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_FileNotsupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read the package. File {0} has invalid or unsupported format..
        /// </summary>
        public static string Packages_UpdateImpact_Error_FormatNotSupported_Format {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_FormatNotSupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} is not a valid MSIX bundle..
        /// </summary>
        public static string Packages_UpdateImpact_Error_NotABundle_Format {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_NotABundle_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} is not a valid MSIX..
        /// </summary>
        public static string Packages_UpdateImpact_Error_NotMsix_Format {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_NotMsix_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; cannot upgrade the package &apos;{1}&apos; because they do not share the same family name..
        /// </summary>
        public static string Packages_UpdateImpact_Error_SameFamily_Format {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_SameFamily_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; version &apos;{1}&apos; cannot update the package &apos;{2}&apos; version &apos;{3}&apos;. The version of the upgrade package must be higher than &apos;{3}&apos;..
        /// </summary>
        public static string Packages_UpdateImpact_Error_Version_Format {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Error_Version_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading the first package….
        /// </summary>
        public static string Packages_UpdateImpact_Reading1 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Reading1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading the second package….
        /// </summary>
        public static string Packages_UpdateImpact_Reading2 {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Reading2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading AppxBlockMap.xml….
        /// </summary>
        public static string Packages_UpdateImpact_ReadingBlock {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_ReadingBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading files….
        /// </summary>
        public static string Packages_UpdateImpact_ReadingFiles {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_ReadingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait….
        /// </summary>
        public static string Packages_UpdateImpact_Wait {
            get {
                return ResourceManager.GetString("Packages_UpdateImpact_Wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string Psf_Descriptor_AllFiles {
            get {
                return ResourceManager.GetString("Psf_Descriptor_AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature algorithm {0} is not supported..
        /// </summary>
        public static string Signing_AlgNotSupported {
            get {
                return ResourceManager.GetString("Signing_AlgNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing-in….
        /// </summary>
        public static string Signing_DeviceGuard_LoggingIn {
            get {
                return ResourceManager.GetString("Signing_DeviceGuard_LoggingIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing with Device Guard….
        /// </summary>
        public static string Signing_DeviceGuard_Signing {
            get {
                return ResourceManager.GetString("Signing_DeviceGuard_Signing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating signing capabilities….
        /// </summary>
        public static string Signing_DeviceGuard_Validation {
            get {
                return ResourceManager.GetString("Signing_DeviceGuard_Validation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version &apos;{0}&apos; is not a valid version string. The manifest seems to be corrupted..
        /// </summary>
        public static string Signing_Error_InvalidVersion_Format {
            get {
                return ResourceManager.GetString("Signing_Error_InvalidVersion_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;Version&apos; does not exist in the package identity element. The manifest seems to be corrupted..
        /// </summary>
        public static string Signing_Error_MissingVersionManifest {
            get {
                return ResourceManager.GetString("Signing_Error_MissingVersionManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing XML element {0}..
        /// </summary>
        public static string Signing_Error_MissingXml_Format {
            get {
                return ResourceManager.GetString("Signing_Error_MissingXml_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; contains no XML manifest..
        /// </summary>
        public static string Signing_Error_NoManifest {
            get {
                return ResourceManager.GetString("Signing_Error_NoManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        public static string Signing_Error_NotFound_Format {
            get {
                return ResourceManager.GetString("Signing_Error_NotFound_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected certificate could not be located in the store..
        /// </summary>
        public static string Signing_Error_NotFoundInStore {
            get {
                return ResourceManager.GetString("Signing_Error_NotFoundInStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get a random timestamp server..
        /// </summary>
        public static string Signing_Error_RandomTimeStamp {
            get {
                return ResourceManager.GetString("Signing_Error_RandomTimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not update the package manifest..
        /// </summary>
        public static string Signing_Error_UpdateManifestFailed {
            get {
                return ResourceManager.GetString("Signing_Error_UpdateManifestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did you start MSIX Hero as administrator?.
        /// </summary>
        public static string Signing_Install_AreYouAdmin {
            get {
                return ResourceManager.GetString("Signing_Install_AreYouAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not install certificate {0}. The file may be invalid, corrupted or missing. System error code: {1}.
        /// </summary>
        public static string Signing_Install_Failed_Format {
            get {
                return ResourceManager.GetString("Signing_Install_Failed_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file is not supported..
        /// </summary>
        public static string Signing_Install_NotSupported {
            get {
                return ResourceManager.GetString("Signing_Install_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing….
        /// </summary>
        public static string Signing_Signing {
            get {
                return ResourceManager.GetString("Signing_Signing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature algorithm {0} is not supported..
        /// </summary>
        public static string Signing_Test_AlgorithmNotSupported_Format {
            get {
                return ResourceManager.GetString("Signing_Test_AlgorithmNotSupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Guard is not configured. Log in to Device Guard service first..
        /// </summary>
        public static string Signing_Test_DeviceGuardConfigMissing {
            get {
                return ResourceManager.GetString("Signing_Test_DeviceGuardConfigMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error..
        /// </summary>
        public static string Signing_Test_InternalError {
            get {
                return ResourceManager.GetString("Signing_Test_InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected certificate is not for code-signing..
        /// </summary>
        public static string Signing_Test_MissingKeyUsage {
            get {
                return ResourceManager.GetString("Signing_Test_MissingKeyUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected certificate does not contain a private key..
        /// </summary>
        public static string Signing_Test_NoPrivateKey {
            get {
                return ResourceManager.GetString("Signing_Test_NoPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing succeeded, but the certificate &apos;{0}&apos; is not trusted on this machine..
        /// </summary>
        public static string Signing_Test_OK_NotTrusted_Format {
            get {
                return ResourceManager.GetString("Signing_Test_OK_NotTrusted_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing configuration is valid, but the Device Guard certificate is not trusted on this machine..
        /// </summary>
        public static string Signing_Test_OK_NotTrustedDG {
            get {
                return ResourceManager.GetString("Signing_Test_OK_NotTrustedDG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a certificate with thumbprint = &apos;{0}&apos;..
        /// </summary>
        public static string Signing_Test_WrongThumbPrint_Format {
            get {
                return ResourceManager.GetString("Signing_Test_WrongThumbPrint_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect password..
        /// </summary>
        public static string Signing_WrongPassword {
            get {
                return ResourceManager.GetString("Signing_WrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CrossGen.
        /// </summary>
        public static string System_Process_crossgen {
            get {
                return ResourceManager.GetString("System_Process_crossgen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool optimizes .NET Core assemblies by creating their native images with compiled processor-specific machine code. Wait for the tool to finish before starting the repackaging..
        /// </summary>
        public static string System_Process_crossgen_Description {
            get {
                return ResourceManager.GetString("System_Process_crossgen_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Assembly Cache Tool.
        /// </summary>
        public static string System_Process_gacutil {
            get {
                return ResourceManager.GetString("System_Process_gacutil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Assembly Cache tool performs manipulations on the contents of the Global Assembly Cache and download cache folders. Wait for the tool to finish before starting the repackaging..
        /// </summary>
        public static string System_Process_gacutil_Description {
            get {
                return ResourceManager.GetString("System_Process_gacutil_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Installer.
        /// </summary>
        public static string System_Process_msiexec {
            get {
                return ResourceManager.GetString("System_Process_msiexec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Installer is running in the background which may cause unrelated system changes to be captured during the repackaging. Wait for all installations to finish before starting the repackaging..
        /// </summary>
        public static string System_Process_msiexec_Description {
            get {
                return ResourceManager.GetString("System_Process_msiexec_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Native Image Generator.
        /// </summary>
        public static string System_Process_ngen {
            get {
                return ResourceManager.GetString("System_Process_ngen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool optimizes .NET Framework assemblies by creating and installing their native images with compiled processor-specific machine code. Wait for the tool to finish before starting the repackaging..
        /// </summary>
        public static string System_Process_ngen_Description {
            get {
                return ResourceManager.GetString("System_Process_ngen_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Center Configuration Manager Agent is responsible for managed installation, maintenance and removal of software. If it is active, unrelated system changes may be captured during the repackaging..
        /// </summary>
        public static string System_Service_ccmexec {
            get {
                return ResourceManager.GetString("System_Service_ccmexec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service performs maintenance activities on the Offline Files cache. If it is active, unrelated system changes may be captured during the repackaging..
        /// </summary>
        public static string System_Service_cscservice {
            get {
                return ResourceManager.GetString("System_Service_cscservice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling this service may improve performance and reduce the amount of unrelated captured changes in repackaged apps..
        /// </summary>
        public static string System_Service_dps {
            get {
                return ResourceManager.GetString("System_Service_dps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service is responsible for background indexing of files and their content. If it is active, unrelated system changes may be captured during the repackaging..
        /// </summary>
        public static string System_Service_wsearch {
            get {
                return ResourceManager.GetString("System_Service_wsearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service may update, install and uninstall software which is not related to the app being repackaged..
        /// </summary>
        public static string System_Service_wuauserv {
            get {
                return ResourceManager.GetString("System_Service_wuauserv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismounting {0}….
        /// </summary>
        public static string Volumes_Dismounting_Format {
            get {
                return ResourceManager.GetString("Volumes_Dismounting_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mounting {0}….
        /// </summary>
        public static string Volumes_Mounting_Format {
            get {
                return ResourceManager.GetString("Volumes_Mounting_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving to another volume….
        /// </summary>
        public static string Volumes_Moving {
            get {
                return ResourceManager.GetString("Volumes_Moving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing {0}….
        /// </summary>
        public static string Volumes_Removing_Format {
            get {
                return ResourceManager.GetString("Volumes_Removing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume could not be removed, because it contains at least one app. Remove all apps from this volume to remove it..
        /// </summary>
        public static string Volumes_RemovingError_NotEmpty {
            get {
                return ResourceManager.GetString("Volumes_RemovingError_NotEmpty", resourceCulture);
            }
        }
    }
}
